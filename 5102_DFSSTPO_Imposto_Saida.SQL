/*
 @C:\Web_649\Sql\End_Conv\Oracle\5102_DFSSTPO_Imposto_Saida.SQL

 Descrição:
 Procedure para geração dos impostos e valor final das notas de saída e dos valores contabéis

 Parâmetros

 P_EMPRESA     - Código da empresa
 P_PRODUTO     - Código de árvore do prduto(CDARVPROD)
 P_INSCESTA    - Inscrição estadual do lançamento
 P_TIPOOPER    - Tipo de operação do lançamento
 P_CLIENTE     - Código do destinatário da nota (CDCLIENTE, CDFORNECED ou CDFILIAL)
 P_FILIAL      - Código da filial do lançamento (CDFILIAL)
 P_LANCTONF    - Número do lançamento (NRLANCTONF)
 P_INIVALID    - Data de saída do lançamento
 P_VRNOTAFISC  - Valor final da nota                           
 P_LANCESTQ    - Número do lançamento de estoque
 P_CDOPERADOR  - Operador gravado na LANCTOESTOQ

 raise_application_error(-20501, '' , True);
*/

CREATE OR REPLACE PROCEDURE IMPOSTO_SAIDA(
   P_EMPRESA    IN ALIQUOTA.CDEMPRESA%TYPE,
   P_INSCESTA   IN ALIQUOTA.CDINSCESTA%TYPE,
   P_TIPOOPER   IN INCIDENCIA.CDTIPOOPER%TYPE,
   P_CLIENTE    IN CLIENTE.CDCLIENTE%TYPE,
   P_FILIAL     IN NOTAFISCAL.CDFILIAL%TYPE,
   P_LANCTONF   IN NOTAFISCAL.NRLANCTONF%TYPE,
   P_INIVALID   IN ALIQUOTA.DTINIVALID%TYPE,
   P_VRNOTAFISC OUT NUMBER,
   P_LANCESTQ   IN LANCTOESTOQ.NRLANCESTQ%TYPE DEFAULT NULL,
   P_CDOPERADOR IN LANCTOESTOQ.CDOPERADOR%TYPE DEFAULT NULL)

IS
   V_TESTE          NUMBER;
   V_IDTRATIMPO     VARCHAR2(01);
   V_PAISORIG       VARCHAR2(04); -- Pais de origem (utiliza UF de Origem)
   V_ESTAORIG       VARCHAR2(02); -- Estado de origem (utiliza UF de Origem)
   V_MUNIORIG       VARCHAR2(04); -- Municipio de origem (utiliza municipio)
   V_PAISDEST       VARCHAR2(04);
   V_ESTADEST       VARCHAR2(02);
   V_MUNIDEST       VARCHAR2(04);
   V_IDUTMUNIORIG   VARCHAR2(04);
   V_PAISCFOP       VARCHAR2(04);
   V_ESTACFOP       VARCHAR2(02);
   V_CDPAISST       VARCHAR2(04);
   V_SGESTADOST     VARCHAR2(02);
   V_CDMUNICIPIOST  VARCHAR2(04);
   V_CDINSCESTAST   VARCHAR2(16);
   V_ALIQTEMP       VARCHAR2(14);
   V_NRALIQTEMP     VARCHAR2(14);
   V_DADOADIC       VARCHAR2(03);
   V_DADOADICFISCO  VARCHAR2(03);
   V_INCITEMP       VARCHAR2(14);
   V_CST1DIGT       VARCHAR2(1);
   V_CSTTEMP        VARCHAR2(14);
   V_FISCALIT       VARCHAR2(20);
   V_CFOPTEMP       VARCHAR2(14);
   V_FISOPEITEM     VARCHAR2(11);
   V_SUFXCFOPPR     VARCHAR2(03);
   V_SITUTRIBPR     VARCHAR2(03);
   V_NRINSJURNF     VARCHAR2(20);
   V_SERIE          VARCHAR2(05);
   V_TIPOMOVI       VARCHAR2(01);
   V_CDFISCOPER     VARCHAR2(11);
   V_CDFILIEMIT     VARCHAR2(04);
   V_CDFILIRECE     VARCHAR2(04);
   V_ORIGDESTOP     VARCHAR2(01);
   V_CDFISOPENTF    VARCHAR2(11);
   V_IDENDCFOP      VARCHAR2(01);
   V_IDENDEMIS      VARCHAR2(01);
   V_CDEMPRESA      VARCHAR2(02);
   V_CDINSCESTA     VARCHAR2(16);
   V_CDINTEGRACAO   VARCHAR2(16);
   V_IDORIGDESTNF   VARCHAR2(01);
   V_NRLANBOLREC    VARCHAR2(10);
   V_IDDOCFINANC    VARCHAR2(01);
   V_IDERROAVISO    VARCHAR2(01);
   V_IDDOCREPLIC    VARCHAR2(14);
   V_IDDOCESTOQ     VARCHAR2(14);
   V_IDSISTEMA      VARCHAR2(03);
   V_IDRETPROEXP    VARCHAR2(01);
   V_IDATUEST       VARCHAR2(01);
   V_NMTIPOOPER     VARCHAR2(30);
   V_NMFILIRECE     VARCHAR2(60);
   V_DESCLANC       VARCHAR2(60);
   V_CDFISCTEMP     VARCHAR2(01);
   V_CDDETALHEPRODTEMP VARCHAR2(05);
   V_TRATIMPST      VARCHAR2(01);
   V_IDTRIMPSTII    VARCHAR2(01);
   V_CDIMPOSTRIB    VARCHAR2(250);
   V_CDIMPOSICMS    VARCHAR2(250);
   V_IDCTRLESTQ     VARCHAR2(01);
   V_CDFILIAPFATU   VARCHAR2(04);
   V_NRAPFATUTNF    VARCHAR2(10);
   V_IDITEMISSAO    VARCHAR2(01);
   V_CDIMPOBCALC    VARCHAR2(02);
   V_IDIMPOSTONF    VARCHAR2(01);
   V_IDVRIMPSTRIB   VARCHAR2(01);
   V_IDDEVOLIST     VARCHAR2(01);
   V_IDUTLLISTORI   VARCHAR2(01);

   /*ENCARGO CALCULADO PELO VALOR CADASTRADO POR PESO DO PRODUTO CASO UTILIZE CALCULO DO VALOR DO FRETE PARAMETRIZADO PARA O TIPO DE OPERAÇÃO*/
   V_IDCALCVALFRETE VARCHAR2(01);
   V_VALFRETEPROD   NUMBER;
   V_ENCARGOINFO    NUMBER;
   V_QTENCRELAC     NUMBER;

   V_IDUTILALMOX    VARCHAR2(01);
   V_IDUTILLCESTQ   VARCHAR2(01);
   V_IDUTILLOTE     VARCHAR2(01);
   V_IDPMCBASECAL   VARCHAR2(01);
   V_IDTPCOMPPROD   VARCHAR2(01);
   V_NRINSJURCLIE   VARCHAR2(20);
   V_UTIBB          VARCHAR2(01);
   V_IDNTRANSCREICMS VARCHAR2(01);

   V_CDSITTRIBTMP    CODSITUTRIBNFE.CDSITUTRIBNFE%TYPE;
   V_IDMODBCNFE      CODSITUTRIBNFE.IDMODBCNFE%TYPE;
   V_IDMOTIDESSTNFE  CODSITUTRIBNFE.IDMOTIDESSTNFE%TYPE;
   V_IDMODBCSTNFE    CODSITUTRIBNFE.IDMODBCSTNFE%TYPE;
   V_CDTPCRPICOSTNFE CODSITUTRIBNFE.CDTPCRPICOSTNFE%TYPE;
   V_CDNATUBCPCSTNFE CODSITUTRIBNFE.CDNATUBCPCSTNFE%TYPE;

   V_CDSITUTRIBNFE     CODSITUTRIBNFE.CDSITUTRIBNFE%TYPE;
   V_IDMODBCNFEIT      CODSITUTRIBNFE.IDMODBCNFE%TYPE;
   V_IDMODBCSTNFEIT    CODSITUTRIBNFE.IDMODBCSTNFE%TYPE;
   V_CDTPCRPICOSTNFEIT CODSITUTRIBNFE.CDTPCRPICOSTNFE%TYPE;
   V_CDNATUBCPCSTNFEIT CODSITUTRIBNFE.CDNATUBCPCSTNFE%TYPE;

   V_IDINTEREST   VARCHAR2(01);
   V_IDCONSPARFIS VARCHAR2(01);
   V_CDFISCOPERSN ITEMPRODUTO.CDFISCOPERSN%TYPE;
   V_IDINTERNA VARCHAR2(01);
   V_PARDEDTMP    NUMBER;
   V_PREDBCTMP    NUMBER;
   V_PREDBCSTIT   NUMBER;
   V_ALIQUTMP     NUMBER;
   V_VRIMPOSTOREP NUMBER;
   V_COUNT        NUMBER;
   V_ERROAVISO    NUMBER;
   V_LIQUIITEM    NUMBER;
   V_TOTALNOTA    NUMBER;
   V_LIQUIDO      NUMBER;
   V_SOMAENCA     NUMBER;
   V_MENOENCA     NUMBER;
   V_SOMAIMPO     NUMBER;
   V_MENOIMPO     NUMBER;
   V_TOTAPRODENCA NUMBER;
   V_TOTAPRENIMPO NUMBER;
   V_TOTAIMPBCALC NUMBER;
   V_TOTAIMPBCDES NUMBER;
   V_TAXABASECALC NUMBER;
   V_TAXABCSUBSTR NUMBER;
   V_TAXAALIQUOTA NUMBER;
   V_PRODUENCARGO NUMBER;
   V_SEQUIMPOSTNF NUMBER;
   V_SOMAITEM     NUMBER;
   V_DESCITEM     NUMBER;
   V_BASECALCIT   NUMBER;
   V_BASECALCTO   NUMBER;
   V_BASECALCIRRF NUMBER;
   V_PBCSUBTRIB   NUMBER;
   V_IMPOSTOIT    NUMBER;
   V_VRIMPOSTO    NUMBER;
   V_VRIMPBCICMS  NUMBER;
   V_FATOCONV     NUMBER;
   V_TOTABRUT     NUMBER;
   V_SOMAIMPONF   NUMBER;
   V_DESCIMPONF   NUMBER;
   V_QTDELANCTO   NUMBER;
   V_VRUNITLANCTO NUMBER;
   V_VRTOTALANCTO NUMBER;
   V_TOTACONTAB   NUMBER;
   V_VRBRUTO      NUMBER;
   V_VRCONTAB     NUMBER;
   V_IMPOCONTAB   NUMBER;
   V_TOTIMPOCONT  NUMBER;
   V_TOTIMPOBRUT  NUMBER;
   V_CONTIMPO     NUMBER;
   V_IMPOSRETI    NUMBER;
   V_CONTABCALC   NUMBER;
   V_PERDBCALC    NUMBER;
   V_FAIXATOLER   NUMBER;
   V_NRDECITOTANF NUMBER;
   V_IMPOSINFUSU  NUMBER;
   V_VRCONTAREC   NUMBER;
   V_VRDIFERENCA  NUMBER;
   V_EXISTE_ROT   NUMBER;
   V_NRSEQITPROD  NUMBER;
   V_VRFATOCONV   NUMBER;
   V_VRLIQUORIG   NUMBER;
   V_VRPESOBRUTO  NUMBER;
   V_VRIMPOSTOST  NUMBER;
   V_VRREDUCAO    NUMBER;
   V_VALOR        NUMBER;
   V_VRTOTAITEM   NUMBER;
   V_SOMATOTAITEM NUMBER;
   V_PERCENTITEM  NUMBER;
   V_SOMAQITEMPROD  NUMBER;
   V_SOMAVRBRUTITEM NUMBER;
   V_SOMAVRCONTITEM NUMBER;
   V_NRSEQITPRODORIG NUMBER;

   V_CDGRUPOFISC  VARCHAR2(03);
   V_CDGRPFISCSV  VARCHAR2(03);
   V_UTGRUPFISCS  VARCHAR2(01);
   V_CDORIGDESTNF VARCHAR2(21);

   V_IDOPERDEVONF VARCHAR2(01);
   V_CHAVE        VARCHAR2(21);
   V_IMPOSTO      VARCHAR2(02);
   V_IDRECALCULO  VARCHAR2(01);
   V_CDFILIMOVI   VARCHAR2(04);
   V_CDTIPOOPER   VARCHAR2(02);

   V_CDENCDESCBONDEV VARCHAR2(02);
   V_CDAJUCTPAG   VARCHAR2(04);
   V_VRPEDESCFORN FLOAT;
   V_VRENCARBONI  FLOAT;
   V_IDCONDESBONFORN VARCHAR2(01);
   V_DTINIVRPDESC DATE;
   V_IMPOSDESONERA NUMBER;
   V_DIFERENCA     FLOAT;
   V_VRFRETEITEM   FLOAT;
   V_VRSEGURITEM   FLOAT;
   V_VRENCARGODESC FLOAT;
   V_SUMVRDESCITEM FLOAT;
   V_VROUTRASDESPITEM FLOAT;
   V_VRDESPADUANEIRA  FLOAT;

   V_TOTAENCIMPXML FLOAT;

   V_DSCDFISOPEIT VARCHAR2(450);
   V_DTVINGENTE   DATE;
   V_DTINIREFEFAT DATE;

   V_ICMS         VARCHAR2(01);
   V_IMPOICMS     VARCHAR2(02);

   V_CDSITUCRT         VARCHAR2(01);
   V_CDSIMPLESNACIONAL VARCHAR2(5);
   V_RBT12             FLOAT; --RECEITA BRUTA TOTAL DOS ÚLTIMOS 12 MESES
   V_RBA               FLOAT; --RECEITA BRUTA ACUMULADA
   V_VRSUBLIMITESN     FLOAT;
   V_VRALIQSIMPLES     FLOAT;
   V_APROVICMS         FLOAT;
   V_ALIQAPROVICMS     FLOAT;
   V_SIMPLES           VARCHAR2(01);
   V_CDFAIXA           VARCHAR2(5);
   V_ESTORNOCANC       VARCHAR2(01);

   /*Alíquota do imposto que possui diferencial de alíquota*/
   V_DIFALIQ           FLOAT;
   V_IDCALCDIFAL       VARCHAR2(01);

   V_CDFISCOPERREGRA     VARCHAR2(10);
   V_DSCDFISOPEITREGRA   VARCHAR2(50);
   V_IDDIFEALIQREGRA     VARCHAR2(10);
   V_IDDIFALIQCUSPRREGRA VARCHAR2(10);
   V_CFOPINFUSU          VARCHAR2(01);
   V_CFOP1DIGT           VARCHAR2(01);


   w_A            CHAR(1):= 'A';
   w_C            CHAR(1):= 'C';
   w_D            CHAR(1):= 'D';
   w_N            CHAR(1):= 'N';
   w_S            CHAR(1):= 'S';
   w_R            CHAR(1):= 'R';
   w_P            CHAR(1):= 'P';
   w_I            CHAR(1):= 'I';
   w_L            CHAR(1):= 'L';
   w_V            CHAR(1):= 'V';
   w_O            CHAR(1):= 'O';
   w_F            CHAR(1):= 'F';
   w_U            CHAR(1):= 'U';
   w_0            CHAR(1):= '0';
   w_1            CHAR(1):= '1';
   w_2            CHAR(1):= '2';
   w_3            CHAR(1):= '3';
   w_4            CHAR(1):= '4';
   w_5            CHAR(1):= '5';
   w_8            CHAR(1):= '8';
   w_9            CHAR(1):= '9';
   w_01           CHAR(2):= '01';
   w_03           CHAR(2):= '03';
   w_09           CHAR(2):= '09';
   w_11           CHAR(2):= '11';
   w_12           CHAR(2):= '12';
   w_90           CHAR(2):= '90';
   w_000          CHAR(3):= '000';
   w_001          CHAR(3):= '001';
   w_101          CHAR(3):= '101';
   w_00000        CHAR(5):= '00000';
   w_VMN          CHAR(3):= 'VMN';
   w_EXP          CHAR(3):= 'EXP';
   w_VND          CHAR(3):= 'VND';
   w_Av04         CHAR(4):= 'AV04';
   w_Av05         CHAR(4):= 'AV05';
   w_Av06         CHAR(4):= 'AV06';
   w_Av09         CHAR(4):= 'AV09';
   w_Av10         CHAR(4):= 'AV10';
   w_Er03         CHAR(4):= 'ER03';
   w_Er04         CHAR(4):= 'ER04';
   w_Er06         CHAR(4):= 'ER06';

   V_IDIMPOBCALTPOP  VARCHAR2(01);
   V_IDIMBCALTPOPDE  VARCHAR2(01);
   V_QTITEMPROD      FLOAT;
   V_CDIMPOSTO       VARCHAR2(02);
   V_IDUTCTRLLOTE    VARCHAR2(01);
   V_MEDIA           NUMBER;
   V_BCICMSSTRETIDO  FLOAT;
   V_VRICMSSTRETIDO  FLOAT;
   V_NRLOTEESTQ      VARCHAR2(20);
   V_EXISTDSDADOSADIC  INTEGER;
   V_BCICMSRET       FLOAT;
   V_ICMSRET         FLOAT;
   V_IDCALCPESONF    VARCHAR2(01);
   V_IDUTDESCICMS    VARCHAR2(01);

   V_CDREGRAITALIQ    VARCHAR2(10);
   V_CARGA            FLOAT;
   V_CDIMPOSRECALC    VARCHAR2(200);
   V_CDCFOPINFUSU     VARCHAR2(11);
   V_DSCFOPINFUSU     VARCHAR2(50);

   V_IDUTVLRQTDEIMPO  VARCHAR2(01);
   V_VRFATOCONVES     FLOAT;
   V_DTENTRSAID       DATE;
   V_CDIMPOSTOI       VARCHAR2(02);
   V_CDPRODUTO        VARCHAR2(10);
   V_VRIMPOSTOVISUIT  FLOAT;
   V_IDALTERADO_ENCA  VARCHAR2(01);
   V_CDGRUPOFISCAUX   VARCHAR2(03);

   V_CDIMPOSIPI        VARCHAR2(02);
   V_IDGERIPIDESPA     VARCHAR2(01);
   V_IDGERICMSTDESPA   VARCHAR2(01);
   V_VRTOTALIPI        FLOAT;
   V_CDENCARGOOD       VARCHAR2(02);
   V_VRTOTALICMSST     FLOAT;
   V_CDENCARGOICMST    VARCHAR2(02);
   V_IDPEINFICMSTDEME  VARCHAR2(01);
   V_VRENCAICMSSTIT    FLOAT;
   V_VRICMSST          FLOAT;
   V_VRBASECALC        FLOAT;
   V_SOMAVRNOTAFISC    FLOAT;
   V_IDUTCTRLFISSAID   VARCHAR2(01);
   V_IDUTCTRLFISFIL    VARCHAR2(01);
   V_IDUTCTRLFIS       VARCHAR2(01);
   V_IDPERVISIMPSCRE   VARCHAR2(01);

   V_VRIMPOSST         FLOAT;
   V_VRADICFECPST      FLOAT;
   V_VRADICFECPSTAUX   FLOAT;
   V_DIFEVRBRUTO       FLOAT;

   V_VRPERDIFERE       FLOAT;
   V_PERDIFERE         FLOAT;
   V_IMPOSTOOPERA      FLOAT;
   V_IMPOSTODIFER      FLOAT;

   V_IDCONTCONFORIG    VARCHAR2(01);
   V_IDDESCIMPRECCONT  VARCHAR2(01);
   V_IDIMPORECUP       VARCHAR2(01);
   V_CDCCTBLATIV       VARCHAR2(20);
   V_IDATUESTTPOP      TIPOOPERAC.IDATUESTTPOP%TYPE;
   V_IDREMESSAINDU     TIPOOPERAC.IDREMESSAINDU%TYPE;
   V_CDALMOXINFO       AGENTETERCECLI.CDALMOXINFOCLI%TYPE;
   V_CDLOCALINFO       AGENTETERCECLI.CDLOCALINFOCLI%TYPE;
   V_CDFILIALENTR      CTRLMOVIESTQ.CDFILIALENTR%TYPE;
   V_NRLANESTENTR      NOVOCODIGO.NRSEQUENCIAL%TYPE;
   V_NRCTRLMOVEST      NOVOCODIGO.NRSEQUENCIAL%TYPE;
   V_BOLANESTENTR      BOOLEAN := TRUE;
   V_DSENDEDEVOEMBA    VARCHAR2(255);
   V_DSCRDADOADIC      VARCHAR2(255);
   V_GRAVACRADIC       VARCHAR2(01);
   V_IDCALCICMS60      VARCHAR2(01);
   V_CDENQLEGALIPI     VARCHAR2(03);
   V_CDCEST            VARCHAR2(09);

   /* variáveis para geração de entrada no estoque (filial agente de terceiração */
   V_CDFILIAGENT       VARCHAR2(04);
   V_BOLANESTENTRAG    BOOLEAN := TRUE;
   V_NRLANESTENTRAG    NOVOCODIGO.NRSEQUENCIAL%TYPE;
   V_CDALMOXARIFEAG    ALMOXARIFADO.CDALMOXARIFE%TYPE;
   V_CDLOCALESTOQAG    LOCALESTOQUE.CDLOCALESTOQ%TYPE;
   V_IDUTILLOTEAG      VARCHAR2(01);
   V_NRLOTEESTQAG      VARCHAR2(20);
   V_NRSUBLOTEAG       VARCHAR2(04);
   V_NRLANCTONFAG      VARCHAR2(20);
   V_IDTPIJURNF        VARCHAR2(01);
   V_CDEMPRESAAG       VARCHAR2(02);
   V_CDINSCESTAAG      VARCHAR2(16);
   V_CDINSCMUNIAG      VARCHAR2(16);
   V_CDFILIORIG        VARCHAR2(04);
   V_TPOPERRETORNO     VARCHAR2(02);

   V_IDUTORIGPROD       VARCHAR2(01);
   V_VRPRODUTOBC       FLOAT;
   V_VRALIQUTMPDEST    VARCHAR2(14);
   V_CDIMPOSTOICMS     VARCHAR2(02);
   V_VRIMPOSTOICMS     FLOAT;
   V_VRBASECALCICMS    FLOAT;
   V_IDIMPSTCARGTRIB   VARCHAR2(01);

   V_VRIMPOSTOOPERAIT  FLOAT;
   V_VRPERDIFEREIT     FLOAT;
   V_VRIMPOSTODIFERIT  FLOAT;

   V_CDPAISFCT      VARCHAR2(04);
   V_SGESTADOFCT    VARCHAR2(02);
   V_CDMUNICIPIOFCT VARCHAR2(04);
   V_QTDREGFCT      FLOAT;

   V_IDPRESENCIAL      VARCHAR2(01);
   V_IDUTALIQINTOPPRES VARCHAR2(01);

   V_IDUTILPVRIMPBC    VARCHAR2(01);
   V_VRADICALIQFECP    FLOAT(126);
   V_VRADICFECP        FLOAT(126);
   V_IDCONSFINAL       VARCHAR2(01);
   V_STRVRADICALIQFECP VARCHAR2(15);
   V_STRVRADICFECP     VARCHAR2(15);

   V_NRINSESTDESNF     VARCHAR2(20);
   V_IDCONTRIBICMS     VARCHAR2(01);
   V_IDCONTRIBICMSAUX  VARCHAR2(01);

   V_ALIQICMSDEST      FLOAT;
   V_ALIQFECPDEST      FLOAT;
   V_CDIMPOSTOFECP     VARCHAR2(02);

   V_IDDIFECLI         VARCHAR2(01);
   V_CDFILIALPED       VARCHAR2(04);
   V_NRPEDIDO          VARCHAR2(10);
   V_DADOSADICENDPED   VARCHAR2(400);
   V_IDPRODPERIG       VARCHAR2(01);
   V_MSGPRODPERIG      VARCHAR2(500);
   V_GRAVAMSGPRODPERIG INTEGER;
   V_IDCALCDIFALDENT   VARCHAR2(01);
   V_IDUTILVENC        VARCHAR2(01);
   V_IDNOTADEVO        VARCHAR2(01);
   V_IDNFAJUSTE        VARCHAR2(01);
   V_IDVERLEIAUTENFE   VARCHAR2(04);
   V_MAJORAOUREDUZ     VARCHAR2(01);

   /* Variáveis para geração dos encargos de acordo com os impostos relacionados na nota fiscal de origem(importação de XML) */
   V_VRENCARGOIMPXML NUMBER;
   V_VRIMPENCXMLORIG NUMBER;
   V_UPDENCIMPXML    VARCHAR2(01);
   V_NRSEQITORIG     VARCHAR2(04);
   V_NRACESSONFORIG  VARCHAR2(44);
   V_IDNFORIGVIAXML  VARCHAR2(01);

   V_IDOPTANTESNCLIE VARCHAR2(01);
   V_CDCNAECLIE      VARCHAR2(07);
   V_VRMVA           FLOAT;
   V_IDENDCFOPCLIPRES VARCHAR2(01);

   V_IDOPPRESENDDIF   VARCHAR2(01);

   V_IDUTILNFSE      VARCHAR2(01);

   V_VRIMPORETNF     FLOAT;
   V_VRIMPORELAC     FLOAT;

   V_IDENDEMISTPOPFIL VARCHAR2(01);

   /* Variáveis prestação de serviço */
   V_CDPAISSERV      VARCHAR2(04);
   V_SGESTADOSERV    VARCHAR2(02);
   V_CDMUNICIPIOSERV VARCHAR2(04);
   V_QTDREGSERV      NUMBER;

   V_IDIMPODESONERA  VARCHAR2(01);
   V_IDCONSDESONVRNF VARCHAR2(01);
   V_CDPAISEMIT      VARCHAR2(04);
   V_SGESTADOEMIT    VARCHAR2(02);

   V_CDBENEFFISCAL    VARCHAR2(10);

   V_DSINFADICPROD   VARCHAR2(4000);
     V_IPIDEVOLMSG   VARCHAR2(4000);

   V_VRADICFECPNFTOT FLOAT;

   V_DADOSVENDEDOR   VARCHAR2(255);
   V_IDADICVENDEDOR  VARCHAR2(01);
   V_DESCNRPEDIDO    VARCHAR2(255);
   V_IDADICNRPEDIDO  VARCHAR2(01);
   V_IDBLOQCFOPNF    VARCHAR2(01);   

   V_IDCONSMVAPMC    VARCHAR2(01);
   V_IDCONSCOMPBCPMC VARCHAR2(01);

   V_FECPPMCAUX      FLOAT;

   V_IDCONSDIFALIQ   VARCHAR2(01);

   V_CDCOMPST        VARCHAR2(20);
   V_CDRESTST        VARCHAR2(20);
   V_CDNATUREC       VARCHAR2(10);

   /*variáveis mensagem ICMS 60*/
   V_VRBCITENTR      FLOAT;
   V_VRIMPITENTR     FLOAT;

   V_ENCARGOLIQUIDO  VARCHAR2(350);
   V_EXISTEENCARGO   NUMBER;
   V_CDTIPOOPERBONIF VARCHAR2(02);

   --VARIÁVEIS PARA ATUALIZAR ESTOQUE POR CFOP
   V_ATUPORCFOP    VARCHAR2(01);
   V_CFOPTPOPER    FLOAT;
   V_CFOPATUEST    FLOAT;

   /*FET*/
   V_FETBASECALC   FLOAT;
   V_FETVRIMPOSTO  FLOAT;
   V_FETALIQUOTA   VARCHAR(255);

   V_DSDADOFISCO     VARCHAR2(255);
   V_QTDCDPRODUTO    FLOAT;
   V_VRCARGATRIB     FLOAT;
   V_IDNUTREDBCFECP  VARCHAR2(1);
   V_BCSEMREDUCAO    FLOAT;
   V_CFOPICMS        VARCHAR2(4);
   V_IDIMPDSPRODEMIS VARCHAR2(1);
   V_DSPRODEMISIMP   VARCHAR2(255);
   V_TOTIMPRET       FLOAT;
   V_VRLIQUIDO       FLOAT;
   V_IDNFGERADAVIAXML VARCHAR2(1);
   V_VRBASEICMS FLOAT;
   V_VRALIQICMSCBSP FLOAT;
   V_VRTOTCONTABIL FLOAT;
   V_VRCUBAGEM FLOAT;
   V_VRPESOCUBADO FLOAT;
   V_IDCALCDENTRO VARCHAR2(1);
   V_ENCARGO FLOAT;
   V_IMPORIG FLOAT;
   V_VRFECP  FLOAT;
   V_VRCOMPBC FLOAT;
   V_TOTAENCBCALC FLOAT;
   V_BCICMSMONO FLOAT;
   V_ICMSMONO FLOAT;
   V_ALIQICMSMONO FLOAT;
   V_BCICMSMONORET FLOAT;
   V_ICMSMONORET FLOAT;
   V_ALIQICMSMONORET FLOAT;
   V_IDCALCSEPARADO VARCHAR2(1);
   V_IDLOCSERVENDIM VARCHAR2(01);
   V_CDPAISIM VARCHAR2(04);
   V_SGESTADOIM VARCHAR2(02);
   V_CDMUNICIPIOIM VARCHAR2(05);
   V_DSBASELEGAL VARCHAR2(250);
   V_COUNTBASELEGAL FLOAT;
   V_VRCARGAEXPRESSA FLOAT;
   V_VRCALCULADO FLOAT;   
BEGIN

--VARIÁVEIS COM A CHAVE PARA AS TABELAS TEMPORÁRIAS

   V_ALIQTEMP := P_FILIAL||P_LANCTONF;/* ALIQUOTA */
   V_INCITEMP := P_FILIAL||P_LANCTONF;/* INCIDENCIA */
   V_CSTTEMP  := P_FILIAL||P_LANCTONF;/* CST */
   V_CFOPTEMP := P_FILIAL||P_LANCTONF;/* CFOP */

   V_TOTALNOTA  := 0; /*VALOR TOTAL DA NOTA*/
   V_FAIXATOLER := 0.02; /* FAIXA DE TOLERANCIA DE VALORES (CONSISTE VRNOTAFISC X VRPRODUTOS E VENCIMENTOS X VALOR TOTAL DA NOTA)*/
   V_VRALIQUTMPDEST := 0;

   V_VRADICALIQFECP := NULL;
   V_VRADICFECP     := NULL;
   V_CDBENEFFISCAL  := NULL;
   V_DADOADIC       := NULL;
   V_DADOADICFISCO  := NULL;

   SELECT NVL(NRDECITOTANF,2), 
          NVL(IDUTORIGPROD, 'N'), 
          NVL(IDOPPRESENDDIF, 'N'), 
          NVL(IDADICVENDEDOR, 'N'),
          NVL(IDPERVISIMPSCRE,'S'),
		    NVL(IDADICNRPEDIDO,'N'),
          NVL(IDBLOQCFOPNF, 'S')
     INTO V_NRDECITOTANF, 
          V_IDUTORIGPROD, 
          V_IDOPPRESENDDIF, 
          V_IDADICVENDEDOR,
          V_IDPERVISIMPSCRE,
      	 V_IDADICNRPEDIDO,
          V_IDBLOQCFOPNF
     FROM PARAMGERAL;

   BEGIN
      SELECT IDGRAVACRADIC, IDCALCICMS60
        INTO V_GRAVACRADIC, V_IDCALCICMS60
        FROM GERPARAMGERAL;
   EXCEPTION
      WHEN NO_DATA_FOUND THEN
         V_GRAVACRADIC := NULL; V_IDCALCICMS60 := NULL;
   END;

   IF (V_GRAVACRADIC IS NULL) THEN
      V_GRAVACRADIC := 'N';
   END IF;

   IF (V_IDCALCICMS60 IS NULL) THEN
      V_IDCALCICMS60 := 'S';
   END IF;

   Begin
      SELECT N.NRINSJURNF,
             N.CDSERIE,
             N.CDFILIEMIT,
             N.CDFILIRECE,
             NVL(P.IDUTILALMOX, w_N),
             NVL(P.IDUTILLCESTQ, w_N),
             NVL(P.IDUTILLOTE, w_N),
             N.CDINTEGRACAO,
             N.IDORIGDESTNF,
             N.IDDOCFINANC,
             N.IDDOCREPLIC,
             N.IDSISTEMA,
             NVL(P.IDCTRLESTQ, w_S),
             N.DTINIREFEFAT,
             N.CDINSCESTA,
             N.CDEMPRESA,
             N.IDTPIJURNF,
             NVL(N.IDPRESENCIAL, w_9),
             NVL(I.IDUTALIQINTOPPRES, w_N),
             NVL(I.IDVERLEIAUTENFE, '3.10'),
             NVL(CDSITUCRT, '3'),
             NVL(VRSUBLIMITESN, 0),
             I.CDPAIS,
             I.SGESTADO,
             IM.CDPAIS,
             IM.SGESTADO, 
             IM.CDMUNICIPIO,
             N.CDCFOPINFUSU
        INTO V_NRINSJURNF,
             V_SERIE,
             V_CDFILIEMIT,
             V_CDFILIRECE,
             V_IDUTILALMOX,
             V_IDUTILLCESTQ,
             V_IDUTILLOTE,
             V_CDINTEGRACAO,
             V_IDORIGDESTNF,
             V_IDDOCFINANC,
             V_IDDOCREPLIC,
             V_IDSISTEMA,
             V_IDCTRLESTQ,
             V_DTINIREFEFAT,
             V_CDINSCESTA,
             V_CDEMPRESA,
             V_IDTPIJURNF,
             V_IDPRESENCIAL,
             V_IDUTALIQINTOPPRES,
             V_IDVERLEIAUTENFE,
             V_CDSITUCRT,
             V_VRSUBLIMITESN,
             V_CDPAISEMIT,
             V_SGESTADOEMIT,
             V_CDPAISIM,
             V_SGESTADOIM, 
             V_CDMUNICIPIOIM,
             V_CDCFOPINFUSU
        FROM NOTAFISCAL N, PARAMFILIAL P, INSCRESTAD I, PARAMEMPRESA PE, INSCRMUNICIP IM
       WHERE N.CDFILIAL = P_FILIAL
         AND N.NRLANCTONF = P_LANCTONF
         AND N.CDFILIEMIT = P.CDFILIAL(+)
         AND N.CDEMPRESA = I.CDEMPRESA
         AND N.CDINSCESTA = I.CDINSCESTA
         AND N.CDEMPRESA  = IM.CDEMPRESA
         AND N.CDINSCMUNI = IM.CDINSCMUNI
         AND N.CDEMPRESA = PE.CDEMPRESA(+);
   Exception
      When No_Data_Found Then
         V_NRINSJURNF := Null;
         V_SERIE := Null;
         V_CDFILIEMIT := Null;
         V_CDFILIRECE := Null;
         V_IDUTILALMOX := w_N;
         V_IDUTILLCESTQ := w_N;
         V_IDUTILLOTE := w_N;
         V_CDINTEGRACAO := Null;
         V_IDORIGDESTNF:= Null;
         V_IDDOCFINANC := Null;
         V_IDDOCREPLIC := Null;
         V_IDSISTEMA := Null;
         V_IDCTRLESTQ := w_S;
         V_DTINIREFEFAT := Null;
         V_CDINSCESTA := Null;
         V_CDEMPRESA := Null;
         V_IDTPIJURNF := NULL;
         V_IDPRESENCIAL := w_9;
         V_IDUTALIQINTOPPRES := w_N;
         V_IDVERLEIAUTENFE := '3.10';
         V_CDSITUCRT := '3';
         V_VRSUBLIMITESN := 0;
         V_CDPAISEMIT := Null;
         V_SGESTADOEMIT := Null;
         V_CDPAISIM := Null;
         V_SGESTADOIM := Null;
         V_CDMUNICIPIOIM := Null;
         V_CDCFOPINFUSU := NULL;         
   End;

   IF (V_IDUTALIQINTOPPRES = 'S') THEN
      V_IDPRESENCIAL := w_9;
   END IF;

   IF (V_IDBLOQCFOPNF = 'S') THEN
      V_CDCFOPINFUSU := NULL;
   END IF;

   IF V_CDCFOPINFUSU IS NOT NULL THEN
     UPDATE ITEMPRODUTO
        SET CDCFOPINFUSU = V_CDCFOPINFUSU
      WHERE CDFILIAL = P_FILIAL
        AND NRLANCTONF = P_LANCTONF;
   END IF;

   /* LANCAMENTO DE ESTOQUE DO DOCUMENTO GERADO ATRAVES DE REPLICACAO */
   Begin
      SELECT CDFILIAL||NRLANCESTQ
      INTO   V_IDDOCESTOQ
      FROM LANCTOESTOQ
      WHERE CDFILIAL   = SUBSTR(V_IDDOCREPLIC, 1, 4) AND
            NRLANCTONF = SUBSTR(V_IDDOCREPLIC, 5, 10);
   Exception
      When No_Data_Found Then
         V_IDDOCESTOQ := Null;
   End;

   IF V_IDDOCESTOQ IS NULL THEN
      /* LANCAMENTO DE ESTOQUE DO DOCUMENTO GERADO ATRAVES DE INTEGRACAO (EX: IMPORTACAO DE NFS)*/
      Begin
         SELECT CDFILIAL||NRLANCESTQ
         INTO   V_IDDOCESTOQ
         FROM LANCTOESTOQ
         WHERE CDFILIAL   = SUBSTR(V_CDINTEGRACAO, 1, 4) AND
               NRLANCTONF = SUBSTR(V_CDINTEGRACAO, 5, 10);
      Exception
         When No_Data_Found Then
            V_IDDOCESTOQ := Null;
      End;
   END IF;

   --MAIOR REGISTRO DA TABELA DE DADOS ADICIONAIS
   SELECT MAX(NRDADOADIC)
     INTO   V_DADOADIC
     FROM DADOSADIC
    WHERE (CDFILIAL   = P_FILIAL) AND
          (NRLANCTONF = P_LANCTONF);

   IF (V_DADOADIC IS NULL) THEN
      V_DADOADIC := W_001;
   ELSE
      V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
      /*GERA O PROXIMO SEQUENCIAL A SER INSERIDO*/
   END IF;

   --MAIOR REGISTRO DA TABELA DE DADOS ADICIONAIS DO FISCO
   SELECT MAX(NRDADOADICFISCO)
     INTO V_DADOADICFISCO
     FROM DADOSADICFISCO
    WHERE (CDFILIAL   = P_FILIAL) AND
          (NRLANCTONF = P_LANCTONF);

   IF (V_DADOADICFISCO IS NULL) THEN
      V_DADOADICFISCO := W_001;
   ELSE
      V_DADOADICFISCO := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADICFISCO) + 1)),3,0);
      /*GERA O PROXIMO SEQUENCIAL A SER INSERIDO*/
   END IF;

   FOR C_MENSINSC IN (SELECT M.CDMENSAGEM, I.DSMENSINSCRESTA
                        FROM MENSINSCRESTAD I LEFT JOIN MENSAGEM M ON (M.CDMENSAGEM = I.CDMENSAGEM)
                       WHERE (I.CDEMPRESA = P_EMPRESA)
                         AND (I.CDINSCESTA = P_INSCESTA)
                         AND (I.IDENTRSAIDMENS <> 'E')
                         AND (((I.CDMENSAGEM IS NOT NULL) AND (M.IDSITUACAOMENS  = 'A')) OR (I.CDMENSAGEM IS NULL))
                         AND NOT EXISTS (SELECT DSDADOADIC
                                           FROM DADOSADIC
                                          WHERE (CDFILIAL = P_FILIAL)
                                            AND (NRLANCTONF = P_LANCTONF)
                                            AND (DSDADOADIC LIKE I.DSMENSINSCRESTA || '%'))
                       ORDER BY I.NRMENSINSCRESTA) LOOP

      /*PREENCHE AS MENSAGENS ATRELADAS A INSCRICAO ESTADUAL*/
      INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, CDMENSAGEM, DSDADOADIC)
                     VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, C_MENSINSC.CDMENSAGEM, C_MENSINSC.DSMENSINSCRESTA);

      V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);

   END LOOP;

   IF V_IDORIGDESTNF = 'C' THEN
      FOR C_MENSCLIENTE IN (SELECT M.CDMENSAGEM, C.DSMENSCLIENTE
                              FROM MENSCLIENTE C LEFT JOIN MENSAGEM M ON (M.CDMENSAGEM = C.CDMENSAGEM)
                             WHERE C.CDCLIENTE = P_CLIENTE
                               AND C.IDENTRSAIDMENS <> 'E'
                               AND (((C.CDMENSAGEM IS NOT NULL) AND (M.IDSITUACAOMENS  = 'A')) OR (C.CDMENSAGEM IS NULL))
                               AND NOT EXISTS (SELECT DSDADOADIC
                                                 FROM DADOSADIC
                                                WHERE (CDFILIAL = P_FILIAL)
                                                  AND (NRLANCTONF = P_LANCTONF)
                                                  AND (DSDADOADIC LIKE C.DSMENSCLIENTE || '%'))
                             ORDER BY C.NRMENSCLIENTE)
      LOOP

         INSERT INTO DADOSADIC
            (CDFILIAL, 
             NRLANCTONF, 
             NRDADOADIC, 
             CDMENSAGEM, 
             DSDADOADIC)
         VALUES
            (P_FILIAL, 
             P_LANCTONF, 
             V_DADOADIC, 
             C_MENSCLIENTE.CDMENSAGEM, 
             C_MENSCLIENTE.DSMENSCLIENTE);

         V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
      END LOOP;
   END IF;

   BEGIN
      SELECT TRANSLATE(SUBSTR('Devolver as embalagens vazias no seguinte endereço: ' || 
             PRE.DSPOSTORECEMB ||
             ', ' || PRE.DSENDERECEMB || 
             CASE NVL(PRE.DSCOMPENDERECEMB, '!X!X!') WHEN '!X!X!' THEN '' ELSE ', ' || PRE.DSCOMPENDERECEMB END ||
             ', ' || B.NMBAIRRO ||
             ', CEP:' || PRE.NRCEPRECEMB ||
             ', ' || M.NMMUNICIPIO ||
             ', ' || E.SGESTADO ||
             ', ' || P.NMPAIS ||
             CASE NVL(PRE.NRTELERECEMB, '!X!X!') WHEN '!X!X!' THEN '' ELSE '. Telefone: ' || PRE.NRTELERECEMB END ||
             CASE NVL(PRE.NRFAXRECEMB, '!X!X!') WHEN '!X!X!' THEN '' ELSE '. FAX: ' || PRE.NRFAXRECEMB END, 1, 255), 'áâãäæèïéìëíîçåñòóôöõàøúüûùýÁÂÃÄÆÈÏÉÌËÍÎÅÑÒÓÔÖÕÀØÚÜÛÙÝÇ', 'aaaaaeieieiicanoooooaouuuuyAAAAAEIEIEIIANOOOOOAOUUUUYC') AS DSENDEDEVOEMBA
        INTO V_DSENDEDEVOEMBA
        FROM NOTAFISCAL N JOIN ITEMPRODUTO I ON (N.CDFILIAL = I.CDFILIAL) AND
                                                (N.NRLANCTONF = I.NRLANCTONF)
                          JOIN PRODUTO PR ON (I.CDPRODUTO = PR.CDPRODUTO)
                          JOIN (SELECT P.CDPOSTORECEMB, PR.CDARVPROD
                                  FROM PRODPOSTORECEMB P JOIN PRODUTO PR ON (P.CDPRODUTO = PR.CDPRODUTO)) PPRE ON (INSTR(PR.CDARVPROD, NVL(RTRIM(PPRE.CDARVPROD), PR.CDARVPROD)) = 1)
                          JOIN CLIEPOSTORECEMB C ON (N.CDCLIENTE = C.CDCLIENTE) AND
                                                    (PPRE.CDPOSTORECEMB = C.CDPOSTORECEMB)
                          JOIN POSTORECEMB PRE ON (C.CDPOSTORECEMB = PRE.CDPOSTORECEMB)
                          JOIN PAIS P ON (PRE.CDPAIS = P.CDPAIS)
                          JOIN ESTADO E ON (PRE.CDPAIS = E.CDPAIS) AND
                                           (PRE.SGESTADO = E.SGESTADO)
                          JOIN MUNICIPIO M ON (PRE.CDPAIS = M.CDPAIS) AND
                                              (PRE.SGESTADO = M.SGESTADO) AND
                                              (PRE.CDMUNICIPIO = M.CDMUNICIPIO)
                          JOIN BAIRRO B ON (PRE.CDPAIS = B.CDPAIS) AND
                                           (PRE.SGESTADO = B.SGESTADO) AND
                                           (PRE.CDMUNICIPIO = B.CDMUNICIPIO) AND
                                           (PRE.CDBAIRRO = B.CDBAIRRO)
       WHERE N.CDFILIAL = P_FILIAL
         AND N.NRLANCTONF = P_LANCTONF
         AND NOT EXISTS (SELECT DSDADOADIC
                           FROM DADOSADIC
                          WHERE (CDFILIAL = P_FILIAL)
                            AND (NRLANCTONF = P_LANCTONF)
                            AND (DSDADOADIC LIKE TRANSLATE(SUBSTR('Devolver as embalagens vazias no seguinte endereço: ' || 
                                                 PRE.DSPOSTORECEMB ||
                                                 ', ' || PRE.DSENDERECEMB || 
                                                 CASE NVL(PRE.DSCOMPENDERECEMB, '!X!X!') WHEN '!X!X!' THEN '' ELSE ', ' || PRE.DSCOMPENDERECEMB END ||
                                                 ', ' || B.NMBAIRRO ||
                                                 ', CEP:' || PRE.NRCEPRECEMB ||
                                                 ', ' || M.NMMUNICIPIO ||
                                                 ', ' || E.SGESTADO ||
                                                 ', ' || P.NMPAIS ||
                                                 CASE NVL(PRE.NRTELERECEMB, '!X!X!') WHEN '!X!X!' THEN '' ELSE '. Telefone: ' || PRE.NRTELERECEMB END ||
                                                 CASE NVL(PRE.NRFAXRECEMB, '!X!X!') WHEN '!X!X!' THEN '' ELSE '. FAX: ' || PRE.NRFAXRECEMB END, 1, 255), 'áâãäæèïéìëíîçåñòóôöõàøúüûùýÁÂÃÄÆÈÏÉÌËÍÎÅÑÒÓÔÖÕÀØÚÜÛÙÝÇ', 'aaaaaeieieiicanoooooaouuuuyAAAAAEIEIEIIANOOOOOAOUUUUYC') || '%'));
   EXCEPTION
      WHEN NO_DATA_FOUND THEN
         V_DSENDEDEVOEMBA := NULL;
      WHEN TOO_MANY_ROWS THEN
         RAISE_APPLICATION_ERROR(-20501, 'Operação bloqueada. Existem mais de um posto de recolhimento de embalagens cadastradas no sistema.', TRUE);
   END;

   IF (V_DSENDEDEVOEMBA IS NOT NULL) THEN
      INSERT INTO DADOSADIC
         (CDFILIAL, 
          NRLANCTONF,
          NRDADOADIC, 
          CDMENSAGEM, 
          DSDADOADIC)
      VALUES
         (P_FILIAL, 
          P_LANCTONF, 
          V_DADOADIC, 
          '',
          V_DSENDEDEVOEMBA);

      V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
   END IF;

   --GRAVA CR NOS DADOS ADICIONAIS
   IF (V_CDFILIEMIT IS NOT NULL) THEN
      IF (V_GRAVACRADIC = 'S') THEN
         V_DSCRDADOADIC := NULL;
         SELECT 'CR: '|| CDFILIAL ||' - ' || NMFILIAL
           INTO V_DSCRDADOADIC
           FROM FILIAL
          WHERE CDFILIAL = V_CDFILIEMIT;

         IF (V_DSCRDADOADIC IS NOT NULL) THEN
            DELETE
              FROM DADOSADIC
             WHERE DSDADOADIC = V_DSCRDADOADIC
               AND CDFILIAL   = P_FILIAL
               AND NRLANCTONF = P_LANCTONF;

            INSERT INTO DADOSADIC
               (CDFILIAL,
                NRLANCTONF,
                NRDADOADIC,
                CDMENSAGEM,
                DSDADOADIC)
            VALUES
               (P_FILIAL,
                P_LANCTONF,
                V_DADOADIC,
                '',
                V_DSCRDADOADIC);
            V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
         END IF;
      END IF;
   END IF;
   --GRAVA CR NOS DADOS ADICIONAIS

   --VARIÁVEIS PARA CONSULTA DE ALÍQUOTA, INCIDÊNCIA, CFOP
   Begin
      SELECT NVL(IDENDCFOPFIL,w_I), CDEMPRESA,   CDINSCESTA
      INTO   V_IDENDCFOP,           V_CDEMPRESA, V_CDINSCESTA
      FROM FILIAL
      WHERE (CDFILIAL = V_CDFILIEMIT);
   Exception
      When No_Data_Found Then
         V_IDENDCFOP:= w_I; V_CDEMPRESA:= Null; V_CDINSCESTA:= Null;
   End;

      BEGIN
      SELECT NVL(IDENDEMISTPOPFIL, w_P)
        INTO V_IDENDEMISTPOPFIL
        FROM TIPOOPERACFIL
       WHERE IDENTRSAIDOP = w_S
         AND CDTIPOOPER = P_TIPOOPER
         AND CDFILIAL = V_CDFILIEMIT;
   EXCEPTION
      WHEN NO_DATA_FOUND THEN
         V_IDENDEMISTPOPFIL := w_P;
   END;

   IF V_IDENDEMISTPOPFIL <> w_P THEN
      IF V_IDENDEMISTPOPFIL = w_I THEN
         BEGIN
            SELECT CDPAIS, 
                   SGESTADO,
                   CDMUNICIPIO
              INTO V_PAISORIG,
                   V_ESTAORIG,
                   V_MUNIORIG
              FROM INSCRESTAD
             WHERE CDEMPRESA  = P_EMPRESA 
               AND CDINSCESTA = P_INSCESTA;
         EXCEPTION
            WHEN NO_DATA_FOUND THEN
               V_PAISORIG := NULL; 
               V_ESTAORIG := NULL; 
               V_MUNIORIG := NULL;
         END;
      ELSIF V_IDENDEMISTPOPFIL = 'M' THEN
         BEGIN
            SELECT E.CDPAIS,
                   E.SGESTADO,
                   E.CDMUNICIPIO
              INTO V_PAISORIG,
                   V_ESTAORIG,
                   V_MUNIORIG
              FROM EMPRESA E, FILIAL F
             WHERE F.CDFILIAL     = V_CDFILIEMIT
               AND F.CDEMPRESA    = E.CDEMPRESA;
         EXCEPTION
            WHEN NO_DATA_FOUND THEN
               V_PAISORIG := NULL;
               V_ESTAORIG := NULL;
               V_MUNIORIG := NULL;
         END;
      ELSE
         BEGIN
            SELECT CDPAIS,
                   SGESTADO,
                   CDMUNICIPIO
              INTO V_PAISORIG,
                   V_ESTAORIG,
                   V_MUNIORIG
              FROM ENDEFILI
             WHERE CDFILIAL     = V_CDFILIEMIT
               AND IDTPENDEFILI = V_IDENDEMISTPOPFIL;
         EXCEPTION
            WHEN NO_DATA_FOUND THEN
               V_PAISORIG := NULL;
               V_ESTAORIG := NULL;
               V_MUNIORIG := NULL;
         END;
      END IF;
   ELSE   
      IF V_IDENDCFOP = w_I THEN
         Begin
            SELECT CDPAIS    , SGESTADO  , CDMUNICIPIO
            INTO   V_PAISORIG, V_ESTAORIG, V_MUNIORIG
            FROM INSCRESTAD
            WHERE CDEMPRESA  = P_EMPRESA AND
                  CDINSCESTA = P_INSCESTA;
         Exception
            When No_Data_Found Then
               V_PAISORIG := Null; V_ESTAORIG := Null; V_MUNIORIG := Null;
         End;
      ELSE
         Begin
            SELECT CDPAIS    , SGESTADO  , CDMUNICIPIO
            INTO   V_PAISORIG, V_ESTAORIG, V_MUNIORIG
            FROM ENDEFILI
            WHERE (CDFILIAL     = V_CDFILIEMIT) AND
                  (IDTPENDEFILI = V_IDENDCFOP);
         Exception
            When No_Data_Found Then
               V_PAISORIG := Null; V_ESTAORIG := Null; V_MUNIORIG := Null;
         End;
      END IF;
   END IF;

   /*DESTINATÁRIO-REMETENTE DA NOTA*/
   IF V_IDORIGDESTNF IS NULL THEN
      Begin
         SELECT IDORIGDESTOP
         INTO   V_ORIGDESTOP
         FROM TIPOOPERAC
         WHERE IDENTRSAIDOP = w_S AND
               CDTIPOOPER   = P_TIPOOPER;
      Exception
         When No_Data_Found Then
            V_ORIGDESTOP := Null;
      End;
   ELSE
      V_ORIGDESTOP := V_IDORIGDESTNF;
   END IF;

   V_CDORIGDESTNF := P_CLIENTE;

   V_IDCONSFINAL := w_N;

   IF V_ORIGDESTOP = w_L THEN /*DESTINATARIO -> FILIAL */
      Begin
         SELECT NVL(IDENDCFOPFIL,w_I), NVL(IDENDEMISFIL,w_I), CDEMPRESA  , CDINSCESTA
         INTO   V_IDENDCFOP          , V_IDENDEMIS          , V_CDEMPRESA, V_CDINSCESTA
         FROM FILIAL
         WHERE (CDFILIAL = V_CDFILIRECE);
      Exception
         When No_Data_Found Then
            V_IDENDCFOP := w_I; V_IDENDEMIS := w_I; V_CDEMPRESA := Null; V_CDINSCESTA := Null;
      End;

      SELECT MAX(CDPAIS), MAX(SGESTADO), MAX(CDMUNICIPIO)
        INTO V_CDPAISST, V_SGESTADOST, V_CDMUNICIPIOST
        FROM ENDEFILI
       WHERE CDFILIAL = V_CDFILIRECE
         AND IDTPENDEFILI = 'P';

      SELECT MAX(CDINSCESTAST)
        INTO V_CDINSCESTAST
        FROM INSCRESTADST
       WHERE CDEMPRESA = P_EMPRESA
         AND CDINSCESTA = P_INSCESTA
         AND CDPAIS = V_CDPAISST
         AND SGESTADO = V_SGESTADOST
         AND NVL(IDATIVINSCST, 'S') = 'S';

      IF V_IDENDCFOP = w_I THEN
         Begin
            SELECT CDPAIS    , SGESTADO
            INTO   V_PAISCFOP, V_ESTACFOP
            FROM INSCRESTAD
            WHERE CDEMPRESA  = V_CDEMPRESA AND
                  CDINSCESTA = V_CDINSCESTA;
         Exception
            When No_Data_Found Then
               V_PAISCFOP := Null; V_ESTACFOP := Null;
         End;
      ELSE
         Begin
            SELECT CDPAIS    , SGESTADO
            INTO   V_PAISCFOP, V_ESTACFOP
            FROM ENDEFILI
            WHERE (CDFILIAL     = V_CDFILIRECE) AND
                  (IDTPENDEFILI = V_IDENDCFOP);
         Exception
            When No_Data_Found Then
               V_PAISCFOP := Null; V_ESTACFOP := Null;
         End;
      END IF;

      IF V_IDENDEMIS = w_I THEN
         Begin
            SELECT CDPAIS    , SGESTADO  , CDMUNICIPIO
            INTO   V_PAISDEST, V_ESTADEST, V_MUNIDEST
            FROM INSCRESTAD
            WHERE CDEMPRESA  = V_CDEMPRESA AND
                  CDINSCESTA = V_CDINSCESTA;
         Exception
            When No_Data_Found Then
               V_PAISDEST := Null; V_ESTADEST := Null; V_MUNIDEST := Null;
         End;
      ELSE
         Begin
            SELECT CDPAIS    , SGESTADO  , CDMUNICIPIO
            INTO   V_PAISDEST, V_ESTADEST, V_MUNIDEST
            FROM ENDEFILI
            WHERE CDFILIAL     = V_CDFILIRECE AND
                  IDTPENDEFILI = V_IDENDEMIS;
         Exception
            When No_Data_Found Then
               V_PAISDEST := Null; V_ESTADEST := Null; V_MUNIDEST := Null;
         End;
      END IF;

      V_CDORIGDESTNF := V_CDFILIRECE;

   ELSIF V_ORIGDESTOP = w_F THEN /*DESTINATARIO -> FORNECEDOR */
      BEGIN
         SELECT NVL(IDENDCFOPFOR,w_P), 
                NVL(IDENDEMISFOR,w_P),
                NVL(IDCONSFINAL,w_N),
                NRINSESTFORN,
                NVL(IDCONTRIBICMS,w_N)
           INTO V_IDENDCFOP,
                V_IDENDEMIS,
                V_IDCONSFINAL,
                V_NRINSESTDESNF,
                V_IDCONTRIBICMS
           FROM FORNECEDOR
          WHERE (CDFORNECED = P_CLIENTE);
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
            V_IDENDCFOP := w_P; 
            V_IDENDEMIS := w_P;
            V_IDCONSFINAL := w_N;
            V_NRINSESTDESNF := NULL;
            V_IDCONTRIBICMS := w_N;
      END;

      SELECT MAX(CDPAIS), MAX(SGESTADO), MAX(CDMUNICIPIO)
        INTO V_CDPAISST, V_SGESTADOST, V_CDMUNICIPIOST
        FROM ENDEFORN
       WHERE CDFORNECED = P_CLIENTE
         AND IDTPENDEFORN = 'P';

      SELECT MAX(CDINSCESTAST)
        INTO V_CDINSCESTAST
        FROM INSCRESTADST
       WHERE CDEMPRESA = P_EMPRESA
         AND CDINSCESTA = P_INSCESTA
         AND CDPAIS = V_CDPAISST
         AND SGESTADO = V_SGESTADOST
         AND IDATIVINSCST = 'S';

      IF V_IDENDCFOP = w_I THEN
         Begin
            SELECT CDPAIS    , SGESTADO
            INTO   V_PAISCFOP, V_ESTACFOP
            FROM INSCRESTAD
            WHERE CDEMPRESA  = P_EMPRESA AND
                  CDINSCESTA = P_INSCESTA;
         Exception
            When No_Data_Found Then
               V_PAISCFOP := Null; V_ESTACFOP := Null;
         End;
      ELSE
         Begin
            SELECT CDPAIS    , SGESTADO
            INTO   V_PAISCFOP, V_ESTACFOP
            FROM ENDEFORN
            WHERE (CDFORNECED   = P_CLIENTE) AND
                  (IDTPENDEFORN = V_IDENDCFOP);
         Exception
            When No_Data_Found Then
               V_PAISCFOP := Null; V_ESTACFOP := Null;
         End;
      END IF;

      Begin
         SELECT CDPAIS,     SGESTADO,   CDMUNICIPIO
         INTO   V_PAISDEST, V_ESTADEST, V_MUNIDEST
         FROM ENDEFORN
         WHERE (CDFORNECED   = P_CLIENTE) AND
               (IDTPENDEFORN = V_IDENDEMIS);
      Exception
         When No_Data_Found Then
            V_PAISDEST := Null; V_ESTADEST := Null; V_MUNIDEST := Null;
      End;
   ELSE /*DESTINATARIO -> CLIENTE(DEFAULT) */
      BEGIN
         SELECT NVL(IDENDCFOPCLI,w_P),
                NVL(IDENDEMISCLI,w_P), 
                NVL(IDUTDESCICMS, w_N),
                NVL(IDCONSFINAL,w_N),
                NRINSESTCLIE,
                NVL(IDCONTRIBICMS,w_N),
                CDCNAECLIE,
                NVL(IDOPTANTESNCLIE,w_N),
                NVL(IDENDCFOPCLIPRES, 'I')
           INTO V_IDENDCFOP,
                V_IDENDEMIS,
                V_IDUTDESCICMS,
                V_IDCONSFINAL,
                V_NRINSESTDESNF,
                V_IDCONTRIBICMS,
                V_CDCNAECLIE,
                V_IDOPTANTESNCLIE,
                V_IDENDCFOPCLIPRES
           FROM CLIENTE
          WHERE (CDCLIENTE = P_CLIENTE);
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
            V_IDENDCFOP := w_P;
            V_IDENDEMIS := w_P;
            V_IDUTDESCICMS := w_N;
            V_IDCONSFINAL := w_N;
            V_NRINSESTDESNF := NULL;
            V_IDCONTRIBICMS := w_N;
            V_CDCNAECLIE := NULL;
            V_IDOPTANTESNCLIE := w_N;
            V_IDENDCFOPCLIPRES := 'I';
      END;

      SELECT MAX(CDPAIS), MAX(SGESTADO), MAX(CDMUNICIPIO)
        INTO V_CDPAISST, V_SGESTADOST, V_CDMUNICIPIOST
        FROM ENDECLIE
       WHERE CDCLIENTE = P_CLIENTE
         AND IDTPENDECLIE = 'P';

      SELECT MAX(CDINSCESTAST)
        INTO V_CDINSCESTAST
        FROM INSCRESTADST
       WHERE CDEMPRESA = P_EMPRESA
         AND CDINSCESTA = P_INSCESTA
         AND CDPAIS = V_CDPAISST
         AND SGESTADO = V_SGESTADOST
         AND IDATIVINSCST = 'S';

      IF V_IDENDCFOP = w_I THEN
         Begin
            SELECT CDPAIS    , SGESTADO, CDMUNICIPIO
            INTO   V_PAISCFOP, V_ESTACFOP, V_MUNIDEST
            FROM INSCRESTAD
            WHERE CDEMPRESA  = P_EMPRESA AND
                  CDINSCESTA = P_INSCESTA;
         Exception
            When No_Data_Found Then
               V_PAISCFOP := Null; V_ESTACFOP := Null; V_MUNIDEST := Null;
         End;
         V_PAISDEST := V_PAISCFOP;
         V_ESTADEST := V_ESTACFOP;
      ELSE

         Begin
            SELECT CDPAIS    , SGESTADO
            INTO   V_PAISCFOP, V_ESTACFOP
            FROM ENDECLIE
            WHERE (CDCLIENTE    = P_CLIENTE) AND
                  (IDTPENDECLIE = V_IDENDCFOP);
         Exception
            When No_Data_Found Then
               V_PAISCFOP := Null; V_ESTACFOP := Null;
         End;

         Begin
            SELECT CDPAIS    , SGESTADO  , CDMUNICIPIO
            INTO   V_PAISDEST, V_ESTADEST, V_MUNIDEST
            FROM ENDECLIE
            WHERE (CDCLIENTE    = P_CLIENTE) AND
                  (IDTPENDECLIE = V_IDENDEMIS);
         Exception
            When No_Data_Found Then
               V_PAISDEST := Null; V_ESTADEST := Null; V_MUNIDEST := Null;
         End;
      END IF;
   END IF;

   IF (V_NRINSESTDESNF IS NULL) OR (V_NRINSESTDESNF = '') THEN
      V_IDCONTRIBICMSAUX := 'N';
   ELSE
      V_IDCONTRIBICMSAUX := V_IDCONTRIBICMS;
   END IF;

   IF (V_CDINSCESTAST IS NOT NULL) OR (V_CDINSCESTAST = '')  THEN
      UPDATE NOTAFISCAL
         SET CDINSCESTAST = V_CDINSCESTAST
       WHERE CDFILIAL = P_FILIAL
         AND NRLANCTONF = P_LANCTONF;

      FOR C_MENSINSCESTAST IN (SELECT M.CDMENSAGEM, I.DSMENSINSCESTAST
                                 FROM MENSINSCESTAST I LEFT JOIN MENSAGEM M ON (M.CDMENSAGEM = I.CDMENSAGEM)
                                WHERE I.CDEMPRESA = P_EMPRESA
                                  AND I.CDINSCESTA = P_INSCESTA
                                  AND I.CDINSCESTAST = V_CDINSCESTAST
                                  AND I.IDENTRSAIDMENSST <> 'E'
                                  AND (((I.CDMENSAGEM IS NOT NULL) AND (M.IDSITUACAOMENS  = 'A')) OR (I.CDMENSAGEM IS NULL))
                                  AND NOT EXISTS (SELECT DSDADOADIC
                                                    FROM DADOSADIC
                                                   WHERE (CDFILIAL = P_FILIAL)
                                                     AND (NRLANCTONF = P_LANCTONF)
                                                     AND (DSDADOADIC LIKE I.DSMENSINSCESTAST || '%'))
                                ORDER BY NRMENSINSCESTAST) LOOP

         /*PREENCHE AS MENSAGENS ATRELADAS A INSCRICAO ESTADUAL DO SUBSTITUTO TRIBUTÁRIO*/
         INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, CDMENSAGEM, DSDADOADIC)
                        VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, C_MENSINSCESTAST.CDMENSAGEM, C_MENSINSCESTAST.DSMENSINSCESTAST);

         V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);

      END LOOP;
   END IF;

    -- PREENCHER CLASSIFICACAO FISCAL NCM NA TABELA ITEMPRODUTO
    FOR C_ITEMPRODUTO IN (SELECT I.CDFILIAL, I.NRLANCTONF, I.NRSEQITPROD, P.CDCLASFISC
                            FROM ITEMPRODUTO I, PRODUTO P
                           WHERE I.CDFILIAL   = P_FILIAL
                             AND I.NRLANCTONF = P_LANCTONF
                             AND I.CDPRODUTO = P.CDPRODUTO)
    LOOP
      UPDATE ITEMPRODUTO
         SET CDPRODNCMTRANS = C_ITEMPRODUTO.CDCLASFISC
       WHERE CDFILIAL    = C_ITEMPRODUTO.CDFILIAL
         AND NRLANCTONF  = C_ITEMPRODUTO.NRLANCTONF
         AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
   END LOOP;

   /*
   ROTINA PARA VERIFICAR AS NOTAS DO SISTEMA FACILITIES. NESTAS NOTAS O SISTEMA
   NÃO VERIFICARÁ O PAIS, O ESTADO E NEM O MUNICÍPIO DO DESTINATÁRIO DA NOTA FISCAL 
   E SIM DO LOCAL DE ATENDIMENTO DAQUELA PRESTAÇÃO DE SERVIÇO
   */
   V_QTDREGFCT := 0;
   BEGIN
      SELECT CDPAIS, 
             SGESTADO, 
             CDMUNICIPIO,
             COUNT(*)
        INTO V_CDPAISFCT,
             V_SGESTADOFCT,
             V_CDMUNICIPIOFCT,
             V_QTDREGFCT
        FROM FCT_DADOSNF
       WHERE CDFILIAL = P_FILIAL
         AND NRLANCTONF = P_LANCTONF
       GROUP BY CDPAIS, 
             SGESTADO,
             CDMUNICIPIO;
   EXCEPTION
      WHEN NO_DATA_FOUND THEN
         V_CDPAISFCT := NULL;
         V_SGESTADOFCT := NULL;
         V_CDMUNICIPIOFCT := NULL;
         V_QTDREGFCT := 0;
   END;

   IF (V_QTDREGFCT > 0) THEN
      V_PAISDEST := V_CDPAISFCT;
      V_ESTADEST := V_SGESTADOFCT;
      V_MUNIDEST := V_CDMUNICIPIOFCT;
   END IF;

   /* Operação Presencial - Se considera endereço de destino igual ao endereço de origem */
   IF V_IDOPPRESENDDIF = 'N' THEN
      /*
      QUANDO A OPERAÇÃO DA NOTA FISCAL FOR PRESENCIAL O SISTEMA USARÁ COMO ENDEREÇO
      DE DESTINO O MESMO ENDEREÇO DA ORIGEM. ESTÁ CONDIÇÃO FOI NECESSÁRIA PARA ATENDER
      A NOTA TÉCNICA 2015/003
      */
      IF (V_IDPRESENCIAL = W_1) THEN
         V_PAISDEST := V_PAISORIG;
         V_ESTADEST := V_ESTAORIG;
         V_MUNIDEST := V_MUNIORIG;
      END IF;

      BEGIN
         SELECT NVL(IDPRESENCIAL, w_9)
           INTO V_IDPRESENCIAL
           FROM NOTAFISCAL
          WHERE CDFILIAL   = P_FILIAL
            AND NRLANCTONF = P_LANCTONF;
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
            V_IDPRESENCIAL := w_9;
      END;

      IF (V_IDPRESENCIAL = W_1) THEN

         -- Verificar identificador de endereço CFOP conforme operação presencial
         IF (NVL(V_IDORIGDESTNF, 'C') = 'C') THEN
            IF V_IDENDCFOPCLIPRES = w_I THEN
               Begin
                  SELECT CDPAIS, SGESTADO
                    INTO V_PAISCFOP, V_ESTACFOP
                    FROM INSCRESTAD
                   WHERE CDEMPRESA  = P_EMPRESA
                     AND CDINSCESTA = P_INSCESTA;
               Exception
                  When No_Data_Found Then
                     V_PAISCFOP := Null; V_ESTACFOP := Null;
               End;
            ELSE
               Begin
                  SELECT CDPAIS, SGESTADO
                    INTO V_PAISCFOP, V_ESTACFOP
                    FROM ENDECLIE
                   WHERE CDCLIENTE    = P_CLIENTE
                     AND IDTPENDECLIE = V_IDENDCFOPCLIPRES;
               Exception
                  When No_Data_Found Then
                     V_PAISCFOP := Null; V_ESTACFOP := Null;
               End;
            END IF;
         END IF;
      END IF;
   END IF;

   IF (V_IDUTALIQINTOPPRES = 'S') THEN
      V_IDPRESENCIAL := w_9;
   END IF;

   V_IDINTEREST := 'N';
   V_IDINTERNA  := 'N';
   IF ((V_PAISDEST = V_PAISORIG) AND (V_ESTADEST <> V_ESTAORIG)) THEN
      V_IDINTEREST := 'S';
   ELSIF (V_PAISDEST <> V_PAISORIG) THEN
      V_IDINTERNA := 'S';
   END IF;

   UPDATE ITEMPRODUTO
      SET VRFATCONTRIBXML = NULL,
          QTITPRODTRIBXML = NULL
    WHERE CDFILIAL   = P_FILIAL
      AND NRLANCTONF = P_LANCTONF
      AND VRFATCONTRIBXML = 0;

   IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
      UPDATE ITEMPRODUTO
      SET VRTOTAITEM = TRUNC(VRTOTAITEM,2)
      WHERE CDFILIAL   = P_FILIAL AND
            NRLANCTONF = P_LANCTONF;

      /*204493*/
      UPDATE ITEMPRODUTO
      SET VRDESCITEM = TRUNC(VRDESCITEM,2)
      WHERE CDFILIAL   = P_FILIAL AND
            NRLANCTONF = P_LANCTONF;
   ELSE
      UPDATE ITEMPRODUTO
      SET VRTOTAITEM = ROUND(VRTOTAITEM,2)
      WHERE CDFILIAL   = P_FILIAL AND
            NRLANCTONF = P_LANCTONF;

      /*204493*/
      UPDATE ITEMPRODUTO
      SET VRDESCITEM = ROUND(VRDESCITEM,2)
      WHERE CDFILIAL   = P_FILIAL AND
            NRLANCTONF = P_LANCTONF;
   END IF;

   SELECT (SUM(VRTOTAITEM) - SUM(VRDESCITEM))
   INTO V_LIQUIDO
   FROM ITEMPRODUTO
   WHERE CDFILIAL   = P_FILIAL AND
         NRLANCTONF = P_LANCTONF;

   /*PREENCHE O GRUPO FISCAL*/
   IF V_IDORIGDESTNF = w_U THEN /*LICENCA DE USO*/
      CONSULTA_GRUPOFISCAL(w_C           , V_CDORIGDESTNF, V_CDFILIEMIT, w_S, P_TIPOOPER, V_CDGRUPOFISC);
   ELSE /*DEMAIS DESTINATARIOS*/
      CONSULTA_GRUPOFISCAL(V_IDORIGDESTNF, V_CDORIGDESTNF, V_CDFILIEMIT, w_S, P_TIPOOPER, V_CDGRUPOFISC);
   END IF;

   /*VERIFICA SE A NOTA UTILIZA DOCUMENTO DE ORIGEM E SE O TIPO DE OPERAÇÃO É DE ESTORNO DE CANCELAMENTO*/
   BEGIN
      SELECT IDOPERDEVONF,
             IDCONSPARFIS,
             IDNFESTCANC,
             IDCALCDIFALDENT,
             IDUTILVENC,
             IDNOTADEVO,
             IDNFAJUSTE,
             IDUTILNFSE,
             NVL(IDCONTCONFORIG, 'S'),
			    IDNTRANSCREICMS,
             NVL(DSOPERENCRATPL, 'N') AS  DSOPERENCRATPL,
             NVL(CDTIPOOPERBONIF, 'N') AS CDTIPOOPERBONIF,
             NVL(IDUTLLISTORI, 'N') AS IDUTLLISTORI,
             NVL(IDCALCVALFRETE, 'N') AS IDCALCVALFRETE,
             NVL(IDIMPDSPRODEMIS, 'N') AS IDIMPDSPRODEMIS,
             NVL(IDLOCSERVENDIM, 'N') AS IDLOCSERVENDIM
        INTO V_IDOPERDEVONF,
             V_IDCONSPARFIS,
             V_ESTORNOCANC,
             V_IDCALCDIFALDENT,
             V_IDUTILVENC,
             V_IDNOTADEVO,
             V_IDNFAJUSTE,
             V_IDUTILNFSE,
             V_IDCONTCONFORIG,
			    V_IDNTRANSCREICMS,
             V_ENCARGOLIQUIDO,
             V_CDTIPOOPERBONIF,
             V_IDUTLLISTORI,
             V_IDCALCVALFRETE,
             V_IDIMPDSPRODEMIS,
             V_IDLOCSERVENDIM
        FROM TIPOOPERAC
       WHERE IDENTRSAIDOP = w_S
         AND CDTIPOOPER = P_TIPOOPER;
   EXCEPTION
      WHEN NO_DATA_FOUND THEN
         V_IDOPERDEVONF := w_N;
         V_IDCONSPARFIS := w_S;
         V_ESTORNOCANC := w_N;
         V_IDCALCDIFALDENT := w_N;
         V_IDUTILVENC := w_N;
         V_IDNOTADEVO := w_N;
         V_IDNFAJUSTE := w_N;
         V_IDUTILNFSE := w_N;
         V_IDCONTCONFORIG  := w_S;
         V_IDNTRANSCREICMS := w_N;
         V_ENCARGOLIQUIDO  := w_N;
         V_CDTIPOOPERBONIF := w_N;
         V_IDUTLLISTORI    := w_N;
         V_IDCALCVALFRETE  := w_N;
         V_IDIMPDSPRODEMIS := w_N;
         V_IDLOCSERVENDIM  := w_N;
   END;

   IF (V_CDTIPOOPERBONIF = 'N') THEN
      UPDATE ITEMPRODUTO
         SET IDPRODBONIF = 'N'
       WHERE CDFILIAL   = P_FILIAL
         AND NRLANCTONF = P_LANCTONF;
   END IF;

   IF (V_IDCALCVALFRETE = 'S') THEN

      V_VALFRETEPROD := 0;
      BEGIN
         SELECT NVL(SUM((QTITEMPROD * NVL(VRPESOBRUTPR, 0)) * NVL(VRFRETEPROD, 0)), 0) AS VRTOTALFRETE
           INTO V_VALFRETEPROD
           FROM ITEMPRODUTO I, PRODUTO P
          WHERE I.CDFILIAL   = P_FILIAL
            AND I.NRLANCTONF = P_LANCTONF
            AND I.CDPRODUTO  = P.CDPRODUTO;
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
            V_VALFRETEPROD := 0;
      END;

      IF (V_VALFRETEPROD > 0) THEN

         V_ENCARGOINFO := 0;
         BEGIN
            SELECT SUM(I.VRITEMENCA) AS VRITEMENCA, COUNT(I.CDENCARGO)
              INTO V_ENCARGOINFO, V_QTENCRELAC
              FROM ITEMENCARGO I, ENCARGO E
             WHERE I.CDENCARGO    = E.CDENCARGO
               AND E.CDENCARGONFE = '01'
               AND I.CDFILIAL       = P_FILIAL
               AND I.NRLANCTONF     = P_LANCTONF;
         EXCEPTION
            WHEN NO_DATA_FOUND THEN
               V_ENCARGOINFO := 0; V_QTENCRELAC := 0;
         END;
         IF (V_ENCARGOINFO > 0) THEN
            UPDATE ITEMENCARGO
               SET IDALTERADO     = 'S',
                   VRENCAINFOMANU = VRITEMENCA
             WHERE CDFILIAL   = P_FILIAL
               AND NRLANCTONF = P_LANCTONF
               AND VRITEMENCA > 0
               AND CDENCARGO IN (SELECT E.CDENCARGO
                                   FROM ENCARGO E, ITEMENCARGO I
                                  WHERE E.CDENCARGONFE = '01'
                                    AND E.CDENCARGO = I.CDENCARGO
                                    AND I.CDFILIAL   = P_FILIAL
                                    AND I.NRLANCTONF = P_LANCTONF);

            UPDATE ITEMENCARGO
               SET VRENCAINFOMANU = NULL
             WHERE CDFILIAL   = P_FILIAL
               AND NRLANCTONF = P_LANCTONF
               AND NVL(VRITEMENCA, 0) = 0
               AND CDENCARGO IN (SELECT E.CDENCARGO
                                   FROM ENCARGO E, ITEMENCARGO I
                                  WHERE E.CDENCARGONFE = '01'
                                    AND E.CDENCARGO = I.CDENCARGO
                                    AND I.CDFILIAL   = P_FILIAL
                                    AND I.NRLANCTONF = P_LANCTONF);

         ELSE
            UPDATE ITEMENCARGO
               SET VRITEMENCA = 0,
                   VRENCAINFOMANU = NULL
             WHERE CDFILIAL   = P_FILIAL
               AND NRLANCTONF = P_LANCTONF
               AND CDENCARGO IN (SELECT E.CDENCARGO
                                   FROM ENCARGO E, ITEMENCARGO I
                                  WHERE E.CDENCARGONFE = '01'
                                    AND E.CDENCARGO    = I.CDENCARGO
                                    AND I.CDFILIAL     = P_FILIAL
                                    AND I.NRLANCTONF   = P_LANCTONF);

         END IF;
         FOR C_ENCVALFRETE IN (SELECT E.CDENCARGO
                                 FROM ENCARGO E, ITEMENCARGO I
                                WHERE E.CDENCARGONFE = '01'
                                  AND E.CDENCARGO    = I.CDENCARGO
                                  AND I.CDFILIAL     = P_FILIAL
                                  AND I.NRLANCTONF   = P_LANCTONF


         ) LOOP

            UPDATE ITEMENCARGO
               SET VRITEMENCA = NVL(VRITEMENCA, 0) + (V_VALFRETEPROD / V_QTENCRELAC)
             WHERE CDFILIAL   = P_FILIAL
               AND NRLANCTONF = P_LANCTONF
               AND CDENCARGO  = C_ENCVALFRETE.CDENCARGO;
         END LOOP;
      END IF;
   END IF;

   IF (V_IDUTILNFSE = 'S') THEN

      V_QTDREGSERV := 0;
      BEGIN
         SELECT CDPAISPRESSERV,
                SGESTADOPRESSERV,
                CDMUNICIPRESSERV,
                COUNT(*)
           INTO V_CDPAISSERV,
                V_SGESTADOSERV,
                V_CDMUNICIPIOSERV,
                V_QTDREGSERV
           FROM DADOSERVPRES
          WHERE CDFILIAL   = P_FILIAL
            AND NRLANCTONF = P_LANCTONF
          GROUP BY CDPAISPRESSERV,
                   SGESTADOPRESSERV,
                   CDMUNICIPRESSERV;
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
            V_CDPAISSERV      := NULL;
            V_SGESTADOSERV    := NULL;
            V_CDMUNICIPIOSERV := NULL;
            V_QTDREGSERV      := 0;
      END;

      IF (V_QTDREGSERV > 0) THEN
         V_PAISDEST := V_CDPAISSERV;
         V_ESTADEST := V_SGESTADOSERV;
         V_MUNIDEST := V_CDMUNICIPIOSERV;
      ELSE
         IF (V_IDLOCSERVENDIM = 'S') THEN
            INSERT INTO DADOSERVPRES
               (CDFILIAL, NRLANCTONF, IDNATUOPER, CDPAISPRESSERV, SGESTADOPRESSERV, CDMUNICIPRESSERV)
            VALUES
               (P_FILIAL, P_LANCTONF, '01', V_CDPAISIM, V_SGESTADOIM, V_CDMUNICIPIOIM);

            V_PAISDEST := V_CDPAISIM;
            V_ESTADEST := V_SGESTADOIM;
            V_MUNIDEST := V_CDMUNICIPIOIM;
         END IF;
      END IF;
   END IF;

   IF V_IDOPERDEVONF <> w_S THEN  /*SE NAO UTILIZA DOCUMENTO DE ORIGEM*/
      IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
         UPDATE ITEMPRODUTO
         SET VRBRUTITEM   = TRUNC((VRTOTAITEM - VRDESCITEM), 2),
             VRCONTITEM   = TRUNC((VRTOTAITEM - VRDESCITEM), 2)
         WHERE CDFILIAL   = P_FILIAL   AND
               NRLANCTONF = P_LANCTONF;
      ELSE
         UPDATE ITEMPRODUTO
         SET VRBRUTITEM   = ROUND((VRTOTAITEM - VRDESCITEM), 2),
             VRCONTITEM   = ROUND((VRTOTAITEM - VRDESCITEM), 2)
         WHERE CDFILIAL   = P_FILIAL   AND
               NRLANCTONF = P_LANCTONF;
      END IF;
      V_IDOPERDEVONF := w_N;
   ELSE
      IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
         UPDATE ITEMPRODUTO
         SET VRBRUTITEM   = TRUNC((VRTOTAITEM - VRDESCITEM), 2),
             VRCONTITEM   = TRUNC((VRTOTAITEM - VRDESCITEM), 2)
         WHERE CDFILIAL   = P_FILIAL   AND
               NRLANCTONF = P_LANCTONF;
      ELSE
         UPDATE ITEMPRODUTO
         SET VRBRUTITEM   = ROUND((VRTOTAITEM - VRDESCITEM), 2),
             VRCONTITEM   = ROUND((VRTOTAITEM - VRDESCITEM), 2)
         WHERE CDFILIAL   = P_FILIAL   AND
               NRLANCTONF = P_LANCTONF;
      END IF;

      SELECT COUNT(*)
      INTO   V_COUNT
      FROM ITEMNOTAFISC
      WHERE CDFILIAL   = P_FILIAL AND
            NRLANCTONF = P_LANCTONF;

      V_IDDEVOLIST := w_N; /*SE O DOCUMENTO DE ORIGEM E DE LISTA OU NAO*/
      IF (V_COUNT > 1) OR (V_IDUTLLISTORI = 'S') THEN
         V_IDDEVOLIST := w_S;
      END IF;

      IF (V_COUNT = 0) THEN
         V_IDOPERDEVONF := w_N;

         IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
            UPDATE ITEMPRODUTO
            SET VRBRUTITEM   = TRUNC((VRTOTAITEM - VRDESCITEM), 2),
                VRCONTITEM   = TRUNC((VRTOTAITEM - VRDESCITEM), 2)
            WHERE CDFILIAL   = P_FILIAL   AND
                  NRLANCTONF = P_LANCTONF;
         ELSE
            UPDATE ITEMPRODUTO
            SET VRBRUTITEM   = ROUND((VRTOTAITEM - VRDESCITEM), 2),
                VRCONTITEM   = ROUND((VRTOTAITEM - VRDESCITEM), 2)
            WHERE CDFILIAL   = P_FILIAL   AND
                  NRLANCTONF = P_LANCTONF;
         END IF;
      ELSE
         V_IDOPERDEVONF := w_S;
         IF (P_TIPOOPER = '03') OR (P_TIPOOPER = '05') OR (P_TIPOOPER = '11') THEN
            V_IDOPERDEVONF := w_N;
         END IF;
      END IF;
   END IF;

   DELETE 
     FROM DETESPCOMBNFE
    WHERE CDFILIAL = P_FILIAL
      AND NRLANCTONF = P_LANCTONF;

   /* GRAVA INFORMAÇÕES ADICIONAIS DO PRODUTO */
   V_IDPRODPERIG := 'N';
   FOR C_ITEMPRODINF IN (SELECT I.NRSEQITPROD,
                             P.IDPRODPERIG,
                             TRANSLATE(P.DSINFADICPROD,  'ŠŽšžŸÁÇÉÍÓÚÀÈÌÒÙÂÊÎÔÛÃÕËÜÏÖÑÝåáçéíóúàèìòùâêîôûãõëüïöñýÿ',
                                                         'SZszYACEIOUAEIOUAEIOUAOEUIONYaaceiouaeiouaeiouaoeuionyy') AS DSINFADICPROD,
                             I.CDPRODUTO,
                             TRANSLATE(INF.NRONU,         'ŠŽšžŸÁÇÉÍÓÚÀÈÌÒÙÂÊÎÔÛÃÕËÜÏÖÑÝåáçéíóúàèìòùâêîôûãõëüïöñýÿ',
                                                          'SZszYACEIOUAEIOUAEIOUAOEUIONYaaceiouaeiouaeiouaoeuionyy') AS NRONU,
                             TRANSLATE(INF.NRRISCO,       'ŠŽšžŸÁÇÉÍÓÚÀÈÌÒÙÂÊÎÔÛÃÕËÜÏÖÑÝåáçéíóúàèìòùâêîôûãõëüïöñýÿ',
                                                          'SZszYACEIOUAEIOUAEIOUAOEUIONYaaceiouaeiouaeiouaoeuionyy') AS NRRISCO,
                             TRANSLATE(G.NMGRUPO,         'ŠŽšžŸÁÇÉÍÓÚÀÈÌÒÙÂÊÎÔÛÃÕËÜÏÖÑÝåáçéíóúàèìòùâêîôûãõëüïöñýÿ',
                                                          'SZszYACEIOUAEIOUAEIOUAOEUIONYaaceiouaeiouaeiouaoeuionyy') AS NMGRUPO,
                             TRANSLATE(INF.NRREGISTROANP, 'ŠŽšžŸÁÇÉÍÓÚÀÈÌÒÙÂÊÎÔÛÃÕËÜÏÖÑÝåáçéíóúàèìòùâêîôûãõëüïöñýÿ',
                                                          'SZszYACEIOUAEIOUAEIOUAOEUIONYaaceiouaeiouaeiouaoeuionyy') AS NRREGISTROANP,
                             TRANSLATE(INF.DSREGISTROANP, 'ŠŽšžŸÁÇÉÍÓÚÀÈÌÒÙÂÊÎÔÛÃÕËÜÏÖÑÝåáçéíóúàèìòùâêîôûãõëüïöñýÿ',
                                                          'SZszYACEIOUAEIOUAEIOUAOEUIONYaaceiouaeiouaeiouaoeuionyy') AS DSREGISTROANP,
                             TRANSLATE(INF.NMTECNICO,     'ŠŽšžŸÁÇÉÍÓÚÀÈÌÒÙÂÊÎÔÛÃÕËÜÏÖÑÝåáçéíóúàèìòùâêîôûãõëüïöñýÿ',
                                                          'SZszYACEIOUAEIOUAEIOUAOEUIONYaaceiouaeiouaeiouaoeuionyy') AS NMTECNICO,
                             TRANSLATE(I.DSINFADICPROD,   'ŠŽšžŸÁÇÉÍÓÚÀÈÌÒÙÂÊÎÔÛÃÕËÜÏÖÑÝåáçéíóúàèìòùâêîôûãõëüïöñýÿ',
                                                          'SZszYACEIOUAEIOUAEIOUAOEUIONYaaceiouaeiouaeiouaoeuionyy') AS DSINFADICPRODITEM
                        FROM ITEMPRODUTO I LEFT JOIN PRODUTO P ON (I.CDPRODUTO = P.CDPRODUTO)
                                           LEFT JOIN INFADICPROD INF ON (P.CDPRODUTO = INF.CDPRODUTO)
                                           LEFT JOIN GREMBALAGEM G ON (INF.CDGREMBALAGEM = G.CDGRUPO)
                       WHERE I.CDFILIAL = P_FILIAL
                         AND I.NRLANCTONF = P_LANCTONF)
   LOOP
      V_DSINFADICPROD := C_ITEMPRODINF.DSINFADICPRODITEM;

      IF (C_ITEMPRODINF.NRONU IS NOT NULL) OR (TRIM(C_ITEMPRODINF.NRONU) <> '') THEN
         IF (NVL(INSTR(V_DSINFADICPROD, C_ITEMPRODINF.NRONU) = 0, TRUE)) THEN
            V_DSINFADICPROD := 'ONU: ' || C_ITEMPRODINF.NRONU || ' | ' ;
         END IF;
      END IF;
      IF (C_ITEMPRODINF.NMTECNICO IS NOT NULL) OR (TRIM(C_ITEMPRODINF.NMTECNICO) <> '') THEN
         IF (NVL(INSTR(V_DSINFADICPROD, C_ITEMPRODINF.NMTECNICO) = 0, TRUE)) THEN
            V_DSINFADICPROD := V_DSINFADICPROD || 'Nome para Embarque: ' || C_ITEMPRODINF.NMTECNICO || ' | ' ;
         END IF;
      END IF;
      IF (C_ITEMPRODINF.NRRISCO IS NOT NULL) OR (TRIM(C_ITEMPRODINF.NRRISCO) <> '') THEN
         IF (NVL(INSTR(V_DSINFADICPROD, 'Classe de Risco') = 0, TRUE)) THEN
            V_DSINFADICPROD := V_DSINFADICPROD || 'Classe de Risco: ' || C_ITEMPRODINF.NRRISCO || ' | ' ;
         END IF;
      END IF;
      IF (C_ITEMPRODINF.NMGRUPO IS NOT NULL) OR (TRIM(C_ITEMPRODINF.NMGRUPO) <> '') THEN
         IF (NVL(INSTR(V_DSINFADICPROD, C_ITEMPRODINF.NMGRUPO) = 0, TRUE)) THEN
            V_DSINFADICPROD := V_DSINFADICPROD || 'Grupo de Embalagem: ' || C_ITEMPRODINF.NMGRUPO || ' | ' ;
         END IF;
      END IF;

      /*IF (C_ITEMPRODINF.IDPRODPERIG = 'N') OR (C_ITEMPRODINF.IDPRODPERIG IS NULL) THEN
         V_DSINFADICPROD := '';
      END IF; - issue 490685*/

      IF (C_ITEMPRODINF.DSINFADICPROD IS NOT NULL) OR (TRIM(C_ITEMPRODINF.DSINFADICPROD) <> '') THEN
         IF (NVL(INSTR(V_DSINFADICPROD, C_ITEMPRODINF.DSINFADICPROD) = 0, TRUE)) THEN
            V_DSINFADICPROD := V_DSINFADICPROD || ' ' || C_ITEMPRODINF.DSINFADICPROD || ' | ' ;
         END IF;
      END IF;

      --ESSA CONDIÇÃO FOI COLOCADA APENAS PARA TIRAR O " | " NO FINAL DA VARIÁVEL
      IF (V_DSINFADICPROD IS NOT NULL) OR (TRIM(V_DSINFADICPROD) <> '') THEN
         IF (TRIM(SUBSTR(V_DSINFADICPROD, LENGTH(V_DSINFADICPROD)- 2, 3)) = '|') THEN
            V_DSINFADICPROD := TRIM(SUBSTR(V_DSINFADICPROD, 1, LENGTH(V_DSINFADICPROD) - 3));
         END IF;
      END IF;

      UPDATE ITEMPRODUTO
         SET DSINFADICPROD = V_DSINFADICPROD
       WHERE CDFILIAL = P_FILIAL
         AND NRLANCTONF = P_LANCTONF
         AND NRSEQITPROD = C_ITEMPRODINF.NRSEQITPROD;

      IF C_ITEMPRODINF.NRREGISTROANP IS NOT NULL THEN
         INSERT INTO DETESPCOMBNFE
            (CDFILIAL, NRLANCTONF, NRSEQITPROD, CDPAIS, 
             SGESTADO, CDPRODANP, DSPRODANP)
         VALUES
            (P_FILIAL, P_LANCTONF, C_ITEMPRODINF.NRSEQITPROD, V_PAISORIG, 
             V_ESTAORIG, SUBSTR(C_ITEMPRODINF.NRREGISTROANP, 1, 9), SUBSTR(C_ITEMPRODINF.DSREGISTROANP, 1, 255));
      END IF;

      IF C_ITEMPRODINF.IDPRODPERIG = 'S' THEN
         V_IDPRODPERIG := 'S';
      END IF;
   END LOOP;

   /* GRAVA MENSAGEM REFERENTE A PRODUTO PERIGOSO */
   IF V_IDPRODPERIG = 'S' THEN
      V_MSGPRODPERIG := 'Declaro que os produtos perigosos estão adequadamente ' ||
                        'classificados, embalados, identificados, e estivados ' ||
                        'para suportar os riscos das operações de transporte e ' ||
                        'que atendem às exigências da regulamentação.';
      BEGIN
         SELECT COUNT(DSDADOADIC)
           INTO V_GRAVAMSGPRODPERIG
           FROM DADOSADIC
          WHERE (CDFILIAL = P_FILIAL)
            AND (NRLANCTONF = P_LANCTONF)
            AND (DSDADOADIC LIKE SUBSTR(V_MSGPRODPERIG, 1, LENGTH(V_MSGPRODPERIG) - 19) || '%');
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
            V_GRAVAMSGPRODPERIG := 0;
      END;

      IF (V_GRAVAMSGPRODPERIG = 0) THEN
         INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, CDMENSAGEM, DSDADOADIC)
                        VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, NULL, V_MSGPRODPERIG);

         V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
      END IF;
   End If;

   DELETE FROM DADOSADIC
    WHERE CDFILIAL = P_FILIAL
      AND NRLANCTONF = P_LANCTONF
      AND DSDADOADIC LIKE 'ICMS retido anteriormente por substituição tributária: BC %';

   DELETE FROM DADOSADIC
     WHERE CDFILIAL = P_FILIAL
       AND NRLANCTONF = P_LANCTONF
       AND DSDADOADIC LIKE 'Permite o aproveitamento do credito do ICMS no valor de R$ %';

-- ATUALIZAÇÃO DAS TABELAS DE NOTAFISCAL, ITEMPRODUTO E DADOS ADICIONAIS

   IF NOT(P_TIPOOPER IN ('03','07','09','10','12')) AND (V_IDOPERDEVONF <> w_S) AND (V_IDNFAJUSTE <> w_S) OR
         ((V_IDNFAJUSTE = w_S) AND (V_IDCONSPARFIS = w_S)) THEN
   /*AS NOTAS QUE NAO UTILIZAM DOCUMENTO DE ORIGEM*/

      FOR C_ITEMPRODUTO IN (SELECT VRTOTAITEM, VRDESCITEM, IT.CDPRODUTO, NRSEQITPROD,
                                   CDCSTINFUSU, CDCFOPINFUSU, CDSUFXINFUSU, P.CDARVPROD,
                                   IT.QTITEMPROD, IT.IDORIGEMPROD, IT.VRUNITITEM, NVL(IDPRODBONIF , 'N') AS IDPRODBONIF
                            FROM ITEMPRODUTO IT, PRODUTO P
                            WHERE IT.CDFILIAL   = P_FILIAL   AND
                                  IT.NRLANCTONF = P_LANCTONF AND
                                  IT.CDPRODUTO  = P.CDPRODUTO) LOOP

         IF (C_ITEMPRODUTO.QTITEMPROD > 0) OR ((V_IDNFAJUSTE = w_S) AND (V_IDCONSPARFIS = w_S)) THEN
            V_LIQUIITEM := C_ITEMPRODUTO.VRTOTAITEM - C_ITEMPRODUTO.VRDESCITEM;

            /*VERIFICA O CST POR ITEM*/
            IF (C_ITEMPRODUTO.IDPRODBONIF = 'N') OR (V_CDTIPOOPERBONIF = 'N') THEN
               CONSULTA_CST(w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, P_TIPOOPER, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, V_IDINTEREST, V_IDINTERNA, NULL, C_ITEMPRODUTO.IDORIGEMPROD);
            ELSE
               CONSULTA_CST(w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, V_CDTIPOOPERBONIF, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, V_IDINTEREST, V_IDINTERNA, NULL, C_ITEMPRODUTO.IDORIGEMPROD);
            END IF;

            FOR C_CSTTEMP IN (SELECT DSMENSCSTTMP
                              FROM CSTTEMP
                              WHERE (NRCSTTEMP = V_CSTTEMP)    AND
                                    (DSMENSCSTTMP IS NOT NULL) AND
                                    (NOT EXISTS(SELECT DSDADOADIC
                                                FROM DADOSADIC
                                                WHERE (CDFILIAL   = P_FILIAL)   AND
                                                      (NRLANCTONF = P_LANCTONF) AND
                                                      (DSDADOADIC LIKE CSTTEMP.DSMENSCSTTMP || '%')))) LOOP

               IF NOT (C_CSTTEMP.DSMENSCSTTMP IS NULL) THEN
                  /*PREENCHE AS MENSAGENS ATRELADAS AO CST*/
                  INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
                  VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, C_CSTTEMP.DSMENSCSTTMP);

                  V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
               END IF;
            END LOOP;

            IF V_PAISORIG = V_PAISCFOP THEN
               IF V_ESTAORIG = V_ESTACFOP THEN
                  V_CFOP1DIGT := '5';
               ELSE
                  V_CFOP1DIGT := '6';
               END IF;
            ELSE
               V_CFOP1DIGT := '7';
            END IF;

            /*VERIFICA CFOP POR ITEM*/
            IF (C_ITEMPRODUTO.IDPRODBONIF = 'N') OR (V_CDTIPOOPERBONIF = 'N') THEN
               CONSULTA_CFOP(w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, P_TIPOOPER, V_PAISORIG,
                              V_ESTAORIG, V_PAISCFOP, V_ESTACFOP, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_INIVALID, C_ITEMPRODUTO.IDORIGEMPROD );
            ELSE
               CONSULTA_CFOP(w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, V_CDTIPOOPERBONIF, V_PAISORIG,
                              V_ESTAORIG, V_PAISCFOP, V_ESTACFOP, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_INIVALID, C_ITEMPRODUTO.IDORIGEMPROD );

            END IF;

            FOR C_CFOPTEMP IN (SELECT DSMENSCFOTMP
                               FROM CFOPTEMP
                               WHERE (NRCFOPTEMP = V_CFOPTEMP)  AND
                                     (DSMENSCFOTMP IS NOT NULL) AND
                                     (NOT EXISTS(SELECT DSDADOADIC
                                                 FROM DADOSADIC
                                                 WHERE (CDFILIAL   = P_FILIAL)   AND
                                                       (NRLANCTONF = P_LANCTONF) AND
                                                       (DSDADOADIC LIKE CFOPTEMP.DSMENSCFOTMP || '%')))) LOOP

               IF NOT (C_CFOPTEMP.DSMENSCFOTMP IS NULL) THEN
                  /*PREENCHE AS MENSAGENS ATRELADAS AO CFOP*/
                  INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
                                 VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, C_CFOPTEMP.DSMENSCFOTMP);

                  V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
               END IF;
            END LOOP;

            V_CFOPINFUSU := 'N';
            IF C_ITEMPRODUTO.CDCFOPINFUSU IS NULL THEN /*SE NAO HOUVER CFOP INFORMADO PELO USUARIO PARA O PRODUTO*/
               /*SE A DESCRIÇÃO DO CFOP NAO TIVER SIDO INFORMADA PELO USUARIO O SISTEMA ASSUME A DESCRICAO DO CFOP DOS ITENS*/
               UPDATE NOTAFISCAL
                  SET DSCDFISOPENF = (SELECT MAX(DSCFOPTMP) FROM CFOPTEMP
                                     WHERE NRCFOPTEMP = V_CFOPTEMP)
               WHERE CDFILIAL   = P_FILIAL   AND
                     NRLANCTONF = P_LANCTONF;

               SELECT MAX(CDFISOPETMP), MAX(CDSUFCFOPTMP), SUBSTR(MAX(DSCFOPTMP),1,50)
               INTO   V_FISOPEITEM    , V_SUFXCFOPPR, V_DSCDFISOPEIT
               FROM CFOPTEMP
               WHERE NRCFOPTEMP = V_CFOPTEMP;

               SELECT MAX(CDSITTRIBTMP)
               INTO   V_SITUTRIBPR
               FROM CSTTEMP
               WHERE NRCSTTEMP = V_CSTTEMP;

            ELSE /*SE HOUVER CFOP INFORMADO PELO USUARIO PARA O PRODUTO*/
               V_CFOPINFUSU := 'S';
               V_FISOPEITEM := C_ITEMPRODUTO.CDCFOPINFUSU;
               V_SUFXCFOPPR := C_ITEMPRODUTO.CDSUFXINFUSU;
               V_SITUTRIBPR := C_ITEMPRODUTO.CDCSTINFUSU;

            END IF;

            IF V_IDDOCREPLIC IS NOT NULL THEN /*SE A NF FOI REPLICADA*/
               IF LENGTH(V_SITUTRIBPR) = 3 THEN
                  V_SITUTRIBPR := SUBSTR(V_SITUTRIBPR,1,1) || w_90;
               ELSE
                  V_SITUTRIBPR := w_90;
               END IF;
            END IF;

            /*VERIFICA CSOSN POR IMPOSTO*/
            IF (C_ITEMPRODUTO.IDPRODBONIF = 'N') OR (V_CDTIPOOPERBONIF = 'N') THEN
               CONSULTA_CSOSN('S', P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, P_TIPOOPER, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, V_IDINTEREST, V_CDFISCOPERSN);
            ELSE
               CONSULTA_CSOSN('S', P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, V_CDTIPOOPERBONIF, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, V_IDINTEREST, V_CDFISCOPERSN);
            END IF;

            UPDATE ITEMPRODUTO
            SET CDFISOPEITEM  = V_FISOPEITEM,
                CDSUFXCFOPPR  = V_SUFXCFOPPR,
                CDSITUTRIBPR  = V_SITUTRIBPR,
                DSCDFISOPEIT  = V_DSCDFISOPEIT,
                CDFISCOPERSN  = V_CDFISCOPERSN
            WHERE CDFILIAL    = P_FILIAL AND
                  NRLANCTONF  = P_LANCTONF AND
                  NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;

            DELETE CFOPTEMP
            WHERE NRCFOPTEMP = V_CFOPTEMP;

            DELETE CSTTEMP
            WHERE NRCSTTEMP = V_CSTTEMP;

      -- ATUALIZAÇÃO DA TABELA DE IMPOSTOS POR ITEM.

            DELETE ITEMPROIMPOS
            WHERE (CDFILIAL    = P_FILIAL)   AND
                  (NRLANCTONF  = P_LANCTONF) AND
                  (NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD);

            DELETE ITEMPROIMPOSORIG
            WHERE (CDFILIAL    = P_FILIAL)   AND
                  (NRLANCTONF  = P_LANCTONF) AND
                  (NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD);

            SELECT COUNT(*)
            INTO   V_IMPOSINFUSU
            FROM IMPOSINFUSU
            WHERE (CDFILIAL    = P_FILIAL)   AND
                  (NRLANCTONF  = P_LANCTONF) AND
                  (NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD);

            IF V_IMPOSINFUSU = 0 THEN
            -- Verifica se há grupo fiscal por servico
               SELECT MAX(CDGRUPOFISC)
               INTO V_CDGRPFISCSV
               FROM SERVCLIE SC, SERVICO S
               WHERE SC.CDFILIAL   = V_CDFILIEMIT AND
                     SC.CDCLIENTE  = P_CLIENTE    AND
                     SC.CDFILIAL   = S.CDFILIAL   AND
                     SC.CDSERVFILI = S.CDSERVFILI AND
                     S.CDPRODUTO   = C_ITEMPRODUTO.CDPRODUTO;

               IF V_CDGRPFISCSV IS NULL THEN
                  -- Verifica se há grupo fiscal por cliente da filial
                  SELECT MAX(CDGRUPOFISC)
                  INTO V_CDGRPFISCSV
                  FROM CLIENFILIAL
                  WHERE CDFILIAL   = V_CDFILIEMIT AND
                        CDCLIENTE  = P_CLIENTE;
               END IF;

               IF (C_ITEMPRODUTO.IDPRODBONIF = 'N') OR (V_CDTIPOOPERBONIF = 'N') THEN
                     CONSULTA_INCIDENCIA(w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, P_TIPOOPER, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, V_CDGRPFISCSV,
                                         V_IDINTEREST, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPRODUTO.IDORIGEMPROD);
               ELSE
                  CONSULTA_INCIDENCIA(w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, V_CDTIPOOPERBONIF, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, V_CDGRPFISCSV,
                                         V_IDINTEREST, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPRODUTO.IDORIGEMPROD);
               END IF;

               FOR C_INCITEMP IN (SELECT DSMENSINCTMP
                                  FROM INCITEMP
                                  WHERE (NRINCITEMP = V_INCITEMP)  AND
                                        (DSMENSINCTMP IS NOT NULL) AND
                                        (NOT EXISTS(SELECT DSDADOADIC
                                                    FROM DADOSADIC
                                                    WHERE (CDFILIAL   = P_FILIAL)   AND
                                                          (NRLANCTONF = P_LANCTONF) AND
                                                          (DSDADOADIC LIKE INCITEMP.DSMENSINCTMP || '%')))) LOOP

                  IF NOT(C_INCITEMP.DSMENSINCTMP IS NULL) THEN
                  /*PREENCHE AS MENSAGENS ATRELADAS A INCIDENCIA*/
                     INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
                                    VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, C_INCITEMP.DSMENSINCTMP);

                     V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
                  END IF;
               END LOOP;

               FOR C_INCIDENCIA IN (SELECT DISTINCT (CDIMPOTEMP) AS CDIMPOTEMP, CDFISCTEMP, IDTRATIMPTMP, IDUTMUNIORIG,
                                           IDCONSISTENT, IDIMPORECUP, IDUTVLRQTDEIMPO, CDDETALHEPROD,
                                           CDREGRATMP, IP.CDIMPOSTONFE, IT.CDENQLEGALIPI, IT.CDCEST,
                                           IT.VRADICALIQFECP, IP.IDDESONERAIMPO, IP.CDIMPOBASERET, IP.IDDESCRFONTE
                                    FROM INCITEMP IT, IMPOSTO IP
                                    WHERE (IT.NRINCITEMP = V_INCITEMP)    AND
                                          (IP.CDIMPOSTO  = IT.CDIMPOTEMP) AND
                                          (IP.IDPRODNOTA = w_P)
                                    ORDER BY CDIMPOTEMP) LOOP

                  -- Se o imposto é retido (valor NF) e se utiliza o valor de outro imposto como base de cálculo
                  IF ((C_INCIDENCIA.IDTRATIMPTMP = 'R') AND (C_INCIDENCIA.CDIMPOBASERET IS NOT NULL)) THEN
                     V_VRIMPORELAC := 0;

                     SELECT NVL(MAX(VRIMPOSTOIT),0)
                       INTO V_VRIMPORELAC
                       FROM ITEMPROIMPOS
                      WHERE CDFILIAL     = P_FILIAL
                        AND NRLANCTONF   = P_LANCTONF
                        AND NRSEQITPROD  = C_ITEMPRODUTO.NRSEQITPROD
                        AND CDIMPOSTO    = C_INCIDENCIA.CDIMPOBASERET
                        AND NRITPROIMPOS = W_1;

                     IF V_VRIMPORELAC <> 0 THEN
                        V_LIQUIITEM := V_VRIMPORELAC;
                     END IF;
                  ELSE
                     V_LIQUIITEM := C_ITEMPRODUTO.VRTOTAITEM - C_ITEMPRODUTO.VRDESCITEM;
                  END IF;

                  V_ALIQUTMP := 0;
                  V_SIMPLES  := 'N';
                  V_UTIBB    := 'N';
                  V_VRADICALIQFECP := C_INCIDENCIA.VRADICALIQFECP;
                  V_CDBENEFFISCAL := NULL;

   --integração fiscal especifica com Compass_Argentina atraves da importação de aliquota do imposto IBB
   --A aliquota de imposto 03(ibb) sera cadastrada na tabela paramintegraibb e tera prioridade sobre o
   -- cadastro de aliquota realizado em sistema
                  IF C_INCIDENCIA.CDIMPOTEMP = '03' THEN
                     IF V_IDORIGDESTNF = 'C' THEN
                        V_ALIQUTMP := 0;

                        V_DTVINGENTE := NVL(V_DTINIREFEFAT, P_INIVALID);

                        SELECT NVL(MAX(VRALIQUOTAIBB),NULL)
                        INTO   V_ALIQUTMP
                        FROM PARAMINTEGRAIBB
                        WHERE CDCLIENTE = P_CLIENTE AND
                              V_DTVINGENTE BETWEEN DTVIGINICIALIBB AND DTVIGFINALIBB;

                        IF V_ALIQUTMP IS NOT NULL THEN
                           V_NRALIQTEMP   := 0;
                           V_PARDEDTMP    := 0;
                           V_PREDBCTMP    := 0;
                           V_TRATIMPST    := w_0;
                           V_PBCSUBTRIB   := 0;
                           V_IDPMCBASECAL := 'N';
                           V_UTIBB        := 'S';
                        END IF;
                     END IF;
                  END IF;


                  /*VERIFICA CST POR IMPOSTO*/
                  V_IMPOICMS := NULL;
                  V_CDGRUPOFISCAUX := NULL;

                  SELECT MAX(G.CDGRUPOFISC)
                    INTO V_CDGRUPOFISCAUX
                    FROM GRUPOFISCIMPFIL G,
                         (SELECT CDFILIEMIT AS CDFILIAL
                            FROM NOTAFISCAL
                           WHERE CDFILIAL = P_FILIAL
                                 AND NRLANCTONF = P_LANCTONF) F
                   WHERE G.CDFILIAL = F.CDFILIAL
                     AND NOT G.CDGRUPOFISC IS NULL
                     AND G.CDIMPOSTO = C_INCIDENCIA.CDIMPOTEMP;
                  IF V_IDORIGDESTNF = 'C' THEN
                     SELECT NVL(MAX(G.CDGRUPOFISC), V_CDGRUPOFISCAUX)
                       INTO V_CDGRUPOFISCAUX
                       FROM GRFISIMPIECLIE G,
                            (SELECT CDCLIENTE
                               FROM NOTAFISCAL
                              WHERE CDFILIAL = P_FILIAL
                                AND NRLANCTONF = P_LANCTONF) N
                      WHERE G.CDCLIENTE = N.CDCLIENTE
                        AND G.CDEMPRESA = P_EMPRESA
                        AND G.CDINSCESTA = P_INSCESTA
                        AND NOT G.CDGRUPOFISC IS NULL
                        AND G.CDIMPOSTO = C_INCIDENCIA.CDIMPOTEMP;
                  ELSE
                     SELECT NVL(MAX(G.CDGRUPOFISC), V_CDGRUPOFISCAUX)
                       INTO V_CDGRUPOFISCAUX
                       FROM GRFISIMPIEFORN G,
                           (SELECT CDFORNECED
                              FROM NOTAFISCAL
                             WHERE CDFILIAL = P_FILIAL
                               AND NRLANCTONF = P_LANCTONF) N
                      WHERE G.CDFORNECED = N.CDFORNECED
                        AND G.CDEMPRESA = P_EMPRESA
                        AND G.CDINSCESTA = P_INSCESTA
                        AND NOT G.CDGRUPOFISC IS NULL
                        AND G.CDIMPOSTO = C_INCIDENCIA.CDIMPOTEMP;
                  END IF;

                  IF V_CDGRUPOFISCAUX IS NULL THEN
                     IF (C_ITEMPRODUTO.IDPRODBONIF = 'N') OR (V_CDTIPOOPERBONIF = 'N') THEN
                        CONSULTA_CST_NFE(w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, P_TIPOOPER, V_CDGRUPOFISC,C_INCIDENCIA.CDIMPOTEMP, V_IDINTEREST, V_IDINTERNA, P_FILIAL, P_LANCTONF, '', V_CDSITTRIBTMP, V_IDMODBCNFE, V_IDMODBCSTNFE, V_CDTPCRPICOSTNFE, V_CDNATUBCPCSTNFE, V_IDMOTIDESSTNFE, C_ITEMPRODUTO.IDORIGEMPROD);
                     ELSE
                        CONSULTA_CST_NFE(w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, V_CDTIPOOPERBONIF, V_CDGRUPOFISC,C_INCIDENCIA.CDIMPOTEMP, V_IDINTEREST, V_IDINTERNA, P_FILIAL, P_LANCTONF, '', V_CDSITTRIBTMP, V_IDMODBCNFE, V_IDMODBCSTNFE, V_CDTPCRPICOSTNFE, V_CDNATUBCPCSTNFE, V_IDMOTIDESSTNFE, C_ITEMPRODUTO.IDORIGEMPROD);
                     END IF;
                  ELSE
                     IF (C_ITEMPRODUTO.IDPRODBONIF = 'N') OR (V_CDTIPOOPERBONIF = 'N') THEN
                        CONSULTA_CST_NFE(w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, P_TIPOOPER, V_CDGRUPOFISCAUX,C_INCIDENCIA.CDIMPOTEMP, V_IDINTEREST, V_IDINTERNA, P_FILIAL, P_LANCTONF, '', V_CDSITTRIBTMP, V_IDMODBCNFE, V_IDMODBCSTNFE, V_CDTPCRPICOSTNFE, V_CDNATUBCPCSTNFE, V_IDMOTIDESSTNFE, C_ITEMPRODUTO.IDORIGEMPROD);
                     ELSE
                        CONSULTA_CST_NFE(w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, V_CDTIPOOPERBONIF, V_CDGRUPOFISCAUX,C_INCIDENCIA.CDIMPOTEMP, V_IDINTEREST, V_IDINTERNA, P_FILIAL, P_LANCTONF, '', V_CDSITTRIBTMP, V_IDMODBCNFE, V_IDMODBCSTNFE, V_CDTPCRPICOSTNFE, V_CDNATUBCPCSTNFE, V_IDMOTIDESSTNFE, C_ITEMPRODUTO.IDORIGEMPROD);
                     END IF;
                  END IF;
                  V_CDSIMPLESNACIONAL := NULL;
                  V_CDFAIXA := NULL;
                  V_BCICMSSTRETIDO := 0;
                  V_VRICMSSTRETIDO := 0;
                  V_CDREGRAITALIQ  := NULL;

                  /*SIMPLES NACIONAL*/
                  IF (V_CDSITUCRT <> '3') THEN
                     /* Buscar CFOP do ICMS caso seja simples nacional para considerar na consulta da tabela*/
                     IF (C_INCIDENCIA.CDIMPOSTONFE = '00') THEN
                        DELETE ALIQTEMP
                         WHERE NRALIQTEMP = V_ALIQTEMP;

                        IF C_INCIDENCIA.IDUTMUNIORIG = w_D THEN
                           SELECT MAX(IDGRUPFISSRV)
                             INTO V_UTGRUPFISCS
                             FROM IMPOSTO
                            WHERE CDIMPOSTO   = C_INCIDENCIA.CDIMPOTEMP;

                           IF V_UTGRUPFISCS = 'S' THEN
                              V_CDGRPFISCSV := NULL;
                              SELECT MAX(CDGRUPOFISC)
                              INTO V_CDGRPFISCSV
                              FROM SERVCLIE SC, SERVICO S
                              WHERE SC.CDFILIAL   = V_CDFILIEMIT AND
                                    SC.CDCLIENTE  = P_CLIENTE    AND
                                    SC.CDFILIAL   = S.CDFILIAL   AND
                                    SC.CDSERVFILI = S.CDSERVFILI AND
                                    S.CDPRODUTO   = C_ITEMPRODUTO.CDPRODUTO;
                              IF V_CDGRPFISCSV IS NULL THEN
                                 SELECT MAX(CDGRUPOFISC)
                                 INTO V_CDGRPFISCSV
                                 FROM CLIENFILIAL
                                WHERE CDFILIAL   = V_CDFILIEMIT AND
                                      CDCLIENTE  = P_CLIENTE ;
                              END IF;
                              IF (C_ITEMPRODUTO.IDPRODBONIF = 'N') OR (V_CDTIPOOPERBONIF = 'N') THEN
                                 CONSULTA_ALIQUOTA(C_INCIDENCIA.CDIMPOTEMP, w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                   V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRPFISCSV,P_TIPOOPER,
                                                   NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPRODUTO.IDORIGEMPROD);
                              ELSE
                                 CONSULTA_ALIQUOTA(C_INCIDENCIA.CDIMPOTEMP, w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                   V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRPFISCSV,V_CDTIPOOPERBONIF,
                                                   NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPRODUTO.IDORIGEMPROD);
                              END IF;
                           ELSE
                               /* CONSIDERA O MUNICIPIO DE DESTINO */
                               IF (C_ITEMPRODUTO.IDPRODBONIF = 'N') OR (V_CDTIPOOPERBONIF = 'N') THEN
                                  CONSULTA_ALIQUOTA(C_INCIDENCIA.CDIMPOTEMP, w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                    V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_TIPOOPER,
                                                    NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPRODUTO.IDORIGEMPROD);
                               ELSE
                                  CONSULTA_ALIQUOTA(C_INCIDENCIA.CDIMPOTEMP, w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                    V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, V_CDTIPOOPERBONIF,
                                                    NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPRODUTO.IDORIGEMPROD);
                               END IF;
                           END IF;
                        ELSE
                          /* CONSIDERA O MUNICIPIO DE ORIGEM */
                           SELECT MAX(IDGRUPFISSRV)
                           INTO V_UTGRUPFISCS
                           FROM IMPOSTO
                           WHERE CDIMPOSTO   = C_INCIDENCIA.CDIMPOTEMP;

                           IF V_UTGRUPFISCS = 'S' THEN
                              V_CDGRPFISCSV := NULL;
                              SELECT MAX(CDGRUPOFISC)
                              INTO V_CDGRPFISCSV
                              FROM SERVCLIE SC, SERVICO S
                              WHERE SC.CDFILIAL   = V_CDFILIEMIT AND
                                    SC.CDCLIENTE  = P_CLIENTE    AND
                                    SC.CDFILIAL   = S.CDFILIAL   AND
                                    SC.CDSERVFILI = S.CDSERVFILI AND
                                    S.CDPRODUTO   = C_ITEMPRODUTO.CDPRODUTO;
                              IF V_CDGRPFISCSV IS NULL THEN
                                 SELECT MAX(CDGRUPOFISC)
                                 INTO V_CDGRPFISCSV
                                 FROM CLIENFILIAL
                                WHERE CDFILIAL   = V_CDFILIEMIT AND
                                      CDCLIENTE  = P_CLIENTE ;
                              END IF;

                              IF (C_ITEMPRODUTO.IDPRODBONIF = 'N') OR (V_CDTIPOOPERBONIF = 'N') THEN
                                 CONSULTA_ALIQUOTA(C_INCIDENCIA.CDIMPOTEMP, w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                   V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIORIG, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRPFISCSV, P_TIPOOPER,
                                                   NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPRODUTO.IDORIGEMPROD);
                              ELSE
                                 CONSULTA_ALIQUOTA(C_INCIDENCIA.CDIMPOTEMP, w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                   V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIORIG, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRPFISCSV, V_CDTIPOOPERBONIF,
                                                   NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPRODUTO.IDORIGEMPROD);
                              END IF;
                           ELSE
                               IF (C_ITEMPRODUTO.IDPRODBONIF = 'N') OR (V_CDTIPOOPERBONIF = 'N') THEN
                                  CONSULTA_ALIQUOTA(C_INCIDENCIA.CDIMPOTEMP, w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                    V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIORIG, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_TIPOOPER,
                                                    NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPRODUTO.IDORIGEMPROD);
                               ELSE
                                  CONSULTA_ALIQUOTA(C_INCIDENCIA.CDIMPOTEMP, w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                    V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIORIG, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, V_CDTIPOOPERBONIF,
                                                    NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPRODUTO.IDORIGEMPROD);
                               END IF;
                           END IF;
                        END IF;

                        SELECT MAX(CDFISCOPER)
                          INTO V_CDFISCOPERREGRA
                          FROM ALIQTEMP
                         WHERE (NRALIQTEMP = V_ALIQTEMP);

                        V_ICMS := 'N';
                        FOR C_ICMS IN (SELECT CDIMPOSTO
                                         FROM IMPOSTONFE N, IMPOSTO I
                                        WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                                          AND N.CDIMPOSTONFE = '00'
                                          AND I.CDIMPOSTO = C_INCIDENCIA.CDIMPOTEMP)
                        LOOP
                           V_ICMS := 'S';
                        END LOOP;

                        IF V_ICMS = 'S' THEN
                           IF (V_CDFISCOPERREGRA IS NOT NULL) THEN
                              V_CDFISCOPERREGRA   := V_CFOP1DIGT||V_CDFISCOPERREGRA;
                              V_DSCDFISOPEITREGRA := SUBSTR(DESCRICAO_CFOP(V_CDFISCOPERREGRA),1,45);

                              IF V_CFOPINFUSU <> 'S' THEN
                                 V_FISOPEITEM := V_CDFISCOPERREGRA;
                              END IF;
                           END IF;

                           IF V_CFOPINFUSU <> 'S' THEN
                              IF (V_DSCDFISOPEITREGRA IS NOT NULL) THEN
                                 UPDATE NOTAFISCAL
                                    SET DSCDFISOPENF = V_DSCDFISOPEITREGRA
                                  WHERE CDFILIAL   = P_FILIAL   AND
                                        NRLANCTONF = P_LANCTONF;
                              ELSE
                                 UPDATE NOTAFISCAL
                                    SET DSCDFISOPENF = (SELECT MAX(DSCFOPTMP)
                                                          FROM CFOPTEMP
                                                         WHERE NRCFOPTEMP = V_CFOPTEMP)
                                  WHERE CDFILIAL   = P_FILIAL
                                    AND NRLANCTONF = P_LANCTONF;
                              END IF;
                           END IF;

                           UPDATE ITEMPRODUTO
                              SET CDFISOPEITEM  = V_FISOPEITEM,
                                  DSCDFISOPEIT  = V_DSCDFISOPEIT
                            WHERE CDFILIAL    = P_FILIAL AND
                                  NRLANCTONF  = P_LANCTONF AND
                                  NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
                        END IF;
                        DELETE ALIQTEMP
                         WHERE NRALIQTEMP = V_ALIQTEMP;
                     END IF;

                     /* Buscar CFOP do ICMS caso seja simples nacional para considerar na consulta da tabela*/

                     CALCULA_ALIQUOTA_SN(P_EMPRESA,
                                         P_TIPOOPER,
                                         P_INIVALID,
                                         SUBSTR(V_FISOPEITEM, 2, 3),
                                         C_INCIDENCIA.CDIMPOSTONFE,
                                         V_VRSUBLIMITESN,
                                         'N',
                                         V_RBT12,
                                         V_RBA,
                                         V_CDSIMPLESNACIONAL,
                                         V_CDFAIXA,
                                         V_VRALIQSIMPLES);

                     IF (V_CDFAIXA IS NOT NULL) OR ((C_INCIDENCIA.CDIMPOSTONFE IN ('00', '31')) AND (V_RBT12 >= 3600000)) THEN

                        UPDATE ITEMPRODUTO
                           SET CDSIMPLESNACIONAL = V_CDSIMPLESNACIONAL
                         WHERE CDFILIAL    = P_FILIAL
                           AND NRLANCTONF  = P_LANCTONF
                           AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;

                        V_ALIQUTMP      := V_VRALIQSIMPLES;
                        V_CDREGRAITALIQ := C_INCIDENCIA.CDREGRATMP;
                        V_NRALIQTEMP    := 0;
                        V_PARDEDTMP     := 0;
                        V_PREDBCTMP     := 0;
                        V_TRATIMPST     := w_0;
                        V_PBCSUBTRIB    := 0;
                        V_IDPMCBASECAL  := 'N';
                        V_SIMPLES       := 'S';
                     END IF;

                     IF (V_CDFISCOPERSN = '500') OR (SUBSTR(V_CDFISCOPERSN,2, 3) = '500') THEN
                        V_CDIMPOSICMS  := null;
                        SELECT MAX(CDIMPOSTO)
                          INTO V_CDIMPOSICMS
                          FROM IMPOSTO
                         WHERE CDIMPOSTONFE = '00'
                           AND CDIMPOSTO = C_INCIDENCIA.CDIMPOTEMP;

                        IF V_CDIMPOSICMS IS NOT NULL THEN
                           V_ALIQUTMP := 0;
                        END IF;

                        /*Verifica se o imposto de st (hj o sistema só aceita o icms st)*/
                        /*IMPOSTO DE SUBSTITUICAO TRIBUTARIA*/
                        V_CDIMPOSTRIB  := null;
                        V_IDVRIMPSTRIB := null;
                        FOR C_ICMSST IN (SELECT CDIMPOSTRIB
                                           FROM IMPOSTO
                                          WHERE CDIMPOSTRIB = C_INCIDENCIA.CDIMPOTEMP)
                        LOOP
                           V_CDIMPOSTRIB := V_CDIMPOSTRIB||C_ICMSST.CDIMPOSTRIB||'_';
                        END LOOP;
                        V_BCICMSSTRETIDO := 0;
                        V_VRICMSSTRETIDO := 0;
                        IF V_CDIMPOSTRIB IS NOT NULL THEN
                           IF V_IDUTILLOTE = 'S' THEN
                              SELECT MAX(IDUTCTRLLOTE)
                                INTO V_IDUTCTRLLOTE
                                FROM PRODFILI
                               WHERE CDFILIAL  = V_CDFILIEMIT
                                 AND CDPRODUTO = C_ITEMPRODUTO.CDPRODUTO;
                              IF V_IDUTCTRLLOTE = 'S' THEN
                                 SELECT MAX(NRLOTEESTQ)
                                   INTO V_NRLOTEESTQ
                                   FROM ITEMPRODUTO
                                  WHERE CDFILIAL    = P_FILIAL
                                    AND NRLANCTONF  = P_LANCTONF
                                    AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;

                                 V_MEDIA := 0;
                                 V_BCICMSSTRETIDO := 0;
                                 V_VRICMSSTRETIDO := 0;
                                 FOR C_ICMSSTRETIDO IN (SELECT II.CDFILIAL, II.NRLANCTONF, II.NRSEQITPROD, II.CDIMPOSTO,
                                                               ROUND(II.VRBASECALCIT/I.QTITEMPROD,2) AS VRBASE, ROUND(II.VRIMPOSTOIT/I.QTITEMPROD,2) AS VRIMPOSTO
                                                          FROM NOTAFISCAL N, ITEMPRODUTO I, ITEMPROIMPOS II
                                                         WHERE N.CDFILIAL = I.CDFILIAL
                                                           AND N.NRLANCTONF = I.NRLANCTONF
                                                           AND I.CDFILIAL = II.CDFILIAL
                                                           AND I.NRLANCTONF = II.NRLANCTONF
                                                           AND I.NRSEQITPROD = II.NRSEQITPROD
                                                           AND II.NRITPROIMPOS = '1'
                                                           AND N.IDENTRSAIDOP = 'E'
                                                           AND I.CDPRODUTO = C_ITEMPRODUTO.CDPRODUTO
                                                           AND I.NRLOTEESTQ = V_NRLOTEESTQ
                                                           AND N.DTENTRSAID <= P_INIVALID
                                                           AND (INSTR(V_CDIMPOSTRIB,II.CDIMPOSTO||'_') > 0))
                                 LOOP
                                     V_MEDIA := V_MEDIA + 1;
                                     V_BCICMSSTRETIDO := V_BCICMSSTRETIDO + C_ICMSSTRETIDO.VRBASE;
                                     V_VRICMSSTRETIDO := V_VRICMSSTRETIDO + C_ICMSSTRETIDO.VRIMPOSTO;
                                 END LOOP;
                                 IF V_MEDIA > 0 THEN

                                    V_BCICMSSTRETIDO := ROUND(V_BCICMSSTRETIDO/V_MEDIA,2);
                                    V_VRICMSSTRETIDO := ROUND(V_VRICMSSTRETIDO/V_MEDIA,2);
                                 ELSE
                                    V_BCICMSSTRETIDO := 0;
                                    V_VRICMSSTRETIDO := 0;
                                 END IF;
                                 V_BCICMSSTRETIDO := ROUND(V_BCICMSSTRETIDO * C_ITEMPRODUTO.QTITEMPROD,2);
                                 V_VRICMSSTRETIDO := ROUND(V_VRICMSSTRETIDO * C_ITEMPRODUTO.QTITEMPROD,2);


                                 IF V_BCICMSSTRETIDO <> 0 THEN

                                    SELECT COUNT(*)
                                      INTO V_EXISTDSDADOSADIC
                                      FROM DADOSADIC
                                     WHERE CDFILIAL = P_FILIAL
                                       AND NRLANCTONF = P_LANCTONF
                                       AND DSDADOADIC LIKE 'ICMS retido anteriormente por substituição tributária: BC %';

                                    IF V_EXISTDSDADOSADIC = 0 THEN

                                       /*PREENCHE AS MENSAGENS ATRELADAS A INSCRICAO ESTADUAL*/
                                       INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
                                                      VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, 'ICMS retido anteriormente por substituição tributária: BC '||DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_BCICMSSTRETIDO, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_BCICMSSTRETIDO, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_BCICMSSTRETIDO, 2), '9999999999999.99')))|| ' Valor '|| DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_VRICMSSTRETIDO, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_VRICMSSTRETIDO, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_VRICMSSTRETIDO, 2), '9999999999999.99'))));

                                       V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
                                    ELSE
                                       UPDATE DADOSADIC
                                          SET DSDADOADIC = 'ICMS retido anteriormente por substituição tributária: BC '||DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_BCICMSSTRETIDO, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_BCICMSSTRETIDO, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_BCICMSSTRETIDO, 2), '9999999999999.99')))|| ' Valor '|| DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_VRICMSSTRETIDO, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_VRICMSSTRETIDO, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_VRICMSSTRETIDO, 2), '9999999999999.99')))
                                         WHERE CDFILIAL = P_FILIAL
                                           AND NRLANCTONF = P_LANCTONF
                                           AND DSDADOADIC LIKE 'ICMS retido anteriormente por substituição tributária: BC %';
                                    END IF;
                                 END IF;
                              END IF;
                           ELSE
                              V_MEDIA := 0;
                              V_BCICMSSTRETIDO := 0;
                              V_VRICMSSTRETIDO := 0;
                              SELECT MAX(N.DTENTRSAID), MAX(II.CDIMPOSTO), MAX(I.CDPRODUTO),
                                     ROUND(SUM(II.VRBASECALCIT)/SUM(I.QTITEMPROD),2) AS VRBASE, ROUND(SUM(II.VRIMPOSTOIT)/SUM(I.QTITEMPROD),2) AS VRIMPOSTO
                                INTO V_DTENTRSAID, V_CDIMPOSTOI, V_CDPRODUTO, V_BCICMSSTRETIDO, V_VRICMSSTRETIDO
                                FROM NOTAFISCAL N, ITEMPRODUTO I, ITEMPROIMPOS II
                               WHERE N.CDFILIAL = I.CDFILIAL
                                 AND N.NRLANCTONF = I.NRLANCTONF
                                 AND I.CDFILIAL = II.CDFILIAL
                                 AND I.NRLANCTONF = II.NRLANCTONF
                                 AND I.NRSEQITPROD = II.NRSEQITPROD
                                 AND II.NRITPROIMPOS = '1'
                                 AND N.IDENTRSAIDOP = 'E'
                                 AND I.CDPRODUTO = C_ITEMPRODUTO.CDPRODUTO
                                 AND N.DTENTRSAID <= P_INIVALID
                                 AND (INSTR(V_CDIMPOSTRIB,II.CDIMPOSTO||'_') > 0);

                              V_BCICMSSTRETIDO := ROUND(V_BCICMSSTRETIDO * C_ITEMPRODUTO.QTITEMPROD,2);
                              V_VRICMSSTRETIDO := ROUND(V_VRICMSSTRETIDO * C_ITEMPRODUTO.QTITEMPROD,2);


                              IF V_BCICMSSTRETIDO <> 0 THEN

                                 SELECT COUNT(*)
                                   INTO V_EXISTDSDADOSADIC
                                   FROM DADOSADIC
                                  WHERE CDFILIAL = P_FILIAL
                                    AND NRLANCTONF = P_LANCTONF
                                    AND DSDADOADIC LIKE 'ICMS retido anteriormente por substituição tributária: BC %';

                                 IF V_EXISTDSDADOSADIC = 0 THEN

                                    /*PREENCHE AS MENSAGENS ATRELADAS A INSCRICAO ESTADUAL*/
                                    INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
                                                   VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, 'ICMS retido anteriormente por substituição tributária: BC '||DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_BCICMSSTRETIDO, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_BCICMSSTRETIDO, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_BCICMSSTRETIDO, 2), '9999999999999.99')))|| ' Valor '|| DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_VRICMSSTRETIDO, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_VRICMSSTRETIDO, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_VRICMSSTRETIDO, 2), '9999999999999.99'))));

                                    V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
                                 ELSE
                                    UPDATE DADOSADIC
                                       SET DSDADOADIC = 'ICMS retido anteriormente por substituição tributária: BC '||DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_BCICMSSTRETIDO, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_BCICMSSTRETIDO, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_BCICMSSTRETIDO, 2), '9999999999999.99')))|| ' Valor '|| DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_VRICMSSTRETIDO, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_VRICMSSTRETIDO, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_VRICMSSTRETIDO, 2), '9999999999999.99')))
                                     WHERE CDFILIAL = P_FILIAL
                                       AND NRLANCTONF = P_LANCTONF
                                       AND DSDADOADIC LIKE 'ICMS retido anteriormente por substituição tributária: BC %';
                                 END IF;
                              END IF;
                           END IF;
                        END IF;
                     END IF;
                  END IF;

                  IF (V_SIMPLES = 'N') OR ((V_SIMPLES = 'S') AND (C_INCIDENCIA.CDIMPOSTONFE = '00') AND (V_RBA > (V_VRSUBLIMITESN * 1.2))) THEN

                     DELETE ALIQTEMP
                      WHERE NRALIQTEMP = V_ALIQTEMP;

                     V_CDSIMPLESNACIONAL := NULL;
                     V_CDFAIXA := NULL;
                     V_VRADICALIQFECP := NULL;
                     IF (V_UTIBB = 'N')  THEN
                        IF C_INCIDENCIA.IDUTMUNIORIG = w_D THEN
                           SELECT MAX(IDGRUPFISSRV)
                           INTO V_UTGRUPFISCS
                           FROM IMPOSTO
                           WHERE CDIMPOSTO   = C_INCIDENCIA.CDIMPOTEMP;

                           IF V_UTGRUPFISCS = 'S' THEN
                              V_CDGRPFISCSV := NULL;
                              SELECT MAX(CDGRUPOFISC)
                              INTO V_CDGRPFISCSV
                              FROM SERVCLIE SC, SERVICO S
                              WHERE SC.CDFILIAL   = V_CDFILIEMIT AND
                                    SC.CDCLIENTE  = P_CLIENTE    AND
                                    SC.CDFILIAL   = S.CDFILIAL   AND
                                    SC.CDSERVFILI = S.CDSERVFILI AND
                                    S.CDPRODUTO   = C_ITEMPRODUTO.CDPRODUTO;
                              IF V_CDGRPFISCSV IS NULL THEN
                                 SELECT MAX(CDGRUPOFISC)
                                 INTO V_CDGRPFISCSV
                                 FROM CLIENFILIAL
                                WHERE CDFILIAL   = V_CDFILIEMIT AND
                                      CDCLIENTE  = P_CLIENTE ;
                              END IF;
                              IF (C_ITEMPRODUTO.IDPRODBONIF = 'N') OR (V_CDTIPOOPERBONIF = 'N') THEN
                                 CONSULTA_ALIQUOTA(C_INCIDENCIA.CDIMPOTEMP, w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                   V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRPFISCSV,P_TIPOOPER,
                                                   NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPRODUTO.IDORIGEMPROD);
                              ELSE
                                 CONSULTA_ALIQUOTA(C_INCIDENCIA.CDIMPOTEMP, w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                   V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRPFISCSV,V_CDTIPOOPERBONIF,
                                                   NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPRODUTO.IDORIGEMPROD);
                              END IF;
                           ELSE
                               /* CONSIDERA O MUNICIPIO DE DESTINO */
                               IF (C_ITEMPRODUTO.IDPRODBONIF = 'N') OR (V_CDTIPOOPERBONIF = 'N') THEN
                                  CONSULTA_ALIQUOTA(C_INCIDENCIA.CDIMPOTEMP, w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                    V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_TIPOOPER,
                                                    NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPRODUTO.IDORIGEMPROD);
                               ELSE
                                  CONSULTA_ALIQUOTA(C_INCIDENCIA.CDIMPOTEMP, w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                    V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, V_CDTIPOOPERBONIF,
                                                    NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPRODUTO.IDORIGEMPROD);
                               END IF;
                           END IF;
                        ELSE
                          /* CONSIDERA O MUNICIPIO DE ORIGEM */
                           SELECT MAX(IDGRUPFISSRV)
                           INTO V_UTGRUPFISCS
                           FROM IMPOSTO
                           WHERE CDIMPOSTO   = C_INCIDENCIA.CDIMPOTEMP;

                           IF V_UTGRUPFISCS = 'S' THEN
                              V_CDGRPFISCSV := NULL;
                              SELECT MAX(CDGRUPOFISC)
                              INTO V_CDGRPFISCSV
                              FROM SERVCLIE SC, SERVICO S
                              WHERE SC.CDFILIAL   = V_CDFILIEMIT AND
                                    SC.CDCLIENTE  = P_CLIENTE    AND
                                    SC.CDFILIAL   = S.CDFILIAL   AND
                                    SC.CDSERVFILI = S.CDSERVFILI AND
                                    S.CDPRODUTO   = C_ITEMPRODUTO.CDPRODUTO;
                              IF V_CDGRPFISCSV IS NULL THEN
                                 SELECT MAX(CDGRUPOFISC)
                                 INTO V_CDGRPFISCSV
                                 FROM CLIENFILIAL
                                WHERE CDFILIAL   = V_CDFILIEMIT AND
                                      CDCLIENTE  = P_CLIENTE ;
                              END IF;

                              IF (C_ITEMPRODUTO.IDPRODBONIF = 'N') OR (V_CDTIPOOPERBONIF = 'N') THEN
                                 CONSULTA_ALIQUOTA(C_INCIDENCIA.CDIMPOTEMP, w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                   V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIORIG, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRPFISCSV, P_TIPOOPER,
                                                   NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPRODUTO.IDORIGEMPROD);
                              ELSE
                                 CONSULTA_ALIQUOTA(C_INCIDENCIA.CDIMPOTEMP, w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                   V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIORIG, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRPFISCSV, V_CDTIPOOPERBONIF,
                                                   NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPRODUTO.IDORIGEMPROD);
                              END IF;
                           ELSE
                               IF (C_ITEMPRODUTO.IDPRODBONIF = 'N') OR (V_CDTIPOOPERBONIF = 'N') THEN
                                  CONSULTA_ALIQUOTA(C_INCIDENCIA.CDIMPOTEMP, w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                    V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIORIG, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_TIPOOPER,
                                                    NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPRODUTO.IDORIGEMPROD);
                               ELSE
                                  CONSULTA_ALIQUOTA(C_INCIDENCIA.CDIMPOTEMP, w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                    V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIORIG, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, V_CDTIPOOPERBONIF,
                                                    NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPRODUTO.IDORIGEMPROD);
                               END IF;
                           END IF;
                        END IF;

                        V_NRALIQTEMP      := 0;
                        V_PARDEDTMP       := 0;
                        V_PREDBCTMP       := 0;
                        V_ALIQUTMP        := 0;
                        V_IMPOSTOIT       := 0;
                        V_VRADICALIQFECP  := NULL;
                        V_IDIMPODESONERA  := w_N;
                        V_IDCONSDESONVRNF := w_N;
                        V_IDCONSMVAPMC    := '3';
                        V_IDCONSCOMPBCPMC := '3';
                        V_VRALIQICMSCBSP  := 0;
                        V_VRCARGAEXPRESSA := 0;

                        SELECT NVL(MAX(NRALIQTEMP),0),
                               NVL(MAX(VRPARDEDTMP),0),
                               NVL(MAX(VRPREDBCTMP),0),
                               NVL(MAX(VRALIQUTMP),0),
                               NVL(MAX(IDTRIMPSTTMP), W_0),
                               NVL(MAX(VRPBCSTTMP),0),
                               NVL(MAX(IDPMCBSCALTMP), W_N),
                               MAX(CDREGRATMP),
                               MAX(CDFISCOPER),
                               MAX(IDDIFEALIQ),
                               MAX(IDDIFALIQCUSPR),
                               MAX(VRADICALIQFECP),
                               NVL(MAX(IDIMPODESONERA), 'N'),
                               NVL(MAX(IDCONSDESONVRNF), 'N'),
                               MAX(CDBENEFFISCAL),
                               NVL(MAX(IDCONSMVAPMC), '3'),
                               NVL(MAX(IDCONSCOMPBCPMC), '3'),
                               NVL(MAX(IDCONSDIFALIQ), 'N'),
                               MAX(CDCOMPST),
                               MAX(CDRESTST),
                               MAX(CDNATUREC),
                               MAX(VRIMPOSTOREP),
                               NVL(MAX(IDNUTREDBCFECP), 'N'),
                               NVL(MAX(VRALIQICMSCBSP),0),
                               NVL(MAX(VRCARGAEXPRESSA),0)
                          INTO V_NRALIQTEMP,
                               V_PARDEDTMP,
                               V_PREDBCTMP,
                               V_ALIQUTMP,
                               V_TRATIMPST,
                               V_PBCSUBTRIB,
                               V_IDPMCBASECAL,
                               V_CDREGRAITALIQ,
                               V_CDFISCOPERREGRA,
                               V_IDDIFEALIQREGRA,
                               V_IDDIFALIQCUSPRREGRA,
                               V_VRADICALIQFECP,
                               V_IDIMPODESONERA,
                               V_IDCONSDESONVRNF,
                               V_CDBENEFFISCAL,
                               V_IDCONSMVAPMC,
                               V_IDCONSCOMPBCPMC,
                               V_IDCONSDIFALIQ,
                               V_CDCOMPST,
                               V_CDRESTST,
                               V_CDNATUREC,
                               V_VRIMPOSTOREP,
                               V_IDNUTREDBCFECP,
                               V_VRALIQICMSCBSP,
                               V_VRCARGAEXPRESSA
                          FROM ALIQTEMP
                         WHERE (NRALIQTEMP = V_ALIQTEMP);

                        V_ICMS := 'N';
                        FOR C_ICMS IN (SELECT CDIMPOSTO
                                         FROM IMPOSTONFE N, IMPOSTO I
                                        WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                                          AND N.CDIMPOSTONFE = '00'
                                          AND I.CDIMPOSTO = C_INCIDENCIA.CDIMPOTEMP)
                        LOOP
                           V_ICMS := 'S';
                        END LOOP;

                        IF V_ICMS = 'S' THEN
                           IF (V_CDFISCOPERREGRA IS NOT NULL) THEN
                              V_CDFISCOPERREGRA   := V_CFOP1DIGT||V_CDFISCOPERREGRA;
                              V_DSCDFISOPEITREGRA := SUBSTR(DESCRICAO_CFOP(V_CDFISCOPERREGRA),1,45);

                              IF V_CFOPINFUSU <> 'S' THEN
                                 V_FISOPEITEM := V_CDFISCOPERREGRA;
                              END IF;
                           END IF;

                           IF V_CFOPINFUSU <> 'S' THEN
                              IF (V_DSCDFISOPEITREGRA IS NOT NULL) THEN
                                 UPDATE NOTAFISCAL
                                    SET DSCDFISOPENF = V_DSCDFISOPEITREGRA
                                  WHERE CDFILIAL   = P_FILIAL   AND
                                        NRLANCTONF = P_LANCTONF;
                              ELSE
                                 UPDATE NOTAFISCAL
                                    SET DSCDFISOPENF = (SELECT MAX(DSCFOPTMP)
                                                          FROM CFOPTEMP
                                                         WHERE NRCFOPTEMP = V_CFOPTEMP)
                                  WHERE CDFILIAL   = P_FILIAL
                                    AND NRLANCTONF = P_LANCTONF;
                              END IF;
                           END IF;

                           UPDATE ITEMPRODUTO
                              SET CDFISOPEITEM  = V_FISOPEITEM,
                                  CDSUFXCFOPPR  = V_SUFXCFOPPR,
                                  CDSITUTRIBPR  = V_SITUTRIBPR,
                                  DSCDFISOPEIT  = V_DSCDFISOPEIT,
                                  CDFISCOPERSN  = V_CDFISCOPERSN
                            WHERE CDFILIAL    = P_FILIAL AND
                                  NRLANCTONF  = P_LANCTONF AND
                                  NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
                        END IF;
                     END IF;
                  END IF;
                  V_CDIMPOSTRIB  := null;
                  V_IDVRIMPSTRIB := null;
                  /*IMPOSTO DE SUBSTITUICAO TRIBUTARIA*/
                  FOR C_ICMSST IN (SELECT CDIMPOSTO
                                     FROM IMPOSTO
                                    WHERE CDIMPOSTRIB = C_INCIDENCIA.CDIMPOTEMP)
                  LOOP
                     V_CDIMPOSTRIB := V_CDIMPOSTRIB||C_ICMSST.CDIMPOSTO||'_';
                  END LOOP;

                  -- UTILIZA O PRÓPRIO VALOR DO IMPOSTO NA SUA BASE DE CÁLCULO (IMPOSTO POR DENTRO)
                  BEGIN
                     SELECT NVL(MAX(IDUTILPVRIMPBC), 'N')
                       INTO V_IDUTILPVRIMPBC
                       FROM IMPOSTO
                      WHERE CDIMPOSTO = C_INCIDENCIA.CDIMPOTEMP;
                  EXCEPTION
                     WHEN NO_DATA_FOUND THEN
                        V_IDUTILPVRIMPBC := 'N';
                  END;

                  IF (V_VRALIQICMSCBSP > 0) AND (C_INCIDENCIA.CDIMPOSTONFE = '80') THEN /*201021*/
                     V_TAXABASECALC := (V_PREDBCTMP/100);
                  ELSE
                     V_TAXABASECALC := (100 - V_PREDBCTMP)/100;
                  END IF;

                  V_TAXAALIQUOTA := (V_ALIQUTMP/100);
                  V_TAXABCSUBSTR := 1 + (V_PBCSUBTRIB/100);
                  IF (V_VRCARGAEXPRESSA > 0) AND (C_INCIDENCIA.CDIMPOSTONFE = '00') THEN -- 204502
                     V_BASECALCIT   := V_LIQUIITEM;
                  ELSE
                     V_BASECALCIT   := V_LIQUIITEM * V_TAXABASECALC;
                  END IF;
                  V_BCSEMREDUCAO := V_LIQUIITEM;

                  IF (V_VRIMPOSTOREP IS NOT NULL) AND (V_VRIMPOSTOREP > 0) THEN  /* Caso esteja cadastrao Valor a ser Repassado, a base de Cálculo e o valor do imposto é calculado de acordo com este cadastro */
                     /*IF (V_VRIMPOSTOREP > 0) THEN*/
                        V_IMPOSTOIT  := (C_ITEMPRODUTO.QTITEMPROD * V_VRIMPOSTOREP);
                        V_BASECALCTO := (C_ITEMPRODUTO.VRTOTAITEM * (V_IMPOSTOIT)) / (C_ITEMPRODUTO.VRTOTAITEM * (V_ALIQUTMP/100));
                     /*END IF;*/
                  ELSE
                     IF V_CDIMPOSTRIB IS NULL THEN
                        V_IDTRIMPSTII := '';

                        V_PERDBCALC := 100 - V_PREDBCTMP;

                        IF V_PBCSUBTRIB > 0 THEN
                           V_BASECALCIT := (V_BASECALCIT * V_TAXABCSUBSTR);
                           V_BCSEMREDUCAO := (V_BCSEMREDUCAO * V_TAXABCSUBSTR);
                           V_PREDBCSTIT := V_PREDBCTMP;
                           V_PREDBCTMP  := V_PBCSUBTRIB;
                           V_PERDBCALC  := 0;
                        ELSE
                           V_PREDBCSTIT := V_PREDBCTMP;
                        END IF;
                        IF NVL(V_IDPMCBASECAL, W_N) = W_S THEN
                           CALCULA_BC_PMC(P_FILIAL,
                                          P_LANCTONF,
                                          C_ITEMPRODUTO.NRSEQITPROD,
                                          C_INCIDENCIA.CDIMPOTEMP,
                                          V_IDCONSMVAPMC,
                                          V_IDCONSCOMPBCPMC,
                                          V_PAISDEST,
                                          V_ESTADEST,
                                          C_ITEMPRODUTO.CDPRODUTO,
                                          C_ITEMPRODUTO.QTITEMPROD,
                                          C_ITEMPRODUTO.VRUNITITEM,
                                          C_ITEMPRODUTO.VRDESCITEM,
                                          V_PBCSUBTRIB,
                                          V_PREDBCTMP,
                                          V_VRALIQICMSCBSP,
                                          NULL,
                                          NULL,
                                          NULL,
                                          NULL,
                                          NULL,
                                          NULL,
                                          'N',
                                          V_BASECALCTO);

                           V_IMPOSTOIT := (V_BASECALCTO * V_TAXAALIQUOTA) - V_PARDEDTMP;
                        ELSIF (C_INCIDENCIA.IDUTVLRQTDEIMPO = 'S') THEN
                           SELECT NVL(MAX(VRFATOCONVES), 1)
                             INTO V_VRFATOCONVES
                             FROM CONVPRODUTO
                            WHERE CDPRODUTO = C_ITEMPRODUTO.CDPRODUTO;

                           V_BASECALCTO  := (C_ITEMPRODUTO.QTITEMPROD * V_VRFATOCONVES);
                           V_IMPOSTOIT   := ((C_ITEMPRODUTO.QTITEMPROD * V_VRFATOCONVES) * V_ALIQUTMP) - V_PARDEDTMP;
                        ELSE
                           IF (V_VRCARGAEXPRESSA > 0) AND (V_ICMS = 'S') THEN -- 204502
                              V_BASECALCIT  := ((V_BASECALCIT / (1 - (V_VRCARGAEXPRESSA / 100))) * ((V_VRCARGAEXPRESSA / 100) / V_TAXAALIQUOTA));
                              V_BASECALCTO  := V_BASECALCIT;
                              V_IMPOSTOIT   := (V_BASECALCIT * V_TAXAALIQUOTA) - V_PARDEDTMP;
                           ELSE
                              V_BASECALCTO  := V_BASECALCIT;
                              V_IMPOSTOIT   := (V_BASECALCIT * V_TAXAALIQUOTA) - V_PARDEDTMP;
                           END IF;
                        END IF;

                     ELSE
                        IF V_CDSITUCRT = '1' THEN
                           IF SUBSTR(V_CDFISCOPERSN, 2, 3) = '500' THEN
                              V_IDTRIMPSTII := w_2;
                           ELSE
                              V_IDTRIMPSTII := V_TRATIMPST;
                           END IF;
                        ELSE
                           IF SUBSTR(V_SITUTRIBPR, 2, 2) = '60' THEN
                              V_IDTRIMPSTII := w_2;
                           ELSE
                              V_IDTRIMPSTII := V_TRATIMPST;
                           END IF;
                        END IF;

                        IF NVL(V_IDPMCBASECAL, W_N) = W_S THEN
                           CALCULA_BC_PMC(P_FILIAL,                           
                                          P_LANCTONF,
                                          C_ITEMPRODUTO.NRSEQITPROD,
                                          C_INCIDENCIA.CDIMPOTEMP,
                                          V_IDCONSMVAPMC,
                                          V_IDCONSCOMPBCPMC,
                                          V_PAISDEST,
                                          V_ESTADEST,
                                          C_ITEMPRODUTO.CDPRODUTO,
                                          C_ITEMPRODUTO.QTITEMPROD,
                                          C_ITEMPRODUTO.VRUNITITEM,
                                          C_ITEMPRODUTO.VRDESCITEM,
                                          V_PBCSUBTRIB,
                                          V_PREDBCTMP,
                                          V_VRALIQICMSCBSP,
                                          NULL,
                                          NULL,
                                          NULL,
                                          NULL,
                                          NULL,
                                          NULL,
                                          'N',
                                          V_BASECALCTO);

                           V_IMPOSTOIT := (V_BASECALCTO * V_TAXAALIQUOTA) - V_PARDEDTMP;
                        ELSIF (V_IDCONSDIFALIQ = 'S') AND (C_INCIDENCIA.CDIMPOSTONFE = '80') THEN
                           CONSIDERA_DIFAL_ICMS(P_FILIAL,
                                                P_LANCTONF,
                                                C_ITEMPRODUTO.NRSEQITPROD,
                                                V_CDGRPFISCSV,
                                                V_PAISDEST,
                                                V_ESTADEST,
                                                V_MUNIDEST,
                                                V_PBCSUBTRIB,
                                                V_PREDBCTMP,
                                                V_BASECALCTO,
                                                V_IMPOSTOIT,
                                                V_VRADICFECP);
                        ELSE
                           UPDATE ITEMPRODUTO
                              SET IDUTILBCPMC = 'N'
                            WHERE CDFILIAL = P_FILIAL
                              AND NRLANCTONF = P_LANCTONF
                              AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;

                           V_PERDBCALC := 100 - V_PREDBCTMP;

                           IF V_PBCSUBTRIB > 0 THEN
                              V_BASECALCIT := (V_BASECALCIT * V_TAXABCSUBSTR);
                              V_BCSEMREDUCAO := (V_BCSEMREDUCAO * V_TAXABCSUBSTR);
                              V_PREDBCSTIT := V_PREDBCTMP;
                              V_PREDBCTMP  := V_PBCSUBTRIB;
                              V_PERDBCALC  := 0;
                           ELSE
                             V_PREDBCSTIT := V_PREDBCTMP;
                           END IF;

                           V_BASECALCTO  := V_BASECALCIT;
                           V_IMPOSTOIT   := (V_BASECALCIT * V_TAXAALIQUOTA) - V_PARDEDTMP;
                        END IF;
                     END IF;
                  END IF;

                  V_CONTABCALC  := V_LIQUIITEM - (V_LIQUIITEM * V_TAXABASECALC);

                  IF (V_IMPOSTOIT < 0) THEN
                     V_IMPOSTOIT := 0;
                  END IF;

                  IF (V_IDCONSDIFALIQ = 'N') THEN
                     V_VRADICFECPST := 0;
                     V_VRADICFECPSTAUX := 0;
                     IF (V_VRADICALIQFECP IS NOT NULL) AND (V_VRADICALIQFECP > 0) THEN
                     	IF (V_IDNUTREDBCFECP = 'S') THEN
                           V_VRADICFECP := ROUND(V_BCSEMREDUCAO * (V_VRADICALIQFECP/100), 2);
                        ELSE
                        	V_VRADICFECP := ROUND(V_BASECALCTO*(V_VRADICALIQFECP/100), 2);
                     	END IF;
                     END IF;

                     IF (V_CDIMPOSTRIB IS NOT NULL) THEN
                        V_VRIMPOSST   := 0;
                        V_VRIMPOSTOST := 0;
                        FOR C_SUBSTRIB IN (SELECT NVL(IDVRIMPSTRIB, 'N') IDVRIMPSTRIB, I.CDIMPOSTO
                                             FROM ITEMPROIMPOS I, IMPOSTO II
                                            WHERE (CDFILIAL     = P_FILIAL)
                                              AND (NRLANCTONF   = P_LANCTONF)
                                              AND (NRSEQITPROD  = C_ITEMPRODUTO.NRSEQITPROD)
                                              AND (NRITPROIMPOS = '1')
                                              AND (INSTR(V_CDIMPOSTRIB,II.CDIMPOSTO||'_') > 0)
                                              AND (I.CDIMPOSTO = II.CDIMPOSTO))
                        LOOP
                           IF (C_SUBSTRIB.IDVRIMPSTRIB = w_S) THEN
                              Begin
                                 SELECT NVL(ROUND(MAX(VRIMPOSTOIT), 2),0),
                                        NVL(ROUND(MAX(VRADICFECP), 2),0),
                                        NVL(ROUND(MAX(VRBASECALCIT), 2),0)
                                 INTO   V_VRIMPOSST,
                                        V_VRADICFECPSTAUX,
                                        V_VRBASEICMS
                                 FROM ITEMPROIMPOS I
                                 WHERE (CDFILIAL     = P_FILIAL)                   AND
                                       (NRLANCTONF   = P_LANCTONF)                 AND
                                       (NRSEQITPROD  = C_ITEMPRODUTO.NRSEQITPROD)  AND
                                       (CDIMPOSTO    = C_SUBSTRIB.CDIMPOSTO)       AND
                                       (INSTR(V_CDIMPOSTRIB,CDIMPOSTO||'_') > 0)   AND
                                       (NRITPROIMPOS = w_1);
                              Exception
                                 When No_Data_Found Then
                                    V_VRIMPOSST := 0;
                                    V_VRADICFECPSTAUX := 0;
                                    V_VRBASEICMS := 0;
                              End;
                           ELSE
                              V_VRIMPOSST := 0;
                              V_VRADICFECPSTAUX := 0;
                              V_VRBASEICMS := 0;
                           END IF;

                           /*198639, 200299*/
                           IF V_VRBASEICMS > 0 THEN
                              DELETE ALIQTEMP
                               WHERE NRALIQTEMP = V_ALIQTEMP;

                              /* Verifica grupo fiscal */
                              SELECT MAX(IDGRUPFISSRV)
                                INTO V_UTGRUPFISCS
                                FROM IMPOSTO
                               WHERE CDIMPOSTO = C_INCIDENCIA.CDIMPOTEMP;

                              IF V_UTGRUPFISCS = 'S' THEN
                                 V_CDGRPFISCSV := NULL;
                                 SELECT MAX(CDGRUPOFISC)
                                   INTO V_CDGRPFISCSV
                                   FROM SERVCLIE SC, SERVICO S
                                  WHERE SC.CDFILIAL   = V_CDFILIEMIT AND
                                       SC.CDCLIENTE  = P_CLIENTE    AND
                                       SC.CDFILIAL   = S.CDFILIAL   AND
                                       SC.CDSERVFILI = S.CDSERVFILI AND
                                       S.CDPRODUTO   = C_ITEMPRODUTO.CDPRODUTO;

                                 IF V_CDGRPFISCSV IS NULL THEN
                                    SELECT MAX(CDGRUPOFISC)
                                      INTO V_CDGRPFISCSV
                                      FROM CLIENFILIAL
                                    WHERE CDFILIAL   = V_CDFILIEMIT AND
                                         CDCLIENTE  = P_CLIENTE;
                                 END IF;

                                 CONSULTA_ALIQUOTA(C_INCIDENCIA.CDIMPOTEMP, w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                   V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_VRBASEICMS, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRPFISCSV, P_TIPOOPER,
                                                   NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPRODUTO.IDORIGEMPROD);

                              ELSE
                                 CONSULTA_ALIQUOTA(C_INCIDENCIA.CDIMPOTEMP, w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                   V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_VRBASEICMS, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_TIPOOPER,
                                                   NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPRODUTO.IDORIGEMPROD);

                              END IF;

                              BEGIN
                                 SELECT NVL(MAX(VRALIQICMSCBSP),0)
                                   INTO V_VRALIQICMSCBSP
                                   FROM ALIQTEMP
                                  WHERE (NRALIQTEMP = V_ALIQTEMP);
                              EXCEPTION
                                 WHEN NO_DATA_FOUND THEN
                                    V_VRALIQICMSCBSP := 0;
                              END;

                              IF V_VRALIQICMSCBSP > 0 THEN
                                 V_VRIMPOSST := V_VRBASEICMS * (V_VRALIQICMSCBSP/100);
                              END IF;

                              DELETE ALIQTEMP
                               WHERE NRALIQTEMP = V_ALIQTEMP;
                           END IF;
                           /*198639, 200299*/

                           V_VRIMPOSTOST := V_VRIMPOSTOST + V_VRIMPOSST;
                           V_VRADICFECPST := V_VRADICFECPST + V_VRADICFECPSTAUX;
                        END LOOP;

                        V_IMPOSTOIT := V_IMPOSTOIT - V_VRIMPOSTOST;

                        IF V_IMPOSTOIT < 0 THEN
                           V_IMPOSTOIT := 0;
                        END IF;
                     END IF;

                     IF (V_VRADICALIQFECP IS NOT NULL) AND (V_VRADICALIQFECP > 0) THEN
                        V_VRADICFECP := V_VRADICFECP - V_VRADICFECPST;
                     END IF;
                  END IF;

                  /* Rotina para calcular o ICMS ST considerando % carga tributária média */
                  V_IDIMPSTCARGTRIB := 'N';

                  IF V_CDIMPOSTRIB IS NOT NULL THEN
                     BEGIN
                        SELECT NVL(VRCNAEBC, 0),
                               NVL(VRMVA, 0)
                          INTO V_VRPRODUTOBC,
                               V_VRMVA
                          FROM VRPERCCARGTRIBCNAE
                         WHERE IDENTRSAIDOP = w_S
                           AND CDTIPOOPER   = P_TIPOOPER
                           AND CDPAIS       = V_PAISDEST
                           AND SGESTADO     = V_ESTADEST
                           AND CDCNAE       = V_CDCNAECLIE
                           AND IDOPTANTESN  = V_IDOPTANTESNCLIE;
                     EXCEPTION
                        WHEN NO_DATA_FOUND THEN
                           V_VRPRODUTOBC := 0;
                           V_VRMVA := 0;
                     END;

                     IF V_VRPRODUTOBC = 0 THEN
                        BEGIN
                           SELECT NVL(VRPRODUTOBC, 0)
                             INTO V_VRPRODUTOBC
                             FROM VRPERCCARGTRIB
                            WHERE IDENTRSAIDOP = w_S
                              AND CDTIPOOPER   = P_TIPOOPER
                              AND CDPAIS       = V_PAISDEST
                              AND SGESTADO     = V_ESTADEST
                              AND CDPRODUTO    = C_ITEMPRODUTO.CDPRODUTO;
                        EXCEPTION
                           WHEN NO_DATA_FOUND THEN
                              V_VRPRODUTOBC := 0;
                        END;
                     END IF;

                     IF (V_VRPRODUTOBC > 0) THEN
                        BEGIN
                           SELECT I.CDIMPOSTO, I.VRIMPOSTOIT
                             INTO V_CDIMPOSTOICMS, V_VRIMPOSTOICMS
                             FROM IMPOSTONFE N, IMPOSTO P, ITEMPROIMPOS I
                            WHERE N.CDIMPOSTONFE = P.CDIMPOSTONFE
                              AND N.CDIMPOSTONFE = '00'
                              AND I.CDFILIAL     = P_FILIAL
                              AND I.NRLANCTONF   = P_LANCTONF
                              AND I.NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD
                              AND I.CDIMPOSTO = P.CDIMPOSTO
                              AND NOT P.CDIMPOSTRIB IS NULL
                              AND I.NRITPROIMPOS = '1';
                        EXCEPTION
                           When No_Data_Found Then
                              V_CDIMPOSTOICMS := NULL; V_VRIMPOSTOICMS := 0;
                        END;

                        DELETE ALIQTEMP
                         WHERE NRALIQTEMP = V_ALIQTEMP;

                        /* Verifica grupo fiscal */
                        SELECT MAX(IDGRUPFISSRV)
                        INTO V_UTGRUPFISCS
                        FROM IMPOSTO
                        WHERE CDIMPOSTO = V_CDIMPOSTOICMS;

                        IF V_UTGRUPFISCS = 'S' THEN
                           V_CDGRPFISCSV := NULL;
                           SELECT MAX(CDGRUPOFISC)
                           INTO V_CDGRPFISCSV
                           FROM SERVCLIE SC, SERVICO S
                           WHERE SC.CDFILIAL   = V_CDFILIEMIT AND
                                 SC.CDCLIENTE  = P_CLIENTE    AND
                                 SC.CDFILIAL   = S.CDFILIAL   AND
                                 SC.CDSERVFILI = S.CDSERVFILI AND
                                 S.CDPRODUTO   = C_ITEMPRODUTO.CDPRODUTO;

                           IF V_CDGRPFISCSV IS NULL THEN
                              SELECT MAX(CDGRUPOFISC)
                              INTO V_CDGRPFISCSV
                              FROM CLIENFILIAL
                             WHERE CDFILIAL   = V_CDFILIEMIT AND
                                   CDCLIENTE  = P_CLIENTE;
                           END IF;

                           CONSULTA_ALIQUOTA(V_CDIMPOSTOICMS, w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, V_PAISDEST,
                                             V_ESTADEST, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRPFISCSV, P_TIPOOPER,
                                             NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPRODUTO.IDORIGEMPROD);

                        ELSE
                           CONSULTA_ALIQUOTA(V_CDIMPOSTOICMS, w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, V_PAISDEST,
                                             V_ESTADEST, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_TIPOOPER,
                                             NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPRODUTO.IDORIGEMPROD);

                        END IF;

                        SELECT NVL(MAX(VRALIQUTMP),0)
                          INTO V_VRALIQUTMPDEST
                          FROM ALIQTEMP
                         WHERE (NRALIQTEMP = V_ALIQTEMP);

                        IF (V_VRALIQUTMPDEST <> 0) THEN
                           V_IMPOSTOIT  :=  ROUND(V_BASECALCIT * (V_VRPRODUTOBC/100), 2);
                           V_BASECALCTO :=  ROUND(((V_VRIMPOSTOICMS + V_IMPOSTOIT) / (V_VRALIQUTMPDEST/100)),2);
                           V_IDIMPSTCARGTRIB := 'S';
                        END IF;

                        DELETE ALIQTEMP
                         WHERE NRALIQTEMP = V_ALIQTEMP;
                     END IF;
                  END IF;

                  /* ROTINA PARA CALCULAR O DIFERIMENTO DO IMPOSTO */
                  V_PERDIFERE    := NULL;
                  V_IMPOSTOOPERA := NULL;
                  V_IMPOSTODIFER := NULL;

                  IF C_INCIDENCIA.CDIMPOSTONFE = '00' THEN
                     IF V_CDSITTRIBTMP = '51' THEN
                        BEGIN
                           SELECT PD.VRPERDIFERE, 'S'
                             INTO V_VRPERDIFERE, V_IDDIFECLI
                             FROM PRODDIFEREIMPCLI PD, PRODUTO PR
                            WHERE PD.CDPRODUTO = PR.CDPRODUTO
                              AND PD.CDPAIS = V_PAISORIG
                              AND PD.SGESTADO = V_ESTAORIG
                              AND PD.CDCLIENTE = P_CLIENTE
                              AND PR.CDARVPROD IN (SELECT MAX(PR.CDARVPROD) AS CDARVPROD
                                                     FROM PRODDIFEREIMPCLI PD, PRODUTO PR
                                                    WHERE PD.CDPRODUTO = PR.CDPRODUTO
                                                      AND PD.CDPAIS = V_PAISORIG
                                                      AND PD.SGESTADO = V_ESTAORIG
                                                      AND PD.CDCLIENTE = P_CLIENTE
                                                      AND INSTR(NVL(RTRIM(C_ITEMPRODUTO.CDARVPROD), PR.CDARVPROD), PR.CDARVPROD) = 1);
                        EXCEPTION
                           WHEN NO_DATA_FOUND THEN
                              V_VRPERDIFERE := NULL; V_IDDIFECLI := 'N';
                        END;

                        IF V_IDDIFECLI = 'N' THEN
                           BEGIN
                              SELECT PD.VRPERDIFERE
                                INTO V_VRPERDIFERE
                                FROM PRODDIFEREIMPOS PD, PRODUTO PR
                               WHERE PD.CDPRODUTO = PR.CDPRODUTO
                                 AND PD.CDPAIS = V_PAISORIG
                                 AND PD.SGESTADO = V_ESTAORIG
                                 AND PR.CDARVPROD IN (SELECT MAX(PR.CDARVPROD) AS CDARVPROD
                                                        FROM PRODDIFEREIMPOS PD, PRODUTO PR
                                                       WHERE PD.CDPRODUTO = PR.CDPRODUTO
                                                         AND PD.CDPAIS = V_PAISORIG
                                                         AND PD.SGESTADO = V_ESTAORIG
                                                         AND INSTR(NVL(RTRIM(C_ITEMPRODUTO.CDARVPROD), PR.CDARVPROD), PR.CDARVPROD) = 1);
                           EXCEPTION
                              WHEN NO_DATA_FOUND THEN
                                 V_VRPERDIFERE := NULL;
                           END;
                        END IF;

                        IF V_VRPERDIFERE IS NOT NULL THEN
                           V_PERDIFERE    := ROUND(V_VRPERDIFERE, 2);
                           V_IMPOSTOOPERA := ROUND(V_IMPOSTOIT, 2);
                           /*
                              Foi comentado este cálculo pois ao implementá-lo de acordo com a resolução nº13 de 14 de fevereiro de 2019
                              a sefaz passou a rejeitar as notas com a rejeição 352 (Rejeicao: Valor do ICMS Diferido no CST=51 difere do
                              produto Valor ICMS Operacao e percentual diferimento)
                           */
                           --IF (V_CDPAISEMIT = '0055') AND (V_SGESTADOEMIT = 'RJ') THEN
                           --   V_IMPOSTODIFER := ROUND((((V_BASECALCTO / (1 - V_TAXAALIQUOTA)) * V_TAXAALIQUOTA) * (V_VRPERDIFERE/100)), 2);
                           --ELSE
                              V_IMPOSTODIFER := ROUND((V_IMPOSTOOPERA * (V_VRPERDIFERE/100)), 2);
                           --END IF;
                           V_IMPOSTOIT := ROUND(V_IMPOSTOOPERA, 2) - ROUND(V_IMPOSTODIFER, 2);
                        END IF;
                     END IF;
                  END IF;

                  V_BASECALCIRRF := V_BASECALCTO;

                  IF (V_ALIQUTMP = 0) AND (V_IMPOSTOIT = 0) THEN
                     V_BASECALCTO := 0;
                  END IF;

                  IF V_IDPERVISIMPSCRE = 'S' THEN
                     V_VRIMPOSTOVISUIT := V_IMPOSTOIT;
                  ELSE

                     IF (C_INCIDENCIA.CDFISCTEMP = '1') THEN
                        V_VRIMPOSTOVISUIT := V_IMPOSTOIT;
                     ELSE
                        V_VRIMPOSTOVISUIT := 0;
                     END IF;
                  END IF;
                  V_VRIMPBCICMS := 0;
                  FOR C_ICMSIMPBC IN (SELECT CDIMPOSTO
                                        FROM IMPOSTONFE N, IMPOSTO I
                                       WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                                         AND N.CDIMPOSTONFE IN ('50','60')
                                         AND I.CDIMPOSTO = C_INCIDENCIA.CDIMPOTEMP)
                  LOOP
                     V_VRIMPBCICMS := ROUND(V_IMPOSTOIT, 2);
                  END LOOP;

                  V_ICMS := 'N';
                  FOR C_ICMS IN (SELECT CDIMPOSTO
                                   FROM IMPOSTONFE N, IMPOSTO I
                                  WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                                    AND N.CDIMPOSTONFE = '00'
                                    AND I.CDIMPOSTO = C_INCIDENCIA.CDIMPOTEMP)
                  LOOP
                     V_ICMS := 'S';
                  END LOOP;

                  Begin
                     SELECT CDFILIAL
                     INTO   V_CHAVE
                     FROM ITEMPROIMPOS
                     WHERE CDFILIAL     = P_FILIAL                 AND
                           NRLANCTONF   = P_LANCTONF               AND
                           NRSEQITPROD  = C_ITEMPRODUTO.NRSEQITPROD  AND
                           CDIMPOSTO    = C_INCIDENCIA.CDIMPOTEMP AND
                           NRITPROIMPOS = w_1;
                  Exception
                     When No_Data_Found Then
                        V_CHAVE := Null;
                  End;

                  IF V_CHAVE IS NULL THEN

                     IF (V_ICMS = 'S') THEN

                        IF C_ITEMPRODUTO.CDCFOPINFUSU IS NULL THEN

                           V_CDGRUPOFISCAUX := NULL;

                           SELECT MAX(G.CDGRUPOFISC)
                             INTO V_CDGRUPOFISCAUX
                             FROM GRUPOFISCIMPFIL G,
                                  (SELECT CDFILIEMIT AS CDFILIAL
                                     FROM NOTAFISCAL
                                    WHERE CDFILIAL = P_FILIAL
                                          AND NRLANCTONF = P_LANCTONF) F
                            WHERE G.CDFILIAL = F.CDFILIAL
                              AND NOT G.CDGRUPOFISC IS NULL
                              AND G.CDIMPOSTO = C_INCIDENCIA.CDIMPOTEMP;
                           IF V_IDORIGDESTNF = 'C' THEN
                              SELECT NVL(MAX(G.CDGRUPOFISC), V_CDGRUPOFISCAUX)
                                INTO V_CDGRUPOFISCAUX
                                FROM GRFISIMPIECLIE G,
                                     (SELECT CDCLIENTE
                                        FROM NOTAFISCAL
                                       WHERE CDFILIAL = P_FILIAL
                                         AND NRLANCTONF = P_LANCTONF) N
                               WHERE G.CDCLIENTE = N.CDCLIENTE
                                 AND G.CDEMPRESA = P_EMPRESA
                                 AND G.CDINSCESTA = P_INSCESTA
                                 AND NOT G.CDGRUPOFISC IS NULL
                                 AND G.CDIMPOSTO = C_INCIDENCIA.CDIMPOTEMP;
                           ELSE
                              SELECT NVL(MAX(G.CDGRUPOFISC), V_CDGRUPOFISCAUX)
                                INTO V_CDGRUPOFISCAUX
                                FROM GRFISIMPIEFORN G,
                                    (SELECT CDFORNECED
                                       FROM NOTAFISCAL
                                      WHERE CDFILIAL = P_FILIAL
                                        AND NRLANCTONF = P_LANCTONF) N
                               WHERE G.CDFORNECED = N.CDFORNECED
                                 AND G.CDEMPRESA = P_EMPRESA
                                 AND G.CDINSCESTA = P_INSCESTA
                                 AND NOT G.CDGRUPOFISC IS NULL
                                 AND G.CDIMPOSTO = C_INCIDENCIA.CDIMPOTEMP;
                           END IF;

                           IF (V_CDGRUPOFISCAUX IS NOT NULL) THEN
                              IF (C_ITEMPRODUTO.IDPRODBONIF = 'N') OR (V_CDTIPOOPERBONIF = 'N') THEN
                                 CONSULTA_CFOP(w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, P_TIPOOPER, V_PAISORIG,
                                               V_ESTAORIG, V_PAISCFOP, V_ESTACFOP, P_FILIAL, P_LANCTONF, V_CDGRUPOFISCAUX, P_INIVALID, C_ITEMPRODUTO.IDORIGEMPROD);
                              ELSE
                                 CONSULTA_CFOP(w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, V_CDTIPOOPERBONIF, V_PAISORIG,
                                               V_ESTAORIG, V_PAISCFOP, V_ESTACFOP, P_FILIAL, P_LANCTONF, V_CDGRUPOFISCAUX, P_INIVALID, C_ITEMPRODUTO.IDORIGEMPROD);
                              END IF;

                           ELSE
                              IF (C_ITEMPRODUTO.IDPRODBONIF = 'N') OR (V_CDTIPOOPERBONIF = 'N') THEN
                                 CONSULTA_CFOP(w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, P_TIPOOPER, V_PAISORIG,
                                               V_ESTAORIG, V_PAISCFOP, V_ESTACFOP, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_INIVALID, C_ITEMPRODUTO.IDORIGEMPROD);
                              ELSE
                                 CONSULTA_CFOP(w_S, P_EMPRESA, C_ITEMPRODUTO.CDARVPROD, P_INSCESTA, V_CDTIPOOPERBONIF, V_PAISORIG,
                                               V_ESTAORIG, V_PAISCFOP, V_ESTACFOP, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_INIVALID, C_ITEMPRODUTO.IDORIGEMPROD);
                              END IF;
                           END IF;
                           IF (V_CDFISCOPERREGRA IS NOT NULL) THEN
                              IF (LENGTH(V_CDFISCOPERREGRA) < 4) THEN
                                 V_CDFISCOPERREGRA := V_CFOP1DIGT||V_CDFISCOPERREGRA;
                              END IF;
                              V_DSCDFISOPEITREGRA := SUBSTR(DESCRICAO_CFOP(V_CDFISCOPERREGRA),1,45);
                           END IF;

                           IF (V_DSCDFISOPEITREGRA IS NOT NULL) THEN
                              UPDATE NOTAFISCAL
                                 SET DSCDFISOPENF = V_DSCDFISOPEITREGRA
                               WHERE CDFILIAL   = P_FILIAL   AND
                                     NRLANCTONF = P_LANCTONF;
                           ELSE
                              UPDATE NOTAFISCAL
                                 SET DSCDFISOPENF = (SELECT MAX(DSCFOPTMP)
                                                       FROM CFOPTEMP
                                                      WHERE NRCFOPTEMP = V_CFOPTEMP)
                               WHERE CDFILIAL   = P_FILIAL
                                 AND NRLANCTONF = P_LANCTONF;

                           END IF;

                           SELECT MAX(CDFISOPETMP), MAX(CDSUFCFOPTMP), SUBSTR(MAX(DSCFOPTMP),1,50)
                             INTO V_FISOPEITEM    , V_SUFXCFOPPR, V_DSCDFISOPEIT
                             FROM CFOPTEMP
                            WHERE NRCFOPTEMP = V_CFOPTEMP;

                           UPDATE ITEMPRODUTO
                              SET CDFISOPEITEM  = NVL(V_CDFISCOPERREGRA, V_FISOPEITEM),
                                  CDSUFXCFOPPR  = V_SUFXCFOPPR,
                                  DSCDFISOPEIT  = NVL(V_DSCDFISOPEITREGRA, V_DSCDFISOPEIT)
                            WHERE CDFILIAL    = P_FILIAL AND
                                  NRLANCTONF  = P_LANCTONF AND
                                  NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;

                           DELETE CFOPTEMP
                            WHERE NRCFOPTEMP = V_CFOPTEMP;
                        END IF;

                        Begin
                           SELECT MAX(CDCSTDIG1PROD)
                             INTO V_CST1DIGT
                             FROM PRODUTO
                            WHERE (CDARVPROD = C_ITEMPRODUTO.CDARVPROD);

                           IF V_CST1DIGT IS NULL THEN
                              SELECT MAX(CDCSTDIG1SAI)
                                INTO   V_CST1DIGT
                                FROM INSCRESTAD
                               WHERE (CDEMPRESA  = P_EMPRESA) AND
                                     (CDINSCESTA = P_INSCESTA);
                           END IF;
                        Exception
                           When No_Data_Found Then
                              V_CST1DIGT := Null;
                        End;

                        IF (V_IDUTORIGPROD = 'S') AND (C_ITEMPRODUTO.IDORIGEMPROD = 'E') THEN
                           V_CST1DIGT := '2';
                        END IF;

                        UPDATE ITEMPRODUTO
                           SET CDSITUTRIBPR  = V_CST1DIGT||NVL(V_CDSITTRIBTMP, SUBSTR(V_SITUTRIBPR, 2,2))
                         WHERE CDFILIAL    = P_FILIAL AND
                               NRLANCTONF  = P_LANCTONF AND
                               NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;

                        V_SITUTRIBPR := V_CST1DIGT||NVL(V_CDSITTRIBTMP, SUBSTR(V_SITUTRIBPR, 2,2));
                     END IF;

                     IF (NVL(V_CFOPINFUSU, 'N') <> 'S') AND (V_CDFISCOPERREGRA IS NOT NULL) THEN
                        V_FISOPEITEM := NVL(V_CDFISCOPERREGRA, V_FISOPEITEM);
                        V_DSCDFISOPEITREGRA := SUBSTR(DESCRICAO_CFOP(V_CDFISCOPERREGRA),1,45);
                     END IF;

                     INSERT INTO ITEMPROIMPOS(
                        CDFILIAL, NRLANCTONF, NRSEQITPROD, CDIMPOSTO, NRITPROIMPOS, CDFISCALIT,
                        CDSITUTRIBIT, CDFISCOPERIT, CDSUFXCFOPIT, VRALIQITEM, VRPERREDBCIT, VRPARDEDIT,
                        VRCONTITIMP, VRBASECALCIT, VRIMPOSTOIT, IDERROSIMPIT, IDAVISIMPIT, IDTRIMPSTII,
                        CDSITUTRIBITNFE, IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT,
                        CDSIMPLESNACIONAL, CDFAIXA, VRBCICMSSTRETIDO, VRICMSSTRETIDO, CDREGRAIT, CDDETALHEPROD,
                        VRIMPOSTOVISUIT, VRBCALCIRRF, VRPERDIFEREIT, VRIMPOSTOOPERAIT, VRIMPOSTODIFERIT,
                        CDENQLEGALIPI, CDCEST, IDIMPSTCARGTRIB, VRADICALIQFECP, VRADICFECP,
                        VRALIQINTEDEST, VRALIQFCP, IDDESONERAREGRA, IDCONSDESONVRNF, CDBENEFFISCAL,
                        IDCONSDIFALIQ, CDCOMPST, CDRESTST, CDNATUREC, VRPERREDBCSTIT, VRIMPOSTOREP, IDNUTREDBCFECP,
                        VRIMPICMSBASE, VRCARGAEXPRESSA)
                     VALUES(
                        P_FILIAL, P_LANCTONF, C_ITEMPRODUTO.NRSEQITPROD, C_INCIDENCIA.CDIMPOTEMP, w_1, C_INCIDENCIA.CDFISCTEMP,
                        V_SITUTRIBPR, V_FISOPEITEM, V_SUFXCFOPPR, V_ALIQUTMP, V_PREDBCTMP, V_PARDEDTMP,
                        V_BASECALCTO, V_BASECALCTO, V_IMPOSTOIT, w_00000, w_00000, V_IDTRIMPSTII,
                        V_CDSITTRIBTMP, V_IDMODBCNFE, V_IDMODBCSTNFE, V_CDTPCRPICOSTNFE, V_CDNATUBCPCSTNFE, V_IDMOTIDESSTNFE,
                        V_CDSIMPLESNACIONAL, V_CDFAIXA, V_BCICMSSTRETIDO, V_VRICMSSTRETIDO, V_CDREGRAITALIQ, C_INCIDENCIA.CDDETALHEPROD,
                        V_VRIMPOSTOVISUIT, V_BASECALCIRRF, V_PERDIFERE, V_IMPOSTOOPERA, V_IMPOSTODIFER,
                        C_INCIDENCIA.CDENQLEGALIPI, C_INCIDENCIA.CDCEST, V_IDIMPSTCARGTRIB, V_VRADICALIQFECP, V_VRADICFECP,
                        V_ALIQICMSDEST, V_ALIQFECPDEST, NVL(V_IDIMPODESONERA, 'N'), NVL(V_IDCONSDESONVRNF, 'N'), V_CDBENEFFISCAL,
                        NVL(V_IDCONSDIFALIQ, 'N'), V_CDCOMPST, V_CDRESTST, V_CDNATUREC, V_PREDBCSTIT, V_VRIMPOSTOREP, V_IDNUTREDBCFECP,
                        V_VRIMPBCICMS, V_VRCARGAEXPRESSA);
                     

                     IF (V_PREDBCTMP > 0) AND (V_PBCSUBTRIB = 0) AND ((V_VRALIQICMSCBSP IS NULL) OR (V_VRALIQICMSCBSP = 0)) THEN
                        IF V_SITUTRIBPR = '060' THEN
                           
                           INSERT INTO ITEMPROIMPOS(
                              CDFILIAL, NRLANCTONF, NRSEQITPROD, CDIMPOSTO, NRITPROIMPOS, CDFISCALIT,
                              CDSITUTRIBIT, CDFISCOPERIT, CDSUFXCFOPIT, VRALIQITEM, VRPERREDBCIT, VRPARDEDIT,
                              VRCONTITIMP, VRBASECALCIT, VRIMPOSTOIT, IDERROSIMPIT, IDAVISIMPIT, CDSITUTRIBITNFE,
                              IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT, CDSIMPLESNACIONAL,
                              CDFAIXA, VRBCICMSSTRETIDO, VRICMSSTRETIDO, CDREGRAIT, CDDETALHEPROD,
                              VRIMPOSTOVISUIT, CDENQLEGALIPI, CDCEST, IDIMPSTCARGTRIB)
                           VALUES(
                              P_FILIAL, P_LANCTONF, C_ITEMPRODUTO.NRSEQITPROD, C_INCIDENCIA.CDIMPOTEMP, w_2, w_2,
                              V_SITUTRIBPR, V_FISOPEITEM, V_SUFXCFOPPR, 0, V_PERDBCALC, V_PARDEDTMP,
                              V_CONTABCALC, 0, 0, w_00000, w_00000, V_CDSITTRIBTMP,
                              V_IDMODBCNFE, V_IDMODBCSTNFE, V_CDTPCRPICOSTNFE, V_CDNATUBCPCSTNFE, V_IDMOTIDESSTNFE, V_CDSIMPLESNACIONAL,
                              V_CDFAIXA, V_BCICMSSTRETIDO, V_VRICMSSTRETIDO, V_CDREGRAITALIQ, C_INCIDENCIA.CDDETALHEPROD,
                              V_VRIMPOSTOVISUIT, C_INCIDENCIA.CDENQLEGALIPI, C_INCIDENCIA.CDCEST, V_IDIMPSTCARGTRIB);
                        ELSE                        
                           INSERT INTO ITEMPROIMPOS(
                              CDFILIAL, NRLANCTONF, NRSEQITPROD, CDIMPOSTO, NRITPROIMPOS, CDFISCALIT,
                              CDSITUTRIBIT, CDFISCOPERIT, CDSUFXCFOPIT, VRALIQITEM, VRPERREDBCIT, VRPARDEDIT,
                              VRCONTITIMP, VRBASECALCIT, VRIMPOSTOIT, IDERROSIMPIT, IDAVISIMPIT, CDSITUTRIBITNFE,
                              IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT, CDSIMPLESNACIONAL,
                              CDFAIXA, VRBCICMSSTRETIDO, VRICMSSTRETIDO, CDREGRAIT, CDDETALHEPROD,
                              VRIMPOSTOVISUIT, CDENQLEGALIPI, CDCEST, IDIMPSTCARGTRIB, VRPERREDBCSTIT, VRIMPOSTOREP)
                           VALUES(
                              P_FILIAL, P_LANCTONF, C_ITEMPRODUTO.NRSEQITPROD, C_INCIDENCIA.CDIMPOTEMP, w_2, w_2,
                              V_SITUTRIBPR, V_FISOPEITEM, V_SUFXCFOPPR, 0, V_PERDBCALC, V_PARDEDTMP,
                              V_CONTABCALC, 0, 0, w_00000, w_00000, V_CDSITTRIBTMP,
                              V_IDMODBCNFE, V_IDMODBCSTNFE, V_CDTPCRPICOSTNFE, V_CDNATUBCPCSTNFE, V_IDMOTIDESSTNFE, V_CDSIMPLESNACIONAL,
                              V_CDFAIXA, V_BCICMSSTRETIDO, V_VRICMSSTRETIDO, V_CDREGRAITALIQ, C_INCIDENCIA.CDDETALHEPROD,
                              V_VRIMPOSTOVISUIT, C_INCIDENCIA.CDENQLEGALIPI, C_INCIDENCIA.CDCEST, V_IDIMPSTCARGTRIB, V_PREDBCSTIT, V_VRIMPOSTOREP);
                        END IF;
                     END IF;
                  END IF;

                  FOR C_ALIQTEMP IN (SELECT DSMENSALITMP
                                     FROM ALIQTEMP
                                     WHERE (NRALIQTEMP = V_ALIQTEMP)  AND
                                           (DSMENSALITMP IS NOT NULL) AND
                                           (NOT EXISTS(SELECT DSDADOADIC
                                                       FROM DADOSADIC
                                                       WHERE (CDFILIAL   = P_FILIAL)   AND
                                                             (NRLANCTONF = P_LANCTONF) AND
                                                             (DSDADOADIC LIKE ALIQTEMP.DSMENSALITMP || '%')))) LOOP

                     IF NOT(C_ALIQTEMP.DSMENSALITMP IS NULL) THEN
                        /*PREENCHE AS MENSAGENS ATRELADAS A ALIQUOTA*/
                        INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
                                       VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, C_ALIQTEMP.DSMENSALITMP);

                        V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
                     END IF;
                  END LOOP;

                  DELETE ALIQTEMP
                   WHERE NRALIQTEMP = V_ALIQTEMP;

                  V_VRADICALIQFECP := NULL;
                  V_VRADICFECP := NULL;

               IF (V_IDCALCICMS60 = 'S') THEN
                  IF (SUBSTR(V_SITUTRIBPR, 2, 2) = '60') THEN
                        CALCULA_ICMS60(P_FILIAL,
                                       P_LANCTONF,
                                       C_ITEMPRODUTO.NRSEQITPROD,
                                       V_TAXAALIQUOTA);
                  END IF;
               END IF;   

      /*Preenchendo a infAdFisco com os dados do FET*/
               IF C_INCIDENCIA.CDIMPOSTONFE = '04' THEN

                  DELETE
                    FROM DADOSADICFISCO
                   WHERE CDFILIAL = P_FILIAL
                     AND NRLANCTONF = P_LANCTONF
                     AND DSDADOADICFISCO LIKE '%FET:%';

                  BEGIN
                     SELECT SUM(VRBASECALCIT), SUM(VRIMPOSTOIT)
                       INTO V_FETBASECALC, V_FETVRIMPOSTO
                       FROM ITEMPROIMPOS IT, IMPOSTO I
                      WHERE IT.CDIMPOSTO = I.CDIMPOSTO
                        AND I.CDIMPOSTONFE = '04'
                        AND IT.CDFILIAL = P_FILIAL
                        AND IT.NRLANCTONF = P_LANCTONF;
                  EXCEPTION
                     WHEN NO_DATA_FOUND THEN BEGIN
                        V_FETBASECALC := 0;
                        V_FETVRIMPOSTO := 0;
                     END;
                  END;

                  V_FETALIQUOTA := NULL;

                  FOR C_FETALIQUOTA IN (SELECT DISTINCT (DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(VRALIQITEM, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(VRALIQITEM, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(VRALIQITEM, 2), '9999999999999.99')))) AS ALIQFET
                                          FROM ITEMPROIMPOS IT, IMPOSTO I
                                         WHERE IT.CDIMPOSTO = I.CDIMPOSTO
                                           AND I.CDIMPOSTONFE = '04'
                                           AND IT.CDFILIAL = P_FILIAL
                                           AND IT.NRLANCTONF = P_LANCTONF) LOOP

                     IF (C_FETALIQUOTA.ALIQFET IS NOT NULL) AND (C_FETALIQUOTA.ALIQFET <> '0') THEN
                        V_FETALIQUOTA := C_FETALIQUOTA.ALIQFET||' - '||V_FETALIQUOTA;
                     END IF;

                     IF (V_FETALIQUOTA IS NOT NULL) OR (TRIM(V_FETALIQUOTA) <> '') THEN
                        IF (TRIM(SUBSTR(V_FETALIQUOTA, LENGTH(V_FETALIQUOTA) - 2, 3)) = '-') THEN
                           V_FETALIQUOTA := TRIM(SUBSTR(V_FETALIQUOTA, 1, LENGTH(V_FETALIQUOTA) - 3));
                        END IF;
                     END IF;

                  END LOOP;

                  IF V_FETVRIMPOSTO > 0 THEN
                     INSERT INTO DADOSADICFISCO (CDFILIAL, NRLANCTONF, NRDADOADICFISCO, DSDADOADICFISCO)
                          VALUES (P_FILIAL, P_LANCTONF, V_DADOADICFISCO, 'Base de Calculo: R$ '||DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_FETBASECALC, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_FETBASECALC, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_FETBASECALC, 2), '9999999999999.99')))||
                                                                         ' Aliquota: '||V_FETALIQUOTA||
                                                                         '% FET: R$ '||DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_FETVRIMPOSTO, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_FETVRIMPOSTO, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_FETVRIMPOSTO, 2), '9999999999999.99'))));

                     V_DADOADICFISCO := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADICFISCO) + 1)),3,0);
                  END IF;
               END IF;

               END LOOP; --FIM DO LOOP DAS INCIDÊNCIAS

               DELETE INCITEMP
               WHERE NRINCITEMP = V_INCITEMP;

            ELSE
               /*IMPOSTOS INFORMADOS PELO USUARIO*/
               FOR C_IMPOSINFUSU IN (SELECT II.CDIMPOSTO, II.CDFISCINFUSU,
                                            II.VRALIQINFUSU, II.VRRDBCINFUSU, II.VRPDEDINFUSU,
                                            I.IDTRATIMPO, I.IDCONSISTENT, I.IDIMPORECUP
                                     FROM IMPOSINFUSU II, IMPOSTO I
                                     WHERE (II.CDFILIAL    = P_FILIAL)                  AND
                                           (II.NRLANCTONF  = P_LANCTONF)                AND
                                           (II.NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD) AND
                                           (II.CDIMPOSTO   = I.CDIMPOSTO)) LOOP

                  V_TAXABASECALC := (100 - C_IMPOSINFUSU.VRRDBCINFUSU)/100;
                  V_TAXAALIQUOTA := (C_IMPOSINFUSU.VRALIQINFUSU/100);

                  V_IMPOSTOIT  := ((V_LIQUIITEM * V_TAXABASECALC) * V_TAXAALIQUOTA) - C_IMPOSINFUSU.VRPDEDINFUSU;
                  V_CONTABCALC := V_LIQUIITEM - (V_LIQUIITEM * V_TAXABASECALC);
                  V_PERDBCALC  := 100 - C_IMPOSINFUSU.VRRDBCINFUSU;

                  IF (V_IMPOSTOIT < 0) THEN
                     V_IMPOSTOIT := 0;
                  END IF;

                  IF (C_IMPOSINFUSU.VRALIQINFUSU = 0) AND (V_IMPOSTOIT = 0) THEN
                     V_BASECALCIT := 0;
                  ELSE
                     V_BASECALCIT := V_LIQUIITEM * V_TAXABASECALC;
                  END IF;

                  BEGIN
                     SELECT CDFILIAL
                     INTO   V_CHAVE
                     FROM ITEMPROIMPOS
                     WHERE CDFILIAL     = P_FILIAL                 AND
                           NRLANCTONF   = P_LANCTONF               AND
                           NRSEQITPROD  = C_ITEMPRODUTO.NRSEQITPROD  AND
                           CDIMPOSTO    = C_IMPOSINFUSU.CDIMPOSTO AND
                           NRITPROIMPOS = w_1;
                  EXCEPTION
                     WHEN NO_DATA_FOUND THEN BEGIN
                        V_CHAVE := NULL;
                     END;
                  END;

                  IF V_IDPERVISIMPSCRE = 'S' THEN
                     V_VRIMPOSTOVISUIT := V_IMPOSTOIT;
                  ELSE
                     IF (C_IMPOSINFUSU.CDFISCINFUSU = '1') THEN
                        V_VRIMPOSTOVISUIT := V_IMPOSTOIT;
                     ELSE
                        V_VRIMPOSTOVISUIT := 0;
                     END IF;
                  END IF;

                  IF V_CHAVE IS NULL THEN

                     INSERT INTO ITEMPROIMPOS(
                        CDFILIAL, NRLANCTONF, NRSEQITPROD, CDIMPOSTO, NRITPROIMPOS, CDFISCALIT, CDSITUTRIBIT,
                        CDFISCOPERIT, CDSUFXCFOPIT, VRALIQITEM, VRPERREDBCIT, VRPARDEDIT, VRCONTITIMP,
                        VRBASECALCIT, VRIMPOSTOIT, IDERROSIMPIT, IDAVISIMPIT, VRIMPOSTOVISUIT)
                     VALUES(
                        P_FILIAL, P_LANCTONF, C_ITEMPRODUTO.NRSEQITPROD, C_IMPOSINFUSU.CDIMPOSTO, w_1, C_IMPOSINFUSU.CDFISCINFUSU, V_SITUTRIBPR,
                        V_FISOPEITEM, V_SUFXCFOPPR, C_IMPOSINFUSU.VRALIQINFUSU, C_IMPOSINFUSU.VRRDBCINFUSU, C_IMPOSINFUSU.VRPDEDINFUSU, V_BASECALCIT,
                        V_BASECALCIT, V_IMPOSTOIT, w_00000, w_00000, V_VRIMPOSTOVISUIT);


                     IF V_PREDBCTMP > 0 THEN
                        INSERT INTO ITEMPROIMPOS(
                           CDFILIAL, NRLANCTONF, NRSEQITPROD, CDIMPOSTO, NRITPROIMPOS, CDFISCALIT, CDSITUTRIBIT,
                           CDFISCOPERIT, CDSUFXCFOPIT, VRALIQITEM, VRPERREDBCIT, VRPARDEDIT, VRCONTITIMP,
                           VRBASECALCIT, VRIMPOSTOIT, IDERROSIMPIT, IDAVISIMPIT, VRIMPOSTOVISUIT, VRPERREDBCSTIT)
                        VALUES(
                           P_FILIAL, P_LANCTONF, C_ITEMPRODUTO.NRSEQITPROD, C_IMPOSINFUSU.CDIMPOSTO, w_2, w_2, V_SITUTRIBPR,
                           V_FISOPEITEM, V_SUFXCFOPPR, 0, V_PERDBCALC, C_IMPOSINFUSU.VRPDEDINFUSU, ROUND(V_CONTABCALC,2),
                           0, 0, w_00000, w_00000, 0, V_PREDBCSTIT);
                     END IF;
                  END IF;
               END LOOP; --FIM DO LOOP DOS IMPOSTOS INFORMADOS PELO USUARIO
            END IF;
         ELSE
           IF (P_TIPOOPER <> '03') AND (V_IDNFAJUSTE <> w_S) THEN
               DELETE FROM ITEMPRODUTO
                     WHERE CDFILIAL = P_FILIAL
                       AND NRLANCTONF = P_LANCTONF
                       AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD
                       AND CDPRODUTO = C_ITEMPRODUTO.CDPRODUTO;
            END IF;
         END IF;
      END LOOP; --FIM DO LOOP DOS PRODUTOS

      DELETE FROM REGRANOTA
      WHERE CDFILIAL = P_FILIAL
        AND NRLANCTONF = P_LANCTONF;

      FOR C_IMPOSNOTA IN (SELECT DISTINCT CDREGRAIT
                            FROM ITEMPROIMPOS
                           WHERE CDFILIAL = P_FILIAL
                             AND NRLANCTONF = P_LANCTONF
                             AND CDREGRAIT IS NOT NULL
                          ORDER BY CDREGRAIT)
      LOOP

         FOR C_REGRAMSG IN (SELECT CDREGRAFISC, DSMENSREGRAFISC
                              FROM TABLE(MSG_REGRAFISCAL(C_IMPOSNOTA.CDREGRAIT, P_EMPRESA, 'S', P_TIPOOPER, P_INSCESTA)) M
                             WHERE NOT EXISTS(SELECT DSDADOADIC
                                             FROM DADOSADIC
                                             WHERE (CDFILIAL   = P_FILIAL)   AND
                                                   (NRLANCTONF = P_LANCTONF) AND
                                                   (DSDADOADIC = M.DSMENSREGRAFISC))) LOOP

            INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
                           VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, C_REGRAMSG.DSMENSREGRAFISC);

            V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
         END LOOP;

         INSERT INTO REGRANOTA(CDFILIAL, NRLANCTONF, CDREGRAFISC)
                           VALUES(P_FILIAL, P_LANCTONF, C_IMPOSNOTA.CDREGRAIT);
      END LOOP;

      --RATEIO DOS ENCARGOS--------------------------------------------------------------------------------------------------------

      /* VERIFICAR SE EXISTE ENCARGO COM VALOR SOMENTE SE TIVER ALGUM ENCARGO PARAMETRIZADO PARA RATEAR PELO PESO LÍQUIDO */
      IF NOT(V_ENCARGOLIQUIDO = 'N') THEN
         V_EXISTEENCARGO := 0;
         BEGIN
            SELECT COUNT(CDENCARGO)
              INTO V_EXISTEENCARGO
              FROM ITEMENCARGO
             WHERE VRITEMENCA > 0
               AND CDFILIAL   = P_FILIAL
               AND NRLANCTONF = P_LANCTONF;
         EXCEPTION
            WHEN NO_DATA_FOUND THEN
               V_EXISTEENCARGO := 0;
         END;

         IF (V_EXISTEENCARGO = 0) THEN
            V_ENCARGOLIQUIDO := 'N';
         END IF;

         /* VERIFICAR SE ALGUM ENCARGO QUE TEM VALOR ESTÁ PARAMETRIZADO PARA SER RATEADO POR PESO LÍQUIDO CASO SEJA OPÇÃO LISTA */
         IF (V_EXISTEENCARGO > 0) THEN
            IF NOT(V_ENCARGOLIQUIDO = 'T') THEN
               BEGIN
                  SELECT COUNT(CDENCARGO)
                    INTO V_EXISTEENCARGO
                    FROM ITEMENCARGO
                   WHERE VRITEMENCA > 0
                     AND CDFILIAL   = P_FILIAL
                     AND NRLANCTONF = P_LANCTONF
                     AND INSTR(V_ENCARGOLIQUIDO, CDENCARGO) > 0;
               EXCEPTION
                  WHEN NO_DATA_FOUND THEN
                     V_EXISTEENCARGO := 0;
               END;
               /* SE HOUVER ENCARGO COM VALOR MAS NENHUM ESTEJA PARAMETRIZADO NA LISTA PARA RATEAR POR PESO LÍQUIDO, A VARIÁVEL V_ENCARGOLIQUIDO É PASSADA PARA 'N' PARA QUE OS ENCARGOS QUE TENHAM
                  VALOR SEJAM RATEADOS DE FORMA PROPORCIONAL AO VALOR DOS PRODUTOS */
               IF (V_EXISTEENCARGO = 0) THEN
                  V_ENCARGOLIQUIDO := 'N';
               END IF;
            END IF;
         END IF;
      END IF;

      FOR C_ITEMENCARGO IN (SELECT IE.CDENCARGO AS CDENCARGO, VRITEMENCA, IDENCARGO,
                                   EN.CDCTBLENTREN, EN.CDCTBLSAIDEN
                            FROM ITEMENCARGO IE, ENCARGO EN
                            WHERE (IE.CDFILIAL   = P_FILIAL)     AND
                                  (IE.NRLANCTONF = P_LANCTONF)   AND
                                  (IE.VRITEMENCA > 0)            AND
                                  (EN.CDENCARGO  = IE.CDENCARGO) AND
                                  (V_ENCARGOLIQUIDO <> 'T')   AND
                                  (NOT(INSTR(V_ENCARGOLIQUIDO, IE.CDENCARGO) > 0))) LOOP
         V_TOTAPRODENCA := 0;

         FOR C_VRLIQRATEIO IN (SELECT DISTINCT(IP.NRSEQITPROD) AS NRSEQITPROD, (VRTOTAITEM - VRDESCITEM) AS VRLIQUIDO
                               FROM ITEMPRODUTO IP, ITEMPROIMPOS II
                               WHERE (IP.CDFILIAL    = P_FILIAL)       AND
                                     (IP.NRLANCTONF  = P_LANCTONF)     AND
                                     (II.CDFILIAL    = IP.CDFILIAL)    AND
                                     (II.NRLANCTONF  = IP.NRLANCTONF)  AND
                                     (II.NRSEQITPROD = IP.NRSEQITPROD) AND
                                     (NVL(IP.IDPRODBONIF, 'N') = 'N')  AND
                                     (EXISTS(SELECT BC.CDIMPOSTO
                                             FROM BASECALC BC
                                             WHERE (BC.CDENCARGO = C_ITEMENCARGO.CDENCARGO) AND
                                                   (BC.CDIMPOSTO = II.CDIMPOSTO)            AND
                                                   (BC.CDIMPOSTO IN (SELECT B.CDIMPOSTO
                                                                    FROM BASECALC B
                                                                    WHERE B.CDENCARGO = C_ITEMENCARGO.CDENCARGO))))) LOOP

            IF NOT (C_VRLIQRATEIO.VRLIQUIDO IS NULL) THEN
               V_TOTAPRODENCA := V_TOTAPRODENCA + C_VRLIQRATEIO.VRLIQUIDO;
            END IF;
         END LOOP;

         IF V_TOTAPRODENCA = 0 THEN
            SELECT SUM(VRTOTAITEM - VRDESCITEM)
            INTO   V_TOTAPRODENCA
            FROM ITEMPRODUTO IP
            WHERE (IP.CDFILIAL   = P_FILIAL)   AND
                  (IP.NRLANCTONF = P_LANCTONF) AND
                  (NVL(IP.IDPRODBONIF, 'N') = 'N');

            IF (NOT V_TOTAPRODENCA IS NULL) AND (V_TOTAPRODENCA > 0) THEN
               FOR C_ATUAVRCONT IN (SELECT IP.NRSEQITPROD, (VRTOTAITEM - VRDESCITEM) AS VRLIQUIDO
                                    FROM ITEMPRODUTO IP
                                    WHERE (IP.CDFILIAL    = P_FILIAL) AND
                                          (IP.NRLANCTONF  = P_LANCTONF) AND
                                          (NVL(IP.IDPRODBONIF, 'N') = 'N')) LOOP

                  IF (C_ITEMENCARGO.IDENCARGO = w_A) THEN
                     V_VRBRUTO  := (C_ITEMENCARGO.VRITEMENCA/V_TOTAPRODENCA);
                  ELSIF (C_ITEMENCARGO.IDENCARGO = w_D) THEN
                     V_VRBRUTO  := - (C_ITEMENCARGO.VRITEMENCA/V_TOTAPRODENCA);
                  ELSE
                     V_VRBRUTO := 0;
                  END IF;

                  IF (C_ITEMENCARGO.CDCTBLSAIDEN IS NULL) THEN
                     V_VRCONTAB := V_VRBRUTO;
                  ELSE
                     V_VRCONTAB := 0;
                  END IF;

                  IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                     UPDATE ITEMPRODUTO
                     SET VRBRUTITEM = TRUNC(VRBRUTITEM + (V_VRBRUTO  * (VRTOTAITEM - VRDESCITEM)),2),
                         VRCONTITEM = TRUNC(VRCONTITEM + (V_VRCONTAB * (VRTOTAITEM - VRDESCITEM)),2)
                     WHERE CDFILIAL    = P_FILIAL   AND
                           NRLANCTONF  = P_LANCTONF AND
                           NRSEQITPROD = C_ATUAVRCONT.NRSEQITPROD;
                  ELSE
                     UPDATE ITEMPRODUTO
                     SET VRBRUTITEM = VRBRUTITEM + (V_VRBRUTO  * (VRTOTAITEM - VRDESCITEM)),
                         VRCONTITEM = VRCONTITEM + (V_VRCONTAB * (VRTOTAITEM - VRDESCITEM))
                     WHERE CDFILIAL    = P_FILIAL   AND
                           NRLANCTONF  = P_LANCTONF AND
                           NRSEQITPROD = C_ATUAVRCONT.NRSEQITPROD;
                  END IF;
               END LOOP;
            END IF;
         ELSE
            FOR C_ATUAVRCONT IN (SELECT DISTINCT(IP.NRSEQITPROD) AS NRSEQITPROD, (VRTOTAITEM - VRDESCITEM) AS VRLIQUIDO
                                 FROM ITEMPRODUTO IP, ITEMPROIMPOS II
                                 WHERE (IP.CDFILIAL    = P_FILIAL)       AND
                                       (IP.NRLANCTONF  = P_LANCTONF)     AND
                                       (II.CDFILIAL    = IP.CDFILIAL)    AND
                                       (II.NRLANCTONF  = IP.NRLANCTONF)  AND
                                       (II.NRSEQITPROD = IP.NRSEQITPROD) AND
                                       (NVL(IP.IDPRODBONIF, 'N') = 'N')  AND
                                       (EXISTS(SELECT BC.CDIMPOSTO
                                               FROM BASECALC BC
                                               WHERE (BC.CDENCARGO = C_ITEMENCARGO.CDENCARGO) AND
                                                     (BC.CDIMPOSTO = II.CDIMPOSTO)            AND
                                                     (BC.CDIMPOSTO IN (SELECT B.CDIMPOSTO
                                                                       FROM BASECALC B
                                                                       WHERE B.CDENCARGO = C_ITEMENCARGO.CDENCARGO))))) LOOP

               IF (C_ITEMENCARGO.IDENCARGO = w_A) THEN
                  V_VRBRUTO  := (C_ITEMENCARGO.VRITEMENCA/V_TOTAPRODENCA);
               ELSIF (C_ITEMENCARGO.IDENCARGO = w_D) THEN
                  V_VRBRUTO  := - (C_ITEMENCARGO.VRITEMENCA/V_TOTAPRODENCA);
               ELSE
                  V_VRBRUTO := 0;
               END IF;

               IF (C_ITEMENCARGO.CDCTBLSAIDEN IS NULL) THEN
                  V_VRCONTAB := V_VRBRUTO;
               ELSE
                  V_VRCONTAB := 0;
               END IF;

               IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                  UPDATE ITEMPRODUTO
                  SET VRBRUTITEM = TRUNC(VRBRUTITEM + (V_VRBRUTO  * (VRTOTAITEM - VRDESCITEM)),2),
                      VRCONTITEM = TRUNC(VRCONTITEM + (V_VRCONTAB * (VRTOTAITEM - VRDESCITEM)),2)
                  WHERE CDFILIAL    = P_FILIAL   AND
                        NRLANCTONF  = P_LANCTONF AND
                        NRSEQITPROD = C_ATUAVRCONT.NRSEQITPROD;
               ELSE
                  UPDATE ITEMPRODUTO
                  SET VRBRUTITEM = VRBRUTITEM + (V_VRBRUTO  * (VRTOTAITEM - VRDESCITEM)),
                      VRCONTITEM = VRCONTITEM + (V_VRCONTAB * (VRTOTAITEM - VRDESCITEM))
                  WHERE CDFILIAL    = P_FILIAL   AND
                        NRLANCTONF  = P_LANCTONF AND
                        NRSEQITPROD = C_ATUAVRCONT.NRSEQITPROD;
               END IF;
            END LOOP;

            FOR C_ITEMPROIMPOS IN (SELECT II.NRSEQITPROD,
                                          II.NRITPROIMPOS,
                                          II.CDIMPOSTO,
                                          II.VRPERREDBCIT,
                                          II.VRALIQITEM,
                                          II.VRPARDEDIT,
                                          II.IDTRIMPSTII,
                                          (VRTOTAITEM - VRDESCITEM) AS VRLIQUIDO,
                                          NVL(II.VRALIQINTEDEST, 0) AS VRALIQINTEDEST,
                                          NVL(II.VRALIQFCP, 0) AS VRALIQFCP,
                                          NVL(IP.IDUTILBCPMC, 'N') AS IDUTILBCPMC,
                                          I.CDIMPOSTONFE,
                                          NVL(II.IDCONSDIFALIQ, 'N') AS IDCONSDIFALIQ,
                                          II.VRIMPOSTOREP,
                                          II.VRPERREDBCSTIT,
                                          BC.IDTRATIMPOBCENC, II.VRCARGAEXPRESSA
                                     FROM ITEMPROIMPOS II, ITEMPRODUTO IP, BASECALC BC, IMPOSTO I
                                    WHERE (II.CDFILIAL = P_FILIAL)
                                      AND (II.NRLANCTONF = P_LANCTONF)
                                      AND (IP.CDFILIAL = P_FILIAL)
                                      AND (IP.NRLANCTONF = P_LANCTONF)
                                      AND (IP.NRSEQITPROD = II.NRSEQITPROD)
                                      AND (BC.CDIMPOSTO = II.CDIMPOSTO)
                                      AND (II.CDIMPOSTO = I.CDIMPOSTO)
                                      AND (NVL(IP.IDPRODBONIF, 'N') = 'N')
                                      AND (BC.CDENCARGO = C_ITEMENCARGO.CDENCARGO)
                                    ORDER BY II.NRSEQITPROD,
                                          II.NRITPROIMPOS,
                                          II.CDIMPOSTO) LOOP

               IF NOT((C_ITEMPROIMPOS.IDUTILBCPMC = W_S) AND (C_ITEMPROIMPOS.CDIMPOSTONFE = '80')) OR (C_ITEMPROIMPOS.IDUTILBCPMC <> W_S) THEN
                  IF (C_ITEMPROIMPOS.IDCONSDIFALIQ <> W_S) AND (C_ITEMPROIMPOS.VRIMPOSTOREP IS NULL) THEN

                     SELECT SUM(VRTOTAITEM - VRDESCITEM)
                       INTO V_TOTAPRENIMPO
                       FROM ITEMPRODUTO IP
                      WHERE IP.CDFILIAL   = P_FILIAL
                        AND IP.NRLANCTONF = P_LANCTONF
                        AND (NVL(IP.IDPRODBONIF, 'N') = 'N');

                     IF (V_TOTAPRODENCA <> 0) THEN
                        IF (NVL(C_ITEMPROIMPOS.IDTRATIMPOBCENC, C_ITEMENCARGO.IDENCARGO) = w_A) THEN
                           V_PRODUENCARGO := +(C_ITEMENCARGO.VRITEMENCA/V_TOTAPRENIMPO)*C_ITEMPROIMPOS.VRLIQUIDO;
                        ELSIF (NVL(C_ITEMPROIMPOS.IDTRATIMPOBCENC, C_ITEMENCARGO.IDENCARGO) = w_D) THEN
                           V_PRODUENCARGO := -(C_ITEMENCARGO.VRITEMENCA/V_TOTAPRENIMPO)*C_ITEMPROIMPOS.VRLIQUIDO;
                        ELSE
                           V_PRODUENCARGO := 0;
                        END IF;
                     END IF;

                     V_IDVRIMPSTRIB := null;
                     BEGIN
                        SELECT CASE COUNT(*) WHEN 0 THEN 'M' ELSE 'R' END
                          INTO V_MAJORAOUREDUZ
                          FROM ITEMPROIMPOS
                         WHERE CDFILIAL = P_FILIAL
                           AND NRLANCTONF = P_LANCTONF
                           AND NRSEQITPROD = C_ITEMPROIMPOS.NRSEQITPROD
                           AND CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO
                           AND NRITPROIMPOS = w_2;
                     EXCEPTION
                        WHEN NO_DATA_FOUND THEN
                           V_MAJORAOUREDUZ := 'M';
                     END;

                     V_VRIMPOSTOST := 0;
                     IF V_MAJORAOUREDUZ = 'R' THEN
                        V_TAXABASECALC := (100 - C_ITEMPROIMPOS.VRPERREDBCIT)/100;
                        V_TAXAALIQUOTA := (C_ITEMPROIMPOS.VRALIQITEM/100);
                     ELSE
                        V_TAXABASECALC :=(100 - NVL(C_ITEMPROIMPOS.VRPERREDBCSTIT, 0))/100; 
                        V_PRODUENCARGO :=  (V_PRODUENCARGO * V_TAXABASECALC); /*Calcular o valor do encargo retirando redução da base para no update abaixo utilize o valor adicionando a majoração*/
                        V_TAXABASECALC := 1 + (C_ITEMPROIMPOS.VRPERREDBCIT)/100;
                        V_TAXAALIQUOTA := (C_ITEMPROIMPOS.VRALIQITEM/100);

                        SELECT NVL(MAX(IDVRIMPSTRIB), 'N')
                          INTO V_IDVRIMPSTRIB
                          FROM ITEMPROIMPOS I, IMPOSTO II
                         WHERE (CDFILIAL     = P_FILIAL)
                           AND (NRLANCTONF   = P_LANCTONF)
                           AND (NRSEQITPROD  = C_ITEMPROIMPOS.NRSEQITPROD)
                           AND (INSTR(V_CDIMPOSTRIB,II.CDIMPOSTO||'_') > 0)
                           AND (I.CDIMPOSTO = II.CDIMPOSTO);

                        IF (C_ITEMPROIMPOS.IDTRIMPSTII <> w_1) AND (NVL(V_IDVRIMPSTRIB,w_N) = w_S) THEN
                           BEGIN
                              SELECT NVL(MAX(VRIMPOSTOIT),0)
                              INTO   V_VRIMPOSTOST
                              FROM ITEMPROIMPOS I
                              WHERE (CDFILIAL     = P_FILIAL)                   AND
                                    (NRLANCTONF   = P_LANCTONF)                 AND
                                    (INSTR(V_CDIMPOSTRIB,CDIMPOSTO||'_') > 0)   AND
                                    (NRITPROIMPOS = C_ITEMPROIMPOS.NRITPROIMPOS);
                           EXCEPTION
                              WHEN NO_DATA_FOUND THEN BEGIN
                                 V_VRIMPOSTOST := 0;
                              END;
                           END;
                        END IF;
                     END IF;

                     V_ICMS := 'N';
                     FOR C_ICMS IN (SELECT CDIMPOSTO
                                      FROM IMPOSTONFE N, IMPOSTO I
                                     WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                                       AND N.CDIMPOSTONFE = '00'
                                       AND I.CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO)
                     LOOP
                        V_ICMS := 'S';
                     END LOOP;

                     IF (V_ICMS = 'S') AND (C_ITEMPROIMPOS.VRCARGAEXPRESSA > 0) THEN
                        V_VRCALCULADO := ((V_PRODUENCARGO / (1 - (C_ITEMPROIMPOS.VRCARGAEXPRESSA / 100))) * ((C_ITEMPROIMPOS.VRCARGAEXPRESSA / 100) / V_TAXAALIQUOTA));
                        UPDATE ITEMPROIMPOS
                           SET VRCONTITIMP  = VRCONTITIMP  + (V_PRODUENCARGO * V_TAXABASECALC),
                               VRBASECALCIT = VRBASECALCIT + (V_VRCALCULADO  / (1 - ((C_ITEMPROIMPOS.VRALIQINTEDEST + C_ITEMPROIMPOS.VRALIQFCP) / 100))),
                               VRIMPOSTOIT  = (VRIMPOSTOIT  + ((V_VRCALCULADO / (1 - ((C_ITEMPROIMPOS.VRALIQINTEDEST + C_ITEMPROIMPOS.VRALIQFCP) / 100))) * V_TAXAALIQUOTA)) - ((V_VRIMPOSTOST / (1 - ((C_ITEMPROIMPOS.VRALIQINTEDEST + C_ITEMPROIMPOS.VRALIQFCP) / 100))) * V_TAXAALIQUOTA),
                               VRIMPOSTOVISUIT = DECODE(V_IDPERVISIMPSCRE, 'S', (VRIMPOSTOIT  + (V_VRCALCULADO * V_TAXAALIQUOTA)) - (V_VRIMPOSTOST * V_TAXAALIQUOTA),  DECODE(CDFISCALIT , '1', (VRIMPOSTOIT  + (V_VRCALCULADO * V_TAXAALIQUOTA)) - (V_VRIMPOSTOST * V_TAXAALIQUOTA),0)),
                               VRADICFECP  = VRADICFECP  + ROUND((V_VRCALCULADO * (VRADICALIQFECP / 100)),2)
                         WHERE (CDFILIAL     = P_FILIAL)                   AND
                               (NRLANCTONF   = P_LANCTONF)                 AND
                               (NRSEQITPROD  = C_ITEMPROIMPOS.NRSEQITPROD) AND
                               (CDIMPOSTO    = C_ITEMPROIMPOS.CDIMPOSTO)   AND
                               (NRITPROIMPOS = C_ITEMPROIMPOS.NRITPROIMPOS);
                     ELSE
                        UPDATE ITEMPROIMPOS
                           SET VRCONTITIMP  = VRCONTITIMP  + (V_PRODUENCARGO * V_TAXABASECALC),
                               VRBASECALCIT = VRBASECALCIT + ((V_PRODUENCARGO * V_TAXABASECALC) / (1 - ((C_ITEMPROIMPOS.VRALIQINTEDEST + C_ITEMPROIMPOS.VRALIQFCP) / 100))),
                               VRIMPOSTOIT  = (VRIMPOSTOIT  + (((V_PRODUENCARGO * V_TAXABASECALC) / (1 - ((C_ITEMPROIMPOS.VRALIQINTEDEST + C_ITEMPROIMPOS.VRALIQFCP) / 100))) * V_TAXAALIQUOTA)) - (((V_VRIMPOSTOST * V_TAXABASECALC) / (1 - ((C_ITEMPROIMPOS.VRALIQINTEDEST + C_ITEMPROIMPOS.VRALIQFCP) / 100))) * V_TAXAALIQUOTA),
                               VRIMPOSTOVISUIT = DECODE(V_IDPERVISIMPSCRE, 'S', (VRIMPOSTOIT  + ((V_PRODUENCARGO * V_TAXABASECALC) * V_TAXAALIQUOTA)) - ((V_VRIMPOSTOST * V_TAXABASECALC) * V_TAXAALIQUOTA),  DECODE(CDFISCALIT , '1', (VRIMPOSTOIT  + ((V_PRODUENCARGO * V_TAXABASECALC) * V_TAXAALIQUOTA)) - ((V_VRIMPOSTOST * V_TAXABASECALC) * V_TAXAALIQUOTA),0)),
                               VRADICFECP  = VRADICFECP  + ROUND((V_PRODUENCARGO * (VRADICALIQFECP / 100) * V_TAXABASECALC),2)
                         WHERE (CDFILIAL     = P_FILIAL)                   AND
                               (NRLANCTONF   = P_LANCTONF)                 AND
                               (NRSEQITPROD  = C_ITEMPROIMPOS.NRSEQITPROD) AND
                               (CDIMPOSTO    = C_ITEMPROIMPOS.CDIMPOSTO)   AND
                               (NRITPROIMPOS = C_ITEMPROIMPOS.NRITPROIMPOS);
                     END IF;
                  END IF;
               END IF;

               /* ROTINA PARA RECALCULAR O DIFERIMENTO DO IMPOSTO */
               BEGIN
                  SELECT MAX(VRIMPOSTOOPERAIT), MAX(VRPERDIFEREIT)
                    INTO V_VRIMPOSTOOPERAIT, V_VRPERDIFEREIT
                    FROM ITEMPROIMPOS
                   WHERE (CDFILIAL     = P_FILIAL)                    AND
                         (NRLANCTONF   = P_LANCTONF)                  AND
                         (NRSEQITPROD  = C_ITEMPROIMPOS.NRSEQITPROD)  AND
                         (CDIMPOSTO    = C_ITEMPROIMPOS.CDIMPOSTO)    AND
                         (NRITPROIMPOS = C_ITEMPROIMPOS.NRITPROIMPOS) AND
                         (VRPERDIFEREIT <> 0);
               EXCEPTION
                  When No_Data_Found Then
                     V_VRIMPOSTOOPERAIT := 0; V_VRPERDIFEREIT := 0;
               END;

               IF V_VRPERDIFEREIT <> 0 THEN
                  V_VRIMPOSTOOPERAIT := ROUND((V_VRIMPOSTOOPERAIT + ((ROUND(V_PRODUENCARGO, 2) * V_TAXABASECALC) * V_TAXAALIQUOTA)) - ((V_VRIMPOSTOST * V_TAXABASECALC) * V_TAXAALIQUOTA),2);
                  V_VRIMPOSTODIFERIT := ROUND((V_VRIMPOSTOOPERAIT * V_VRPERDIFEREIT/100), 2);

                  UPDATE ITEMPROIMPOS
                     SET VRIMPOSTOOPERAIT = V_VRIMPOSTOOPERAIT,
                         VRIMPOSTODIFERIT = V_VRIMPOSTODIFERIT,
                         VRIMPOSTOIT = (V_VRIMPOSTOOPERAIT - V_VRIMPOSTODIFERIT),
                         VRIMPOSTOVISUIT = (V_VRIMPOSTOOPERAIT - V_VRIMPOSTODIFERIT)
                   WHERE (CDFILIAL     = P_FILIAL)                    AND
                         (NRLANCTONF   = P_LANCTONF)                  AND
                         (NRSEQITPROD  = C_ITEMPROIMPOS.NRSEQITPROD)  AND
                         (CDIMPOSTO    = C_ITEMPROIMPOS.CDIMPOSTO)    AND
                         (NRITPROIMPOS = C_ITEMPROIMPOS.NRITPROIMPOS) AND
                         (VRPERDIFEREIT <> 0);

               END IF;
            END LOOP;
         END IF;
      END LOOP;

      /* ROTINA PARA REALIZAR RATEIO DOS ENCARGOS PARAMETRIZADOS POR PESO LÍQUIDO DOS PRODUTOS*/
      IF NOT (V_ENCARGOLIQUIDO = 'N') THEN
         FOR C_ITEMENCARGO IN (SELECT IE.CDENCARGO AS CDENCARGO, VRITEMENCA, IDENCARGO,
                                      EN.CDCTBLENTREN, EN.CDCTBLSAIDEN
                               FROM ITEMENCARGO IE, ENCARGO EN
                               WHERE (IE.CDFILIAL   = P_FILIAL)     AND
                                     (IE.NRLANCTONF = P_LANCTONF)   AND
                                     (IE.VRITEMENCA > 0)            AND
                                     (EN.CDENCARGO  = IE.CDENCARGO) AND
                                     ((V_ENCARGOLIQUIDO = 'T') OR (INSTR(V_ENCARGOLIQUIDO, IE.CDENCARGO) > 0 ))
                                     ) LOOP
            V_TOTAPRODENCA := 0;

            FOR C_VRLIQRATEIO IN (SELECT DISTINCT(IP.NRSEQITPROD) AS NRSEQITPROD, (VRTOTAITEM - VRDESCITEM) AS VRLIQUIDOPROD,
                                         (PR.VRPESOLIQUPR * IP.QTITEMPROD) AS VRLIQUIDO
                                  FROM ITEMPRODUTO IP, ITEMPROIMPOS II, PRODUTO PR
                                  WHERE (IP.CDFILIAL    = P_FILIAL)       AND
                                        (IP.NRLANCTONF  = P_LANCTONF)     AND
                                        (II.CDFILIAL    = IP.CDFILIAL)    AND
                                        (II.NRLANCTONF  = IP.NRLANCTONF)  AND
                                        (II.NRSEQITPROD = IP.NRSEQITPROD) AND
                                        (IP.CDPRODUTO   = PR.CDPRODUTO)   AND

                                        (NVL(PR.VRPESOLIQUPR, 0) > 0)     AND
                                        (EXISTS(SELECT BC.CDIMPOSTO
                                                FROM BASECALC BC
                                                WHERE (BC.CDENCARGO = C_ITEMENCARGO.CDENCARGO) AND
                                                      (BC.CDIMPOSTO = II.CDIMPOSTO)            AND
                                                      (BC.CDIMPOSTO IN (SELECT B.CDIMPOSTO
                                                                       FROM BASECALC B
                                                                       WHERE B.CDENCARGO = C_ITEMENCARGO.CDENCARGO))))) LOOP

               IF NOT (C_VRLIQRATEIO.VRLIQUIDO IS NULL) THEN
                  V_TOTAPRODENCA := V_TOTAPRODENCA + C_VRLIQRATEIO.VRLIQUIDO;
               END IF;
            END LOOP;

            IF V_TOTAPRODENCA = 0 THEN
               SELECT SUM(QTITEMPROD * VRPESOLIQUPR)
                 INTO V_TOTAPRODENCA
                 FROM ITEMPRODUTO IP, PRODUTO PR
                WHERE (IP.CDFILIAL   = P_FILIAL)
                  AND (IP.NRLANCTONF = P_LANCTONF)
                  AND (IP.CDPRODUTO    = PR.CDPRODUTO)
                  AND (NVL(PR.VRPESOLIQUPR, 0) > 0);

               IF NOT V_TOTAPRODENCA IS NULL THEN
                  FOR C_ATUAVRCONT IN (SELECT IP.NRSEQITPROD, (VRTOTAITEM - VRDESCITEM) AS VRLIQUIDO,
                                             (PR.VRPESOLIQUPR * IP.QTITEMPROD) AS PESOTOTALPROD
                                       FROM ITEMPRODUTO IP, PRODUTO PR
                                       WHERE (IP.CDFILIAL    = P_FILIAL)
                                         AND (IP.NRLANCTONF  = P_LANCTONF)
                                         AND (IP.CDPRODUTO    = PR.CDPRODUTO)
                                         AND (NVL(PR.VRPESOLIQUPR, 0) > 0)) LOOP

                     IF (C_ITEMENCARGO.IDENCARGO = w_A) THEN
                        V_VRBRUTO  := (C_ITEMENCARGO.VRITEMENCA/V_TOTAPRODENCA);
                     ELSIF (C_ITEMENCARGO.IDENCARGO = w_D) THEN
                        V_VRBRUTO  := - (C_ITEMENCARGO.VRITEMENCA/V_TOTAPRODENCA);
                     ELSE
                        V_VRBRUTO := 0;
                     END IF;

                     IF (C_ITEMENCARGO.CDCTBLSAIDEN IS NULL) THEN
                        V_VRCONTAB := V_VRBRUTO;
                     ELSE
                        V_VRCONTAB := 0;
                     END IF;

                     IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                        UPDATE ITEMPRODUTO
                        SET VRBRUTITEM = TRUNC(VRBRUTITEM + (V_VRBRUTO  * C_ATUAVRCONT.PESOTOTALPROD),2),
                            VRCONTITEM = TRUNC(VRCONTITEM + (V_VRCONTAB * C_ATUAVRCONT.PESOTOTALPROD),2)
                        WHERE CDFILIAL    = P_FILIAL   AND
                              NRLANCTONF  = P_LANCTONF AND
                              NRSEQITPROD = C_ATUAVRCONT.NRSEQITPROD;
                     ELSE
                        UPDATE ITEMPRODUTO
                        SET VRBRUTITEM = VRBRUTITEM + (V_VRBRUTO  * C_ATUAVRCONT.PESOTOTALPROD),
                            VRCONTITEM = VRCONTITEM + (V_VRCONTAB * C_ATUAVRCONT.PESOTOTALPROD)
                        WHERE CDFILIAL    = P_FILIAL   AND
                              NRLANCTONF  = P_LANCTONF AND
                              NRSEQITPROD = C_ATUAVRCONT.NRSEQITPROD;
                     END IF;
                  END LOOP;
               END IF;
            ELSE
               FOR C_ATUAVRCONT IN (SELECT DISTINCT(IP.NRSEQITPROD) AS NRSEQITPROD, (VRTOTAITEM - VRDESCITEM) AS VRLIQUIDO,
                                         (PR.VRPESOLIQUPR * IP.QTITEMPROD) AS PESOTOTALPROD
                                    FROM ITEMPRODUTO IP, ITEMPROIMPOS II, PRODUTO PR
                                    WHERE (IP.CDFILIAL    = P_FILIAL)       AND
                                          (IP.NRLANCTONF  = P_LANCTONF)     AND
                                          (II.CDFILIAL    = IP.CDFILIAL)    AND
                                          (II.NRLANCTONF  = IP.NRLANCTONF)  AND
                                          (II.NRSEQITPROD = IP.NRSEQITPROD) AND
                                          (IP.CDPRODUTO   = PR.CDPRODUTO)   AND
                                          (NVL(PR.VRPESOLIQUPR, 0) > 0)     AND
                                          (EXISTS(SELECT BC.CDIMPOSTO
                                                  FROM BASECALC BC
                                                  WHERE (BC.CDENCARGO = C_ITEMENCARGO.CDENCARGO) AND
                                                        (BC.CDIMPOSTO = II.CDIMPOSTO)            AND
                                                        (BC.CDIMPOSTO IN (SELECT B.CDIMPOSTO
                                                                          FROM BASECALC B
                                                                          WHERE B.CDENCARGO = C_ITEMENCARGO.CDENCARGO))))) LOOP

                  IF (C_ITEMENCARGO.IDENCARGO = w_A) THEN
                     V_VRBRUTO  := (C_ITEMENCARGO.VRITEMENCA/V_TOTAPRODENCA);
                  ELSIF (C_ITEMENCARGO.IDENCARGO = w_D) THEN
                     V_VRBRUTO  := - (C_ITEMENCARGO.VRITEMENCA/V_TOTAPRODENCA);
                  ELSE
                     V_VRBRUTO := 0;
                  END IF;

                  IF (C_ITEMENCARGO.CDCTBLSAIDEN IS NULL) THEN
                     V_VRCONTAB := V_VRBRUTO;
                  ELSE
                     V_VRCONTAB := 0;
                  END IF;

                  IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                     UPDATE ITEMPRODUTO
                     SET VRBRUTITEM = TRUNC(VRBRUTITEM + (V_VRBRUTO  * C_ATUAVRCONT.PESOTOTALPROD),2),
                         VRCONTITEM = TRUNC(VRCONTITEM + (V_VRCONTAB * C_ATUAVRCONT.PESOTOTALPROD),2)
                     WHERE CDFILIAL    = P_FILIAL   AND
                           NRLANCTONF  = P_LANCTONF AND
                           NRSEQITPROD = C_ATUAVRCONT.NRSEQITPROD;
                  ELSE
                     UPDATE ITEMPRODUTO
                     SET VRBRUTITEM = VRBRUTITEM + (V_VRBRUTO  * C_ATUAVRCONT.PESOTOTALPROD),
                         VRCONTITEM = VRCONTITEM + (V_VRCONTAB * C_ATUAVRCONT.PESOTOTALPROD)
                     WHERE CDFILIAL    = P_FILIAL   AND
                           NRLANCTONF  = P_LANCTONF AND
                           NRSEQITPROD = C_ATUAVRCONT.NRSEQITPROD;
                  END IF;
               END LOOP;

               FOR C_ITEMPROIMPOS IN (SELECT II.NRSEQITPROD,
                                             II.NRITPROIMPOS,
                                             II.CDIMPOSTO,
                                             II.VRPERREDBCIT,
                                             II.VRALIQITEM,
                                             II.VRPARDEDIT,
                                             II.IDTRIMPSTII,
                                             (VRTOTAITEM - VRDESCITEM) AS VRLIQUIDO,
                                             NVL(II.VRALIQINTEDEST, 0) AS VRALIQINTEDEST,
                                             NVL(II.VRALIQFCP, 0) AS VRALIQFCP,
                                             NVL(IP.IDUTILBCPMC, 'N') AS IDUTILBCPMC,
                                             I.CDIMPOSTONFE,
                                             NVL(II.IDCONSDIFALIQ, 'N') AS IDCONSDIFALIQ,
                                             II.VRIMPOSTOREP,
                                             II.VRPERREDBCSTIT,
                                             (PR.VRPESOLIQUPR * IP.QTITEMPROD) AS PESOTOTALPROD,
                                             BC.IDTRATIMPOBCENC, II.VRCARGAEXPRESSA
                                        FROM ITEMPROIMPOS II, ITEMPRODUTO IP, BASECALC BC, IMPOSTO I, PRODUTO PR
                                       WHERE (II.CDFILIAL = P_FILIAL)
                                         AND (II.NRLANCTONF = P_LANCTONF)
                                         AND (IP.CDFILIAL = P_FILIAL)
                                         AND (IP.NRLANCTONF = P_LANCTONF)
                                         AND (IP.NRSEQITPROD = II.NRSEQITPROD)
                                         AND (PR.CDPRODUTO    = IP.CDPRODUTO)            
                                         AND (NVL(PR.VRPESOLIQUPR, 0) > 0)
                                         AND (BC.CDIMPOSTO = II.CDIMPOSTO)
                                         AND (II.CDIMPOSTO = I.CDIMPOSTO)
                                         AND (BC.CDENCARGO = C_ITEMENCARGO.CDENCARGO)
                                       ORDER BY II.NRSEQITPROD,
                                             II.NRITPROIMPOS,
                                             II.CDIMPOSTO) LOOP

                  IF NOT((C_ITEMPROIMPOS.IDUTILBCPMC = W_S) AND (C_ITEMPROIMPOS.CDIMPOSTONFE = '80')) OR (C_ITEMPROIMPOS.IDUTILBCPMC <> W_S) THEN
                     IF (C_ITEMPROIMPOS.IDCONSDIFALIQ <> W_S) AND (C_ITEMPROIMPOS.VRIMPOSTOREP IS NULL) THEN

                        SELECT SUM(QTITEMPROD * VRPESOLIQUPR)
                          INTO V_TOTAPRENIMPO
                          FROM ITEMPRODUTO IP, PRODUTO PR
                         WHERE IP.CDFILIAL   = P_FILIAL
                           AND IP.NRLANCTONF = P_LANCTONF
                           AND IP.CDPRODUTO  = PR.CDPRODUTO
                           AND (NVL(PR.VRPESOLIQUPR, 0) > 0);

                        IF (V_TOTAPRODENCA <> 0) THEN
                           IF (NVL(C_ITEMPROIMPOS.IDTRATIMPOBCENC, C_ITEMENCARGO.IDENCARGO) = w_A) THEN
                              V_PRODUENCARGO := +(C_ITEMENCARGO.VRITEMENCA/V_TOTAPRENIMPO)*C_ITEMPROIMPOS.PESOTOTALPROD;
                           ELSIF (NVL(C_ITEMPROIMPOS.IDTRATIMPOBCENC, C_ITEMENCARGO.IDENCARGO) = w_D) THEN
                              V_PRODUENCARGO := -(C_ITEMENCARGO.VRITEMENCA/V_TOTAPRENIMPO)*C_ITEMPROIMPOS.PESOTOTALPROD;
                           ELSE
                              V_PRODUENCARGO := 0;
                           END IF;
                        END IF;

                        V_IDVRIMPSTRIB := null;
                        BEGIN
                           SELECT CASE COUNT(*) WHEN 0 THEN 'M' ELSE 'R' END
                             INTO V_MAJORAOUREDUZ
                             FROM ITEMPROIMPOS
                            WHERE CDFILIAL = P_FILIAL
                              AND NRLANCTONF = P_LANCTONF
                              AND NRSEQITPROD = C_ITEMPROIMPOS.NRSEQITPROD
                              AND CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO
                              AND NRITPROIMPOS = w_2;
                        EXCEPTION
                           WHEN NO_DATA_FOUND THEN
                              V_MAJORAOUREDUZ := 'M';
                        END;

                        V_VRIMPOSTOST := 0;
                        IF V_MAJORAOUREDUZ = 'R' THEN
                           V_TAXABASECALC := (100 - C_ITEMPROIMPOS.VRPERREDBCIT)/100;
                           V_TAXAALIQUOTA := (C_ITEMPROIMPOS.VRALIQITEM/100);
                        ELSE
                           V_TAXABASECALC :=(100 - NVL(C_ITEMPROIMPOS.VRPERREDBCSTIT, 0))/100; 
                           V_PRODUENCARGO :=  (V_PRODUENCARGO * V_TAXABASECALC); /*Calcular o valor do encargo retirando redução da base para no update abaixo utilize o valor adicionando a majoração*/
                           V_TAXABASECALC := 1 + (C_ITEMPROIMPOS.VRPERREDBCIT)/100;
                           V_TAXAALIQUOTA := (C_ITEMPROIMPOS.VRALIQITEM/100);

                           SELECT NVL(MAX(IDVRIMPSTRIB), 'N')
                             INTO V_IDVRIMPSTRIB
                             FROM ITEMPROIMPOS I, IMPOSTO II
                            WHERE (CDFILIAL     = P_FILIAL)
                              AND (NRLANCTONF   = P_LANCTONF)
                              AND (NRSEQITPROD  = C_ITEMPROIMPOS.NRSEQITPROD) 
                              AND (INSTR(V_CDIMPOSTRIB,II.CDIMPOSTO||'_') > 0)
                              AND (I.CDIMPOSTO = II.CDIMPOSTO);

                           IF (C_ITEMPROIMPOS.IDTRIMPSTII <> w_1) AND (NVL(V_IDVRIMPSTRIB,w_N) = w_S) THEN
                              BEGIN
                                 SELECT NVL(MAX(VRIMPOSTOIT),0)
                                 INTO   V_VRIMPOSTOST
                                 FROM ITEMPROIMPOS I
                                 WHERE (CDFILIAL     = P_FILIAL)                    AND
                                       (NRLANCTONF   = P_LANCTONF)                  AND
                                       (INSTR(V_CDIMPOSTRIB,CDIMPOSTO||'_') > 0)    AND
                                       (NRITPROIMPOS = C_ITEMPROIMPOS.NRITPROIMPOS) AND
                                       (NRSEQITPROD  = C_ITEMPROIMPOS.NRSEQITPROD); 
                              EXCEPTION
                                 WHEN NO_DATA_FOUND THEN BEGIN
                                    V_VRIMPOSTOST := 0;
                                 END;
                              END;
                           END IF;
                        END IF;

                        V_ICMS := 'N';
                        FOR C_ICMS IN (SELECT CDIMPOSTO
                                         FROM IMPOSTONFE N, IMPOSTO I
                                        WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                                          AND N.CDIMPOSTONFE = '00'
                                          AND I.CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO)
                        LOOP
                           V_ICMS := 'S';
                        END LOOP;

                        IF (V_ICMS = 'S') AND (C_ITEMPROIMPOS.VRCARGAEXPRESSA > 0) THEN
                           V_VRCALCULADO := ((V_PRODUENCARGO / (1 - (C_ITEMPROIMPOS.VRCARGAEXPRESSA / 100))) * ((C_ITEMPROIMPOS.VRCARGAEXPRESSA / 100) / V_TAXAALIQUOTA));
                           UPDATE ITEMPROIMPOS
                              SET VRCONTITIMP  = VRCONTITIMP  + (V_PRODUENCARGO * V_TAXABASECALC),
                                  VRBASECALCIT = VRBASECALCIT + (V_VRCALCULADO / (1 - ((C_ITEMPROIMPOS.VRALIQINTEDEST + C_ITEMPROIMPOS.VRALIQFCP) / 100))),
                                  VRIMPOSTOIT  = (VRIMPOSTOIT  + ((V_VRCALCULADO / (1 - ((C_ITEMPROIMPOS.VRALIQINTEDEST + C_ITEMPROIMPOS.VRALIQFCP) / 100))) * V_TAXAALIQUOTA)) - ((V_VRIMPOSTOST / (1 - ((C_ITEMPROIMPOS.VRALIQINTEDEST + C_ITEMPROIMPOS.VRALIQFCP) / 100))) * V_TAXAALIQUOTA),
                                  VRIMPOSTOVISUIT = DECODE(V_IDPERVISIMPSCRE, 'S', (VRIMPOSTOIT  + (V_VRCALCULADO * V_TAXAALIQUOTA)) - (V_VRIMPOSTOST * V_TAXAALIQUOTA),  DECODE(CDFISCALIT , '1', (VRIMPOSTOIT  + (V_VRCALCULADO * V_TAXAALIQUOTA)) - (V_VRIMPOSTOST * V_TAXAALIQUOTA),0)),
                                  VRADICFECP  = VRADICFECP  + ROUND((V_VRCALCULADO * (VRADICALIQFECP / 100)),2)
                            WHERE (CDFILIAL     = P_FILIAL)                   AND
                                  (NRLANCTONF   = P_LANCTONF)                 AND
                                  (NRSEQITPROD  = C_ITEMPROIMPOS.NRSEQITPROD) AND
                                  (CDIMPOSTO    = C_ITEMPROIMPOS.CDIMPOSTO)   AND
                                  (NRITPROIMPOS = C_ITEMPROIMPOS.NRITPROIMPOS);
                        ELSE
                           UPDATE ITEMPROIMPOS
                              SET VRCONTITIMP  = VRCONTITIMP  + (V_PRODUENCARGO * V_TAXABASECALC),
                                  VRBASECALCIT = VRBASECALCIT + ((V_PRODUENCARGO * V_TAXABASECALC) / (1 - ((C_ITEMPROIMPOS.VRALIQINTEDEST + C_ITEMPROIMPOS.VRALIQFCP) / 100))),
                                  VRIMPOSTOIT  = (VRIMPOSTOIT  + (((V_PRODUENCARGO * V_TAXABASECALC) / (1 - ((C_ITEMPROIMPOS.VRALIQINTEDEST + C_ITEMPROIMPOS.VRALIQFCP) / 100))) * V_TAXAALIQUOTA)) - (((V_VRIMPOSTOST * V_TAXABASECALC) / (1 - ((C_ITEMPROIMPOS.VRALIQINTEDEST + C_ITEMPROIMPOS.VRALIQFCP) / 100))) * V_TAXAALIQUOTA),
                                  VRIMPOSTOVISUIT = DECODE(V_IDPERVISIMPSCRE, 'S', (VRIMPOSTOIT  + ((V_PRODUENCARGO * V_TAXABASECALC) * V_TAXAALIQUOTA)) - ((V_VRIMPOSTOST * V_TAXABASECALC) * V_TAXAALIQUOTA),  DECODE(CDFISCALIT , '1', (VRIMPOSTOIT  + ((V_PRODUENCARGO * V_TAXABASECALC) * V_TAXAALIQUOTA)) - ((V_VRIMPOSTOST * V_TAXABASECALC) * V_TAXAALIQUOTA),0)),
                                  VRADICFECP  = VRADICFECP  + ROUND((V_PRODUENCARGO * (VRADICALIQFECP / 100) * V_TAXABASECALC),2)
                            WHERE (CDFILIAL     = P_FILIAL)                   AND
                                  (NRLANCTONF   = P_LANCTONF)                 AND
                                  (NRSEQITPROD  = C_ITEMPROIMPOS.NRSEQITPROD) AND
                                  (CDIMPOSTO    = C_ITEMPROIMPOS.CDIMPOSTO)   AND
                                  (NRITPROIMPOS = C_ITEMPROIMPOS.NRITPROIMPOS);
                        END IF;
                     END IF;
                  END IF;

                  /* ROTINA PARA RECALCULAR O DIFERIMENTO DO IMPOSTO */
                  BEGIN
                     SELECT MAX(VRIMPOSTOOPERAIT), MAX(VRPERDIFEREIT)
                       INTO V_VRIMPOSTOOPERAIT, V_VRPERDIFEREIT
                       FROM ITEMPROIMPOS
                      WHERE (CDFILIAL     = P_FILIAL)                    AND
                            (NRLANCTONF   = P_LANCTONF)                  AND
                            (NRSEQITPROD  = C_ITEMPROIMPOS.NRSEQITPROD)  AND
                            (CDIMPOSTO    = C_ITEMPROIMPOS.CDIMPOSTO)    AND
                            (NRITPROIMPOS = C_ITEMPROIMPOS.NRITPROIMPOS) AND
                            (VRPERDIFEREIT <> 0);
                  EXCEPTION
                     When No_Data_Found Then
                        V_VRIMPOSTOOPERAIT := 0; V_VRPERDIFEREIT := 0;
                  END;

                  IF V_VRPERDIFEREIT <> 0 THEN
                     V_VRIMPOSTOOPERAIT := ROUND((V_VRIMPOSTOOPERAIT + ((ROUND(V_PRODUENCARGO, 2) * V_TAXABASECALC) * V_TAXAALIQUOTA)) - ((V_VRIMPOSTOST * V_TAXABASECALC) * V_TAXAALIQUOTA),2);
                     V_VRIMPOSTODIFERIT := ROUND((V_VRIMPOSTOOPERAIT * V_VRPERDIFEREIT/100), 2);

                     UPDATE ITEMPROIMPOS
                        SET VRIMPOSTOOPERAIT = V_VRIMPOSTOOPERAIT,
                            VRIMPOSTODIFERIT = V_VRIMPOSTODIFERIT,
                            VRIMPOSTOIT = (V_VRIMPOSTOOPERAIT - V_VRIMPOSTODIFERIT),
                            VRIMPOSTOVISUIT = (V_VRIMPOSTOOPERAIT - V_VRIMPOSTODIFERIT)
                      WHERE (CDFILIAL     = P_FILIAL)                    AND
                            (NRLANCTONF   = P_LANCTONF)                  AND
                            (NRSEQITPROD  = C_ITEMPROIMPOS.NRSEQITPROD)  AND
                            (CDIMPOSTO    = C_ITEMPROIMPOS.CDIMPOSTO)    AND
                            (NRITPROIMPOS = C_ITEMPROIMPOS.NRITPROIMPOS) AND
                            (VRPERDIFEREIT <> 0);

                  END IF;
               END LOOP;
            END IF;
         END LOOP;
      END IF;
      /* ROTINA PARA REALIZAR RATEIO DOS ENCARGOS PARAMETRIZADOS POR PESO LÍQUIDO DOS PRODUTOS*/

      UPDATE ITEMPROIMPOS
      SET VRIMPOSTOIT = 0,
          VRIMPOSTOVISUIT = 0
      WHERE (NRLANCTONF  = P_LANCTONF) AND
            (CDFILIAL    = P_FILIAL)   AND
            (VRIMPOSTOIT < 0);

      UPDATE ITEMPROIMPOS
      SET VRBASECALCIT = 0
      WHERE (NRLANCTONF  = P_LANCTONF) AND
            (CDFILIAL    = P_FILIAL)   AND
            (VRBASECALCIT < 0);

	  UPDATE ITEMPROIMPOS
      	 SET VRADICFECP = 0
       WHERE (NRLANCTONF  = P_LANCTONF) AND
             (CDFILIAL    = P_FILIAL)   AND
             (VRADICFECP < 0);

      --CÁLCULO DO VALOR DOS IMPOSTOS QUE CONTÉM OUTROS IMPOSTOS NA SUA BASE DE CÁLCULO
      FOR C_PRODUTO IN (SELECT IP.NRSEQITPROD AS NRSEQITPROD,
                               II.CDIMPOSTO,
                               VRPERREDBCIT,
                               VRALIQITEM,
                               VRPARDEDIT, 
                               CDFISCALIT, 
                               VRIMPOSTOIT, 
                               IDTRATIMPO,
                               IM.IDIMPORECUP, 
                               IM.CDCCTBLPASS,
                               IM.CDCCTBLATIV,
                               NRITPROIMPOS,
                               IDTRIMPSTII,
                               IM.IDTIPCONTAB, 
                               II.VRBASECALCIT,
                               II.IDIMPSTCARGTRIB,
                               IP.CDPRODUTO,
                               P.CDARVPROD,
                               IP.IDORIGEMPROD,
                               IM.IDDESCRFONTE,
                               NVL(IP.IDUTILBCPMC, W_N) AS IDUTILBCPMC, 
                               NVL(VRADICFECP, 0) AS VRADICFECP,
                               NVL(VRADICALIQFECP, 0) AS VRADICALIQFECP, 
                               NVL(II.IDCONSDIFALIQ, W_N) AS IDCONSDIFALIQ,
                               II.VRIMPOSTOREP, IM.CDIMPOSTONFE, IM.IDUTMUNIORIG,
                               II.VRPERREDBCSTIT, II.IDNUTREDBCFECP, IP.VRTOTAITEM, IP.VRDESCITEM,
                               II.CDSITUTRIBIT, II.VRCARGAEXPRESSA
                          FROM ITEMPRODUTO IP, ITEMPROIMPOS II, IMPOSTO IM, PRODUTO P
                         WHERE (IP.CDFILIAL = P_FILIAL)
                           AND (IP.NRLANCTONF = P_LANCTONF)
                           AND (II.CDFILIAL = IP.CDFILIAL)
                           AND (II.NRLANCTONF = IP.NRLANCTONF)
                           AND (IM.CDIMPOSTO = II.CDIMPOSTO)
                           AND (II.NRITPROIMPOS = w_1)
                           AND (II.NRSEQITPROD = IP.NRSEQITPROD)
                           AND P.CDPRODUTO = IP.CDPRODUTO
                         ORDER BY NRSEQITPROD, 
                               CDIMPOSTO) LOOP

         V_IDIMPOBCALTPOP := NULL;

         V_FECPPMCAUX := 0;

         SELECT TO_CHAR(MAX('S')) , NVL(SUM(VRIMPOSTOIT),0) AS VRIMPOBCALC
           INTO   V_IDIMPOBCALTPOP, V_TOTAIMPBCALC
           FROM ITEMPRODUTO IP, ITEMPROIMPOS II, BASECALCTPOPER BC , IMPOSTO I
          WHERE (BC.CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)
            AND (IP.CDFILIAL     = P_FILIAL)
            AND (IP.NRLANCTONF   = P_LANCTONF)
            AND (II.NRLANCTONF   = IP.NRLANCTONF)
            AND (II.CDFILIAL     = IP.CDFILIAL)
            AND (IP.NRSEQITPROD  = C_PRODUTO.NRSEQITPROD)
            AND (II.NRSEQITPROD  = C_PRODUTO.NRSEQITPROD)
            AND (II.NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS)
            AND ((SUBSTR(IP.CDSITUTRIBPR,2,2) = BC.CDCSTIMPOTPOP)  OR (BC.CDCSTIMPOTPOP  IS NULL))
            AND ((SUBSTR(IP.CDFISOPEITEM,2,4) = BC.CDCFOPIMPOTPOP) OR (BC.CDCFOPIMPOTPOP IS NULL))
            AND ((C_PRODUTO.CDFISCALIT        = BC.CDFISCIMPOTPOP) OR (BC.CDFISCIMPOTPOP IS NULL))
            AND (BC.IDENTRSAIDOP = 'S')
            AND (BC.CDTIPOOPER = P_TIPOOPER)
            AND (II.CDIMPOSTO = BC.CDIMPOBCALC)
            AND (BC.CDIMPOBCALC = I.CDIMPOSTO)
            AND (NVL(BC.IDTRATIMPOBCTPOP, I.IDTRATIMPO) <> 'D')
            AND ((BC.CDEMPRESABCTP = P_EMPRESA) OR (BC.CDEMPRESABCTP IS NULL));

         IF V_IDIMPOBCALTPOP IS NULL THEN
            SELECT NVL(SUM(VRIMPOSTOIT),0) AS VRIMPOBCALC
              INTO   V_TOTAIMPBCALC
              FROM ITEMPRODUTO IP, ITEMPROIMPOS II, BASECALC BC, IMPOSTO I
             WHERE (BC.CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)    AND
                   (IP.CDFILIAL     = P_FILIAL)               AND
                   (IP.NRLANCTONF   = P_LANCTONF)             AND
                   (II.NRLANCTONF   = IP.NRLANCTONF)          AND
                   (II.CDFILIAL     = IP.CDFILIAL)            AND
                   (IP.NRSEQITPROD  = C_PRODUTO.NRSEQITPROD)  AND
                   (II.NRSEQITPROD  = C_PRODUTO.NRSEQITPROD)  AND
                   (II.NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS) AND
                   ((SUBSTR(IP.CDSITUTRIBPR,2,2) = BC.CDCSTIMPO)  OR (BC.CDCSTIMPO  IS NULL)) AND
                   ((SUBSTR(IP.CDFISOPEITEM,2,4) = BC.CDCFOPIMPO) OR (BC.CDCFOPIMPO IS NULL)) AND
                   ((C_PRODUTO.CDFISCALIT        = BC.CDFISCIMPO) OR (BC.CDFISCIMPO IS NULL)) AND
                   (II.CDIMPOSTO = BC.CDIMPOBCALC) AND
                   (BC.IDTIPOBCALC   = w_I)AND
                   (BC.CDIMPOBCALC = I.CDIMPOSTO)  AND
                   (NVL(BC.IDTRATIMPOBC, I.IDTRATIMPO) <> 'D') AND
                   ((BC.CDEMPRESABC = P_EMPRESA) OR (BC.CDEMPRESABC IS NULL));
         END IF;

         V_IDIMBCALTPOPDE := NULL;

         SELECT TO_CHAR(MAX('S')), (NVL(SUM(VRIMPOSTOIT),0)*-1) AS VRIMPOBCALC
           INTO V_IDIMBCALTPOPDE, V_TOTAIMPBCDES
           FROM ITEMPRODUTO IP, ITEMPROIMPOS II, BASECALCTPOPER BC, IMPOSTO I
          WHERE (BC.CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)
            AND (IP.CDFILIAL     = P_FILIAL)
            AND (IP.NRLANCTONF   = P_LANCTONF)
            AND (II.NRLANCTONF   = IP.NRLANCTONF)
            AND (II.CDFILIAL     = IP.CDFILIAL)
            AND (IP.NRSEQITPROD  = C_PRODUTO.NRSEQITPROD)
            AND (II.NRSEQITPROD  = C_PRODUTO.NRSEQITPROD)
            AND (II.NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS)
            AND ((SUBSTR(IP.CDSITUTRIBPR,2,2) = BC.CDCSTIMPOTPOP)  OR (BC.CDCSTIMPOTPOP  IS NULL))
            AND ((SUBSTR(IP.CDFISOPEITEM,2,4) = BC.CDCFOPIMPOTPOP) OR (BC.CDCFOPIMPOTPOP IS NULL))
            AND ((C_PRODUTO.CDFISCALIT        = BC.CDFISCIMPOTPOP) OR (BC.CDFISCIMPOTPOP IS NULL))
            AND (BC.IDENTRSAIDOP = 'S')
            AND (BC.CDTIPOOPER = P_TIPOOPER)
            AND (II.CDIMPOSTO = BC.CDIMPOBCALC)
            AND (BC.CDIMPOBCALC = I.CDIMPOSTO)
            AND (NVL(BC.IDTRATIMPOBCTPOP, I.IDTRATIMPO) = 'D')
            AND ((BC.CDEMPRESABCTP = P_EMPRESA) OR (BC.CDEMPRESABCTP IS NULL));

         IF V_IDIMBCALTPOPDE IS NULL THEN

            SELECT (NVL(SUM(VRIMPOSTOIT),0)*-1) AS VRIMPOBCALC INTO V_TOTAIMPBCDES
              FROM ITEMPRODUTO IP, ITEMPROIMPOS II, BASECALC BC, IMPOSTO I
             WHERE (BC.CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)    AND
                   (IP.CDFILIAL     = P_FILIAL)               AND
                   (IP.NRLANCTONF   = P_LANCTONF)             AND
                   (II.NRLANCTONF   = IP.NRLANCTONF)          AND
                   (II.CDFILIAL     = IP.CDFILIAL)            AND
                   (IP.NRSEQITPROD  = C_PRODUTO.NRSEQITPROD)  AND
                   (II.NRSEQITPROD  = C_PRODUTO.NRSEQITPROD)  AND
                   (II.NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS) AND
                   ((SUBSTR(IP.CDSITUTRIBPR,2,2) = BC.CDCSTIMPO)  OR (BC.CDCSTIMPO  IS NULL)) AND
                   ((SUBSTR(IP.CDFISOPEITEM,2,4) = BC.CDCFOPIMPO) OR (BC.CDCFOPIMPO IS NULL)) AND
                   ((C_PRODUTO.CDFISCALIT        = BC.CDFISCIMPO) OR (BC.CDFISCIMPO IS NULL)) AND
                   (II.CDIMPOSTO = BC.CDIMPOBCALC) AND
                   (BC.IDTIPOBCALC   = 'I')        AND
                   (BC.CDIMPOBCALC = I.CDIMPOSTO)  AND
                   (NVL(BC.IDTRATIMPOBC, I.IDTRATIMPO) = 'D') AND
                   ((BC.CDEMPRESABC = P_EMPRESA) OR (BC.CDEMPRESABC IS NULL));

         END IF;

         V_VRIMPOSTO := C_PRODUTO.VRIMPOSTOIT;

         /*IMPOSTO PARA SUBSTITUIÇÃO TRIBUTARIA*/
         V_CDIMPOSTRIB  := null;
         V_IDVRIMPSTRIB := null;
         FOR C_ICMSST IN (SELECT CDIMPOSTO
                            FROM IMPOSTO
                           WHERE CDIMPOSTRIB = C_PRODUTO.CDIMPOSTO)
         LOOP
            V_CDIMPOSTRIB := V_CDIMPOSTRIB||C_ICMSST.CDIMPOSTO||'_';
         END LOOP;

         V_VRIMPOSTOST := 0;
         /*Só irá fazer o cálculo de outro imposto compondo a base de cálculo,
           se o valor do mesmo não estiver zerado OU
           se for o imposto de st, pois o icms pode ter sido recalculado(por ter alguem compondo sua bc)
           e o imposto st precisa retirar o valor final do st*/

         IF (NOT(V_TOTAIMPBCALC IS NULL) OR (V_TOTAIMPBCALC <> 0)) OR
            (NOT(V_TOTAIMPBCDES IS NULL) OR (V_TOTAIMPBCDES <> 0)) OR
            (V_CDIMPOSTRIB IS NOT NULL) THEN

            IF V_CDIMPOSTRIB IS NULL THEN
               V_TAXABASECALC := (100 - C_PRODUTO.VRPERREDBCIT)/100;
               V_TAXAALIQUOTA := (C_PRODUTO.VRALIQITEM/100);
               V_VRIMPOSTO    := V_VRIMPOSTO + (((V_TOTAIMPBCALC+V_TOTAIMPBCDES) * V_TAXABASECALC) * V_TAXAALIQUOTA);


               IF C_PRODUTO.VRIMPOSTOREP IS NULL THEN
                  /* ROTINA PARA RECALCULAR O DIFERIMENTO DO IMPOSTO */
                  IF (NVL(V_TOTAIMPBCALC, 0) > 0) OR (NVL(V_TOTAIMPBCDES, 0) <> 0) THEN
                     IF (C_PRODUTO.CDIMPOSTONFE = '00') AND (C_PRODUTO.VRCARGAEXPRESSA > 0) THEN
                        V_TOTAIMPBCALC := ((V_TOTAIMPBCALC / (1 - (C_PRODUTO.VRCARGAEXPRESSA / 100))) * ((C_PRODUTO.VRCARGAEXPRESSA / 100) / V_TAXAALIQUOTA));
                        V_TOTAIMPBCDES := ((V_TOTAIMPBCDES / (1 - (C_PRODUTO.VRCARGAEXPRESSA / 100))) * ((C_PRODUTO.VRCARGAEXPRESSA / 100) / V_TAXAALIQUOTA));
                        UPDATE ITEMPROIMPOS
                           SET VRBASECALCIT = VRBASECALCIT + (V_TOTAIMPBCALC+V_TOTAIMPBCDES),
                               VRIMPOSTOIT  = ((VRBASECALCIT + (V_TOTAIMPBCALC+V_TOTAIMPBCDES)) * V_TAXAALIQUOTA),
                               VRIMPOSTOVISUIT = DECODE(V_IDPERVISIMPSCRE, 'S', ((VRBASECALCIT + (V_TOTAIMPBCALC+V_TOTAIMPBCDES)) * V_TAXAALIQUOTA), DECODE(CDFISCALIT, '1', ((VRBASECALCIT + (V_TOTAIMPBCALC+V_TOTAIMPBCDES)) * V_TAXAALIQUOTA), 0)),
                               VRADICFECP  = VRADICFECP + ROUND(((V_TOTAIMPBCALC+V_TOTAIMPBCDES) * (VRADICALIQFECP/100)), 2)
                         WHERE (CDFILIAL     = P_FILIAL)              AND
                               (NRLANCTONF   = P_LANCTONF)            AND
                               (NRSEQITPROD  = C_PRODUTO.NRSEQITPROD) AND
                               (CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)   AND
                               (NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS);
                     ELSE
                        UPDATE ITEMPROIMPOS
                           SET VRBASECALCIT = VRBASECALCIT + ((V_TOTAIMPBCALC+V_TOTAIMPBCDES) * V_TAXABASECALC),
                               VRIMPOSTOIT  = ((VRBASECALCIT + ((V_TOTAIMPBCALC+V_TOTAIMPBCDES) * V_TAXABASECALC)) * V_TAXAALIQUOTA),
                               VRIMPOSTOVISUIT = DECODE(V_IDPERVISIMPSCRE, 'S', ((VRBASECALCIT + ((V_TOTAIMPBCALC+V_TOTAIMPBCDES) * V_TAXABASECALC)) * V_TAXAALIQUOTA), DECODE(CDFISCALIT, '1', ((VRBASECALCIT + ((V_TOTAIMPBCALC+V_TOTAIMPBCDES) * V_TAXABASECALC)) * V_TAXAALIQUOTA), 0)),
                               VRADICFECP  = VRADICFECP + ROUND((((V_TOTAIMPBCALC+V_TOTAIMPBCDES) * V_TAXABASECALC) * (VRADICALIQFECP/100)), 2)
                         WHERE (CDFILIAL     = P_FILIAL)              AND
                               (NRLANCTONF   = P_LANCTONF)            AND
                               (NRSEQITPROD  = C_PRODUTO.NRSEQITPROD) AND
                               (CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)   AND
                               (NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS);
                     END IF;

                     BEGIN
                        SELECT MAX(VRIMPOSTOOPERAIT), MAX(VRPERDIFEREIT)
                          INTO V_VRIMPOSTOOPERAIT, V_VRPERDIFEREIT
                          FROM ITEMPROIMPOS
                         WHERE (CDFILIAL     = P_FILIAL)               AND
                               (NRLANCTONF   = P_LANCTONF)             AND
                               (NRSEQITPROD  = C_PRODUTO.NRSEQITPROD)  AND
                               (CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)    AND
                               (NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS) AND
                               (VRPERDIFEREIT <> 0);
                     EXCEPTION
                        When No_Data_Found Then
                           V_VRIMPOSTOOPERAIT := 0; V_VRPERDIFEREIT := 0;
                     END;

                     IF V_VRPERDIFEREIT <> 0 THEN
                        V_VRIMPOSTOOPERAIT := ROUND(((ROUND((V_TOTAIMPBCALC + V_TOTAIMPBCDES), 2) * V_TAXABASECALC) * V_TAXAALIQUOTA),2);
                        V_VRIMPOSTODIFERIT := ROUND((V_VRIMPOSTOOPERAIT * V_VRPERDIFEREIT/100), 2);

                        UPDATE ITEMPROIMPOS
                           SET VRIMPOSTOOPERAIT = V_VRIMPOSTOOPERAIT,
                               VRIMPOSTODIFERIT = V_VRIMPOSTODIFERIT,
                               VRIMPOSTOIT = (V_VRIMPOSTOOPERAIT - V_VRIMPOSTODIFERIT),
                               VRIMPOSTOVISUIT = (V_VRIMPOSTOOPERAIT - V_VRIMPOSTODIFERIT)
                         WHERE (CDFILIAL     = P_FILIAL)               AND
                               (NRLANCTONF   = P_LANCTONF)             AND
                               (NRSEQITPROD  = C_PRODUTO.NRSEQITPROD)  AND
                               (CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)    AND
                               (NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS) AND
                               (VRPERDIFEREIT <> 0);

                     END IF;
                  END IF;   
               END IF;
            ELSE
               V_VRIMPOSST   := 0;
               V_VRIMPOSTOST := 0;
               V_VRADICFECPSTAUX := 0;

               FOR C_SUBSTRIB IN (SELECT NVL(IDVRIMPSTRIB, 'N') IDVRIMPSTRIB, I.CDIMPOSTO
                                    FROM ITEMPROIMPOS I, IMPOSTO II
                                   WHERE (CDFILIAL     = P_FILIAL)
                                     AND (NRLANCTONF   = P_LANCTONF)
                                     AND (NRSEQITPROD  = C_PRODUTO.NRSEQITPROD)
                                     AND (NRITPROIMPOS = '1')
                                     AND (INSTR(V_CDIMPOSTRIB,II.CDIMPOSTO||'_') > 0)
                                     AND (I.CDIMPOSTO = II.CDIMPOSTO))
               LOOP
                  IF (C_SUBSTRIB.IDVRIMPSTRIB = w_S) THEN
                     Begin
                        SELECT NVL(ROUND(MAX(VRIMPOSTOIT), 2),0), NVL(ROUND(MAX(VRBASECALCIT), 2),0), NVL(ROUND(MAX(VRADICFECP), 2),0)
                        INTO   V_VRIMPOSST, V_VRBASEICMS, V_VRADICFECPSTAUX
                        FROM ITEMPROIMPOS I
                        WHERE (CDFILIAL     = P_FILIAL)                   AND
                              (NRLANCTONF   = P_LANCTONF)                 AND
                              (NRSEQITPROD  = C_PRODUTO.NRSEQITPROD)  AND
                              (CDIMPOSTO    = C_SUBSTRIB.CDIMPOSTO)       AND
                              (INSTR(V_CDIMPOSTRIB,CDIMPOSTO||'_') > 0)   AND
                              (NRITPROIMPOS = w_1);
                     Exception
                        When No_Data_Found Then
                           V_VRIMPOSST := 0;
                           V_VRBASEICMS := 0;
                           V_VRADICFECPSTAUX := 0;
                     End;
                  ELSE
                     V_VRIMPOSST := 0;
                     V_VRBASEICMS := 0;
                     V_VRADICFECPSTAUX := 0;
                  END IF;

                  /*198639, 200299*/
                  IF V_VRBASEICMS > 0 THEN
                     DELETE ALIQTEMP
                      WHERE NRALIQTEMP = V_ALIQTEMP;

                     /* Verifica grupo fiscal */
                     SELECT MAX(IDGRUPFISSRV)
                       INTO V_UTGRUPFISCS
                       FROM IMPOSTO
                      WHERE CDIMPOSTO = C_PRODUTO.CDIMPOSTO;

                     IF V_UTGRUPFISCS = 'S' THEN
                        V_CDGRPFISCSV := NULL;
                        SELECT MAX(CDGRUPOFISC)
                          INTO V_CDGRPFISCSV
                          FROM SERVCLIE SC, SERVICO S
                         WHERE SC.CDFILIAL   = V_CDFILIEMIT AND
                              SC.CDCLIENTE  = P_CLIENTE    AND
                              SC.CDFILIAL   = S.CDFILIAL   AND
                              SC.CDSERVFILI = S.CDSERVFILI AND
                              S.CDPRODUTO   = C_PRODUTO.CDPRODUTO;

                        IF V_CDGRPFISCSV IS NULL THEN
                           SELECT MAX(CDGRUPOFISC)
                             INTO V_CDGRPFISCSV
                             FROM CLIENFILIAL
                           WHERE CDFILIAL   = V_CDFILIEMIT AND
                                CDCLIENTE  = P_CLIENTE;
                        END IF;

                        CONSULTA_ALIQUOTA(C_PRODUTO.CDIMPOSTO, w_S, P_EMPRESA, C_PRODUTO.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                          V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_VRBASEICMS, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRPFISCSV, P_TIPOOPER,
                                          NULL, NULL, NULL, NULL, NULL, NULL, C_PRODUTO.IDORIGEMPROD);

                     ELSE
                        CONSULTA_ALIQUOTA(C_PRODUTO.CDIMPOSTO, w_S, P_EMPRESA, C_PRODUTO.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                          V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_VRBASEICMS, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_TIPOOPER,
                                          NULL, NULL, NULL, NULL, NULL, NULL, C_PRODUTO.IDORIGEMPROD);

                     END IF;

                     BEGIN
                        SELECT NVL(MAX(VRALIQICMSCBSP),0)
                          INTO V_VRALIQICMSCBSP
                          FROM ALIQTEMP
                         WHERE (NRALIQTEMP = V_ALIQTEMP);
                     EXCEPTION
                        WHEN NO_DATA_FOUND THEN
                           V_VRALIQICMSCBSP := 0;
                     END;

                     IF V_VRALIQICMSCBSP > 0 THEN
                        V_VRIMPOSST := V_VRBASEICMS * (V_VRALIQICMSCBSP/100);
                     END IF;

                     DELETE ALIQTEMP
                      WHERE NRALIQTEMP = V_ALIQTEMP;
                  END IF;
                  /*198639, 200299*/

                  V_VRIMPOSTOST := V_VRIMPOSTOST + V_VRIMPOSST;
               END LOOP;



               IF (C_PRODUTO.IDUTILBCPMC = W_S) THEN
                  V_TAXAALIQUOTA := C_PRODUTO.VRALIQITEM / 100;
                  V_VRIMPOSTO := C_PRODUTO.VRBASECALCIT * V_TAXAALIQUOTA;
               ELSIF ((C_PRODUTO.IDCONSDIFALIQ = W_S) OR (C_PRODUTO.VRIMPOSTOREP IS NOT NULL)) THEN  /* Caso esteja cadastrao Valor a ser Repassado, a base de Cálculo e o valor do imposto é calculado de acordo com este cadastro */
                  V_TAXAALIQUOTA := C_PRODUTO.VRALIQITEM / 100;
                  V_VRIMPOSTO := C_PRODUTO.VRIMPOSTOIT;
               ELSE
                  BEGIN
                     SELECT CASE COUNT(*) WHEN 0 THEN 'M' ELSE 'R' END
                       INTO V_MAJORAOUREDUZ
                       FROM ITEMPROIMPOS
                      WHERE CDFILIAL = P_FILIAL 
                        AND NRLANCTONF = P_LANCTONF
                        AND NRSEQITPROD = C_PRODUTO.NRSEQITPROD
                        AND CDIMPOSTO = C_PRODUTO.CDIMPOSTO
                        AND NRITPROIMPOS = w_2;
                  EXCEPTION
                     WHEN NO_DATA_FOUND THEN
                        V_MAJORAOUREDUZ := 'M';
                  END;

                  V_TAXABCSUBSTR := 1;
                  IF (C_PRODUTO.VRPERREDBCSTIT IS NOT NULL) AND (C_PRODUTO.VRPERREDBCSTIT > 0) THEN
                     V_TAXABASECALC := (100 - C_PRODUTO.VRPERREDBCSTIT)/100;
                     V_TAXABCSUBSTR := 1 + (C_PRODUTO.VRPERREDBCIT/100);
                  ELSIF V_MAJORAOUREDUZ = 'R' THEN
                     V_TAXABASECALC := (100 - C_PRODUTO.VRPERREDBCIT)/100;
                  ELSE
                     V_TAXABCSUBSTR := 1 + (C_PRODUTO.VRPERREDBCIT)/100;
                  END IF;

                  V_TAXAALIQUOTA := (C_PRODUTO.VRALIQITEM/100);
                  V_VRIMPOSTO := ((C_PRODUTO.VRBASECALCIT + (((V_TOTAIMPBCALC + V_TOTAIMPBCDES) * V_TAXABASECALC) * V_TAXABCSUBSTR)) * V_TAXAALIQUOTA);
               END IF;

               -- ESSA CONDIÇÃO SERÁ FEITA PORQUE A BASE DE CÁLCULO NÃO SERÁ ALTERADO QUANDO O PRODUTO TIVER CONSIDERANDO 
               -- O DIFERENCIAL DE ALÍQUOTA DO ICMS, ISTO PORQUE A BASE DE CÁLCULO JÁ FOI CALCULADA NA PROCEDURE CONSIDERA_DIFAL_ICMS
               IF ((C_PRODUTO.IDCONSDIFALIQ = W_S) OR (C_PRODUTO.VRIMPOSTOREP IS NOT NULL)) THEN     
                  UPDATE ITEMPROIMPOS
                     SET VRIMPOSTOVISUIT = DECODE(V_IDPERVISIMPSCRE, 'S', (VRIMPOSTOIT), DECODE(CDFISCALIT, '1', (VRIMPOSTOIT),0))
                   WHERE (CDFILIAL     = P_FILIAL)              AND
                         (NRLANCTONF   = P_LANCTONF)            AND
                         (NRSEQITPROD  = C_PRODUTO.NRSEQITPROD) AND
                         (CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)   AND
                         (NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS);
               ELSIF C_PRODUTO.IDIMPSTCARGTRIB <> 'S' THEN
                  IF V_VRIMPOSTOST > V_VRIMPOSTO THEN
                     UPDATE ITEMPROIMPOS
                     SET VRBASECALCIT = VRBASECALCIT + (((V_TOTAIMPBCALC+V_TOTAIMPBCDES) * V_TAXABASECALC) * V_TAXABCSUBSTR),
                         VRIMPOSTOIT  = 0,
                         VRIMPOSTOVISUIT = 0
                     WHERE (CDFILIAL     = P_FILIAL)              AND
                           (NRLANCTONF   = P_LANCTONF)            AND
                           (NRSEQITPROD  = C_PRODUTO.NRSEQITPROD) AND
                           (CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)   AND
                           (NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS);
                     V_VRIMPOSTO := 0;
                  ELSE
                     -- ESSA CONDIÇÃO SERÁ FEITA PORQUE A BASE DE CÁLCULO NÃO SERÁ ALTERADO QUANDO O PRODUTO TIVER PMC,
                     -- ISTO PORQUE A BASE DE CÁLCULO JÁ FOI CALCULADA NA PROCEDURE CALCULA_BC_PMC
                     IF (C_PRODUTO.IDUTILBCPMC = W_S) THEN
                        V_FECPPMCAUX := 0;

                        UPDATE ITEMPROIMPOS
                           SET VRBASECALCIT = VRBASECALCIT,
                               VRIMPOSTOIT  = V_VRIMPOSTO - V_VRIMPOSTOST,
                               VRIMPOSTOVISUIT = DECODE(V_IDPERVISIMPSCRE, 'S', (V_VRIMPOSTO - V_VRIMPOSTOST), DECODE(CDFISCALIT, '1', (V_VRIMPOSTO - V_VRIMPOSTOST),0))
                         WHERE (CDFILIAL     = P_FILIAL)              AND
                               (NRLANCTONF   = P_LANCTONF)            AND
                               (NRSEQITPROD  = C_PRODUTO.NRSEQITPROD) AND
                               (CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)   AND
                               (NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS);
                     ELSE
                     	IF C_PRODUTO.IDNUTREDBCFECP = 'S' THEN
                           V_FECPPMCAUX := ROUND((((V_TOTAIMPBCALC+V_TOTAIMPBCDES) * V_TAXABCSUBSTR) * (C_PRODUTO.VRADICALIQFECP/100)),2);

                           IF V_TAXABASECALC = 1 THEN
                              V_VRFECP := ROUND(((C_PRODUTO.VRBASECALCIT + ((V_TOTAIMPBCALC + V_TOTAIMPBCDES) * V_TAXABCSUBSTR)) * (C_PRODUTO.VRADICALIQFECP/100)),2);
                           ELSE
                              V_TOTAENCBCALC := 0;
                              FOR C_ENCARGO IN (SELECT CDENCARGONFE
                                                  FROM ITEMENCARGO IT, ENCARGO E
                                                 WHERE CDFILIAL = P_FILIAL
                                                   AND NRLANCTONF = P_LANCTONF
                                                   AND IT.CDENCARGO = E.CDENCARGO
                                                   AND VRITEMENCA > 0
                                                   AND CDENCARGONFE IS NOT NULL
                                                   AND EXISTS (SELECT CDENCARGO
                                                                 FROM BASECALC BC
                                                                WHERE E.CDENCARGO = BC.CDENCARGO
                                                                  AND CDIMPOSTO = C_PRODUTO.CDIMPOSTO)) LOOP
                                 SELECT DECODE(C_ENCARGO.CDENCARGONFE, '01', VRFRETEITEM,
                                        DECODE(C_ENCARGO.CDENCARGONFE, '02', VRSEGURITEM,
                                        DECODE(C_ENCARGO.CDENCARGONFE, '03', (VRENCARGODESC * -1),
                                        DECODE(C_ENCARGO.CDENCARGONFE, '04', VROUTRASDESPITEM,
                                        DECODE(C_ENCARGO.CDENCARGONFE, '05', VRDESPADUANEIRA, 0))))) AS VRCOMPBC
                                   INTO V_VRCOMPBC
                                   FROM ITEMPRODUTO
                                  WHERE CDFILIAL = P_FILIAL
                                    AND NRLANCTONF = P_LANCTONF
                                    AND NRSEQITPROD = C_PRODUTO.NRSEQITPROD;

                                 V_TOTAENCBCALC := V_TOTAENCBCALC + NVL(V_VRCOMPBC,0);
                              END LOOP;
                              V_VRFECP := ROUND((((C_PRODUTO.VRTOTAITEM - C_PRODUTO.VRDESCITEM) + V_TOTAENCBCALC + V_TOTAIMPBCALC + V_TOTAIMPBCDES) * V_TAXABCSUBSTR) * (C_PRODUTO.VRADICALIQFECP/100),2);
                           END IF;

                           IF V_VRFECP > 0 THEN
                              V_VRFECP := V_VRFECP - V_VRADICFECPSTAUX;
                           END IF;

                           UPDATE ITEMPROIMPOS
                              SET VRBASECALCIT = VRBASECALCIT + (((V_TOTAIMPBCALC+V_TOTAIMPBCDES) * V_TAXABASECALC) * V_TAXABCSUBSTR),
                                  VRIMPOSTOIT  = V_VRIMPOSTO - V_VRIMPOSTOST,
                                  VRIMPOSTOVISUIT = DECODE(V_IDPERVISIMPSCRE, 'S', (V_VRIMPOSTO - V_VRIMPOSTOST), DECODE(CDFISCALIT, '1', (V_VRIMPOSTO - V_VRIMPOSTOST),0)),
                                  VRADICFECP  = V_VRFECP
                            WHERE (CDFILIAL     = P_FILIAL)              AND
                                  (NRLANCTONF   = P_LANCTONF)            AND
                                  (NRSEQITPROD  = C_PRODUTO.NRSEQITPROD) AND
                                  (CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)   AND
                                  (NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS);
                        ELSE
                           V_FECPPMCAUX := ROUND(((((V_TOTAIMPBCALC+V_TOTAIMPBCDES) * V_TAXABASECALC) * V_TAXABCSUBSTR) * (C_PRODUTO.VRADICALIQFECP/100)),2);
                           V_VRFECP := ROUND(((C_PRODUTO.VRBASECALCIT + (((V_TOTAIMPBCALC + V_TOTAIMPBCDES) * V_TAXABASECALC) * V_TAXABCSUBSTR)) * (C_PRODUTO.VRADICALIQFECP/100)),2);

                           IF V_VRFECP > 0 THEN
                              V_VRFECP := V_VRFECP - V_VRADICFECPSTAUX;
                           END IF;

                           UPDATE ITEMPROIMPOS
                              SET VRBASECALCIT = VRBASECALCIT + (((V_TOTAIMPBCALC+V_TOTAIMPBCDES) * V_TAXABASECALC) * V_TAXABCSUBSTR),
                                  VRIMPOSTOIT  = V_VRIMPOSTO - V_VRIMPOSTOST,
                                  VRIMPOSTOVISUIT = DECODE(V_IDPERVISIMPSCRE, 'S', (V_VRIMPOSTO - V_VRIMPOSTOST), DECODE(CDFISCALIT, '1', (V_VRIMPOSTO - V_VRIMPOSTOST),0)),
                                  VRADICFECP  = V_VRFECP
                            WHERE (CDFILIAL     = P_FILIAL)              AND
                                  (NRLANCTONF   = P_LANCTONF)            AND
                                  (NRSEQITPROD  = C_PRODUTO.NRSEQITPROD) AND
                                  (CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)   AND
                                  (NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS);
                     	END IF;
                     END IF;

                     V_VRIMPOSTO := V_VRIMPOSTO - V_VRIMPOSTOST;
                  END IF;
               END IF;
            END IF;

            /* Rotina para calcular o ICMS ST considerando % carga tributária média */

            IF V_CDIMPOSTRIB IS NOT NULL THEN
               BEGIN
                  SELECT NVL(VRCNAEBC, 0),
                         NVL(VRMVA, 0)
                    INTO V_VRPRODUTOBC,
                         V_VRMVA
                    FROM VRPERCCARGTRIBCNAE
                   WHERE IDENTRSAIDOP = w_S
                     AND CDTIPOOPER   = P_TIPOOPER
                     AND CDPAIS       = V_PAISDEST
                     AND SGESTADO     = V_ESTADEST
                     AND CDCNAE       = V_CDCNAECLIE
                     AND IDOPTANTESN  = V_IDOPTANTESNCLIE;
               EXCEPTION
                  WHEN NO_DATA_FOUND THEN
                     V_VRPRODUTOBC := 0;
                     V_VRMVA := 0;
               END;

               IF V_VRPRODUTOBC = 0 THEN
                  BEGIN
                     SELECT NVL(VRPRODUTOBC, 0)
                       INTO V_VRPRODUTOBC
                       FROM VRPERCCARGTRIB
                      WHERE IDENTRSAIDOP = w_S
                        AND CDTIPOOPER   = P_TIPOOPER
                        AND CDPAIS       = V_PAISDEST
                        AND SGESTADO     = V_ESTADEST
                        AND CDPRODUTO    = C_PRODUTO.CDPRODUTO;
                  EXCEPTION
                     When No_Data_Found Then
                        V_VRPRODUTOBC := 0;
                  END;
               END IF;

               IF (V_VRPRODUTOBC > 0) THEN
                  BEGIN
                     SELECT I.CDIMPOSTO, I.VRIMPOSTOIT, I.VRBASECALCIT
                       INTO V_CDIMPOSTOICMS, V_VRIMPOSTOICMS, V_VRBASECALCICMS
                       FROM IMPOSTONFE N, IMPOSTO P, ITEMPROIMPOS I
                      WHERE N.CDIMPOSTONFE = P.CDIMPOSTONFE
                        AND N.CDIMPOSTONFE = '00'
                        AND I.CDFILIAL     = P_FILIAL
                        AND I.NRLANCTONF   = P_LANCTONF
                        AND I.NRSEQITPROD = C_PRODUTO.NRSEQITPROD
                        AND I.CDIMPOSTO = P.CDIMPOSTO
                        AND NOT P.CDIMPOSTRIB IS NULL
                        AND I.NRITPROIMPOS = '1';
                  EXCEPTION
                     When No_Data_Found Then
                        V_CDIMPOSTOICMS := NULL; V_VRIMPOSTOICMS := 0; V_VRBASECALCICMS := 0;
                  END;

                  DELETE ALIQTEMP
                   WHERE NRALIQTEMP = V_ALIQTEMP;

                  /* Verifica grupo fiscal */
                  SELECT MAX(IDGRUPFISSRV)
                  INTO V_UTGRUPFISCS
                  FROM IMPOSTO
                  WHERE CDIMPOSTO = V_CDIMPOSTOICMS;

                  IF V_UTGRUPFISCS = 'S' THEN
                     V_CDGRPFISCSV := NULL;
                     SELECT MAX(CDGRUPOFISC)
                     INTO V_CDGRPFISCSV
                     FROM SERVCLIE SC, SERVICO S
                     WHERE SC.CDFILIAL   = V_CDFILIEMIT AND
                           SC.CDCLIENTE  = P_CLIENTE    AND
                           SC.CDFILIAL   = S.CDFILIAL   AND
                           SC.CDSERVFILI = S.CDSERVFILI AND
                           S.CDPRODUTO   = C_PRODUTO.CDPRODUTO;

                     IF V_CDGRPFISCSV IS NULL THEN
                        SELECT MAX(CDGRUPOFISC)
                        INTO V_CDGRPFISCSV
                        FROM CLIENFILIAL
                       WHERE CDFILIAL   = V_CDFILIEMIT AND
                             CDCLIENTE  = P_CLIENTE;
                     END IF;

                     CONSULTA_ALIQUOTA(V_CDIMPOSTOICMS, w_S, P_EMPRESA, C_PRODUTO.CDARVPROD, P_INSCESTA, V_PAISDEST,
                                       V_ESTADEST, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRPFISCSV, P_TIPOOPER,
                                       NULL, NULL, NULL, NULL, NULL, NULL, C_PRODUTO.IDORIGEMPROD);

                  ELSE
                     CONSULTA_ALIQUOTA(V_CDIMPOSTOICMS, w_S, P_EMPRESA, C_PRODUTO.CDARVPROD, P_INSCESTA, V_PAISDEST,
                                       V_ESTADEST, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_TIPOOPER,
                                       NULL, NULL, NULL, NULL, NULL, NULL, C_PRODUTO.IDORIGEMPROD);

                  END IF;

                  SELECT NVL(MAX(VRALIQUTMP),0)
                    INTO V_VRALIQUTMPDEST
                    FROM ALIQTEMP
                   WHERE (NRALIQTEMP = V_ALIQTEMP);

                  IF (V_VRALIQUTMPDEST <> 0) THEN
                     IF V_VRMVA > 0 THEN
                        V_VRBASECALCICMS :=  V_VRBASECALCICMS + (V_VRBASECALCICMS * (V_VRMVA/100));
                     END IF;
                     V_IMPOSTOIT  :=  ROUND(V_VRBASECALCICMS * (V_VRPRODUTOBC/100), 2);
                     V_BASECALCTO :=  ROUND(((V_VRIMPOSTOICMS + V_IMPOSTOIT) / (V_VRALIQUTMPDEST/100)),2);

                     UPDATE ITEMPROIMPOS
                        SET VRBASECALCIT = V_BASECALCTO,
                            VRIMPOSTOIT  = V_IMPOSTOIT,
                            VRIMPOSTOVISUIT = DECODE(V_IDPERVISIMPSCRE, 'S', V_IMPOSTOIT, DECODE(CDFISCALIT, '1', V_IMPOSTOIT,0))
                      WHERE (CDFILIAL     = P_FILIAL)              AND
                            (NRLANCTONF   = P_LANCTONF)            AND
                            (NRSEQITPROD  = C_PRODUTO.NRSEQITPROD) AND
                            (CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)   AND
                            (NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS);
                  END IF;

                  DELETE ALIQTEMP
                   WHERE NRALIQTEMP = V_ALIQTEMP;
               END IF;
            END IF;

         END IF;

         V_IMPOCONTAB := 0;

         IF (C_PRODUTO.IDTRATIMPO = w_A) THEN
            IF (((C_PRODUTO.IDIMPORECUP = w_S)  AND (C_PRODUTO.CDFISCALIT = w_1)) OR
                ((C_PRODUTO.IDIMPORECUP <> w_S) AND (C_PRODUTO.CDCCTBLPASS IS NOT NULL))) AND
               (V_CDIMPOSTRIB IS NULL) AND (C_PRODUTO.IDTIPCONTAB = w_D) THEN

               IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                  UPDATE ITEMPRODUTO
                     SET VRBRUTITEM = TRUNC((VRBRUTITEM + V_VRIMPOSTO),2)
                   WHERE CDFILIAL    = P_FILIAL   AND
                         NRLANCTONF  = P_LANCTONF AND
                         NRSEQITPROD = C_PRODUTO.NRSEQITPROD;
               ELSE
                  UPDATE ITEMPRODUTO
                     SET VRBRUTITEM = (VRBRUTITEM + ROUND(V_VRIMPOSTO, 2)) --COLOCADO ROUND(V_VRIMPOSTO, 2) NA 203062
                   WHERE CDFILIAL    = P_FILIAL   AND
                         NRLANCTONF  = P_LANCTONF AND
                         NRSEQITPROD = C_PRODUTO.NRSEQITPROD;
               END IF;
            ELSE
               IF ((V_CDIMPOSTRIB IS NOT NULL) AND (C_PRODUTO.IDTRIMPSTII = w_0)) OR
                   (V_CDIMPOSTRIB IS NULL) THEN
                  IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                     UPDATE ITEMPRODUTO
                        SET VRBRUTITEM = TRUNC((VRBRUTITEM + V_VRIMPOSTO + C_PRODUTO.VRADICFECP + V_FECPPMCAUX), 2),
                            VRCONTITEM = TRUNC((VRCONTITEM + V_VRIMPOSTO + C_PRODUTO.VRADICFECP + V_FECPPMCAUX), 2)
                      WHERE CDFILIAL    = P_FILIAL   AND
                            NRLANCTONF  = P_LANCTONF AND
                            NRSEQITPROD = C_PRODUTO.NRSEQITPROD;
                  ELSE
                     IF V_VRFECP > 0 THEN --203062
                        UPDATE ITEMPRODUTO
                           SET VRBRUTITEM = ROUND(VRBRUTITEM + V_VRIMPOSTO + V_VRFECP, 2),
                               VRCONTITEM = ROUND(VRCONTITEM + V_VRIMPOSTO + V_VRFECP, 2)
                         WHERE CDFILIAL    = P_FILIAL   AND
                               NRLANCTONF  = P_LANCTONF AND
                               NRSEQITPROD = C_PRODUTO.NRSEQITPROD;
                     ELSE
                        UPDATE ITEMPRODUTO
                           SET VRBRUTITEM = ROUND(VRBRUTITEM + V_VRIMPOSTO + C_PRODUTO.VRADICFECP + V_FECPPMCAUX, 2),
                               VRCONTITEM = ROUND(VRCONTITEM + V_VRIMPOSTO + C_PRODUTO.VRADICFECP + V_FECPPMCAUX, 2)
                         WHERE CDFILIAL    = P_FILIAL   AND
                               NRLANCTONF  = P_LANCTONF AND
                               NRSEQITPROD = C_PRODUTO.NRSEQITPROD;
                     END IF;
                  END IF;
               END IF;
            END IF;
         ELSIF (C_PRODUTO.IDTRATIMPO = w_D) THEN
            IF ((C_PRODUTO.IDIMPORECUP = w_S) AND (C_PRODUTO.CDFISCALIT = w_1)) OR
               ((C_PRODUTO.IDIMPORECUP <> w_S) AND (C_PRODUTO.CDCCTBLATIV IS NOT NULL)) AND
               (C_PRODUTO.IDTIPCONTAB = w_D) THEN

               IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                  UPDATE ITEMPRODUTO
                  SET VRBRUTITEM = TRUNC((VRBRUTITEM - V_VRIMPOSTO),2)
                  WHERE CDFILIAL    = P_FILIAL   AND
                        NRLANCTONF  = P_LANCTONF AND
                        NRSEQITPROD = C_PRODUTO.NRSEQITPROD;
               ELSE
                  UPDATE ITEMPRODUTO
                  SET VRBRUTITEM = VRBRUTITEM - V_VRIMPOSTO
                  WHERE CDFILIAL    = P_FILIAL   AND
                        NRLANCTONF  = P_LANCTONF AND
                        NRSEQITPROD = C_PRODUTO.NRSEQITPROD;
               END IF;
            ELSE
               IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                  UPDATE ITEMPRODUTO
                  SET VRBRUTITEM = TRUNC((VRBRUTITEM - V_VRIMPOSTO),2),
                      VRCONTITEM = TRUNC((VRCONTITEM - V_VRIMPOSTO),2)
                  WHERE CDFILIAL    = P_FILIAL   AND
                        NRLANCTONF  = P_LANCTONF AND
                        NRSEQITPROD = C_PRODUTO.NRSEQITPROD;
               ELSE
                  UPDATE ITEMPRODUTO
                  SET VRBRUTITEM = VRBRUTITEM - V_VRIMPOSTO,
                      VRCONTITEM = VRCONTITEM - V_VRIMPOSTO
                  WHERE CDFILIAL    = P_FILIAL   AND
                        NRLANCTONF  = P_LANCTONF AND
                        NRSEQITPROD = C_PRODUTO.NRSEQITPROD;
               END IF;
            END IF;
         ELSIF (C_PRODUTO.IDTRATIMPO = w_R) THEN
            IF (C_PRODUTO.IDIMPORECUP = w_S) THEN
               IF (C_PRODUTO.CDCCTBLATIV IS NULL) OR
                  (C_PRODUTO.CDFISCALIT <> w_1) THEN

                  V_IMPOCONTAB := - V_VRIMPOSTO;
               END IF;
            ELSE
               IF (C_PRODUTO.CDCCTBLATIV IS NULL) THEN
                  V_IMPOCONTAB := - V_VRIMPOSTO;
               ELSE
                  IF C_PRODUTO.IDDESCRFONTE = 'N' THEN
                     V_IMPOCONTAB := - V_VRIMPOSTO;

                     UPDATE ITEMPRODUTO
                     SET VRBRUTITEM = ROUND(VRBRUTITEM - V_VRIMPOSTO,5)
                     WHERE CDFILIAL    = P_FILIAL   AND
                           NRLANCTONF  = P_LANCTONF AND
                           NRSEQITPROD = C_PRODUTO.NRSEQITPROD;
                  END IF;
               END IF;
            END IF;

            IF C_PRODUTO.IDTIPCONTAB = w_D THEN
               IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                  UPDATE ITEMPRODUTO
                  SET VRCONTITEM = TRUNC((VRCONTITEM + V_IMPOCONTAB),2)
                  WHERE CDFILIAL    = P_FILIAL   AND
                        NRLANCTONF  = P_LANCTONF AND
                        NRSEQITPROD = C_PRODUTO.NRSEQITPROD;
               ELSE
                  UPDATE ITEMPRODUTO
                  SET VRCONTITEM = VRCONTITEM + V_IMPOCONTAB
                  WHERE CDFILIAL    = P_FILIAL   AND
                        NRLANCTONF  = P_LANCTONF AND
                        NRSEQITPROD = C_PRODUTO.NRSEQITPROD;
               END IF;
            END IF;

         ELSIF C_PRODUTO.IDTRATIMPO = w_V THEN

            IF (V_ORIGDESTOP = w_L) THEN
               V_IDDESCIMPRECCONT := 'N';
               BEGIN
                  SELECT NVL(IDDESCIMPRECCOFI, 'N')
                    INTO V_IDDESCIMPRECCONT
                    FROM TIPOOPERAC
                   WHERE CDTIPOOPER   = P_TIPOOPER
                     AND IDORIGDESTOP = w_L
                     AND IDENTRSAIDOP = w_S;
               EXCEPTION
                  WHEN NO_DATA_FOUND THEN
                     V_IDDESCIMPRECCONT := 'N';
               END;
            END IF;

            IF (C_PRODUTO.IDIMPORECUP = w_S) AND (V_IDORIGDESTNF = w_L) AND (V_IDDESCIMPRECCONT = 'N')THEN
               IF (C_PRODUTO.CDCCTBLPASS IS NOT NULL) AND
                  (C_PRODUTO.CDFISCALIT = w_1) THEN

                  V_IMPOCONTAB := - V_VRIMPOSTO;
               END IF;
            END IF;

            IF C_PRODUTO.IDTIPCONTAB = w_D THEN
               IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                  UPDATE ITEMPRODUTO
                  SET VRCONTITEM = TRUNC((VRCONTITEM + V_IMPOCONTAB),2)
                  WHERE CDFILIAL    = P_FILIAL   AND
                        NRLANCTONF  = P_LANCTONF AND
                        NRSEQITPROD = C_PRODUTO.NRSEQITPROD;
               ELSE
                  UPDATE ITEMPRODUTO
                  SET VRCONTITEM = VRCONTITEM + V_IMPOCONTAB
                  WHERE CDFILIAL    = P_FILIAL   AND
                        NRLANCTONF  = P_LANCTONF AND
                        NRSEQITPROD = C_PRODUTO.NRSEQITPROD;
               END IF;
            END IF;
         END IF;

         -- EM MG O CÁLCULO DA BASE É REALIZADO DE UMA FORMA DIFERENTE DE ACORDO COM A
         -- ORIENTAÇÃO TRIBUTÁRIA DOLT/SUTRI Nº 003/2016. PARA ESTE PROCESSO É NECESSÁRIO
         -- CALCULAR O IMPOSTO POR DENTRO (ELE COMPONDO A BASE DE CÁLCULO DELE MESMO)

         --200683
         BEGIN
            SELECT NVL(IDCALCDIFALDENT, w_N), NVL(IDCALCSEPARADO, w_N)
              INTO V_IDCALCDENTRO, V_IDCALCSEPARADO
              FROM CALCDIFALIMP C, IMPOSTO I
             WHERE (C.CDIMPOSTO = C_PRODUTO.CDIMPOSTO)
               AND (C.CDPAIS = V_PAISDEST)
               AND (C.SGESTADO = V_ESTADEST)
               AND (I.CDIMPOSTO = C.CDIMPOSTO);
               --AND ((INSTR(I.DSESTDIFALDENT, V_ESTADEST) > 0) OR (I.DSESTDIFALDENT = 'T') OR (I.DSESTDIFALDENT = 'N'));
         EXCEPTION
            WHEN NO_DATA_FOUND THEN
               V_IDCALCDENTRO := w_N;
               V_IDCALCSEPARADO := w_N;
         END;

         IF (V_IDCALCDIFALDENT = 'S') AND (V_IDCALCDENTRO = 'S') AND (V_IDCALCSEPARADO = 'N') THEN
            IF ((V_PAISDEST = '0055') AND (UPPER(V_ESTADEST) = 'MG')) AND ((V_PAISORIG = '0055') AND (UPPER(V_ESTAORIG) = 'MG')) THEN
               IF (V_IDCONSFINAL = 'S') THEN
                  IF (V_VRADICALIQFECP IS NOT NULL) AND (V_VRADICALIQFECP > 0) THEN
                     IF (V_IDUTILPVRIMPBC = 'S') THEN
                        IF C_PRODUTO.CDIMPOSTONFE = '00' THEN
                           --V_BASECALCIT := V_BASECALCIT/((100-V_ALIQUTMP)/100);
                           UPDATE ITEMPROIMPOS
                              SET VRBASECALCIT = VRBASECALCIT/((100-V_ALIQUTMP)/100)
                            WHERE (CDFILIAL     = P_FILIAL)              AND
                                  (NRLANCTONF   = P_LANCTONF)            AND
                                  (NRSEQITPROD  = C_PRODUTO.NRSEQITPROD) AND
                                  (CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)   AND
                                  (NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS);
                        END IF;
                     END IF;
                  END IF;
              END IF;
            ELSE --IF ((V_PAISORIG = '0055') AND (UPPER(V_ESTAORIG) = 'MG')) THEN
               IF (V_IDUTALIQINTOPPRES = 'S') THEN
                  V_IDPRESENCIAL := w_9;
               END IF;
               V_ALIQICMSDEST := 0;
               V_ALIQFECPDEST := 0;
               IF ((V_IDINTEREST = 'S') AND (V_IDCONSFINAL = 'S') AND (V_IDCONTRIBICMSAUX = 'N') AND (V_IDPRESENCIAL <> '1')) OR (C_PRODUTO.CDIMPOSTONFE = '80') THEN
                  --IF (C_PRODUTO.CDIMPOSTONFE = '00') THEN
                     -- CONSULTANDO A ALÍQUOTA INTERNA DO IMPOSTO
                     DELETE
                       FROM ALIQTEMP
                      WHERE NRALIQTEMP = V_ALIQTEMP;

                     IF C_PRODUTO.CDIMPOSTONFE = '80' THEN
                        IF C_PRODUTO.IDUTMUNIORIG = w_D THEN
                           CONSULTA_ALIQUOTA(C_PRODUTO.CDIMPOSTO, w_S, P_EMPRESA, C_PRODUTO.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                             V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRPFISCSV, P_TIPOOPER,
                                             NULL, NULL, NULL, NULL, NULL, NULL, C_PRODUTO.IDORIGEMPROD);
                        ELSE
                           CONSULTA_ALIQUOTA(C_PRODUTO.CDIMPOSTO, w_S, P_EMPRESA, C_PRODUTO.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                             V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIORIG, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_TIPOOPER,
                                             NULL, NULL, NULL, NULL, NULL, NULL, C_PRODUTO.IDORIGEMPROD);
                        END IF;
                     ELSE
                        IF C_PRODUTO.IDUTMUNIORIG = w_D THEN
                           CONSULTA_ALIQUOTA(C_PRODUTO.CDIMPOSTO, w_S, P_EMPRESA, C_PRODUTO.CDARVPROD, P_INSCESTA, V_PAISDEST,
                                             V_ESTADEST, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRPFISCSV, P_TIPOOPER,
                                             NULL, NULL, NULL, NULL, NULL, NULL, C_PRODUTO.IDORIGEMPROD);
                        ELSE
                           CONSULTA_ALIQUOTA(C_PRODUTO.CDIMPOSTO, w_S, P_EMPRESA, C_PRODUTO.CDARVPROD, P_INSCESTA, V_PAISDEST,
                                             V_ESTADEST, V_PAISDEST, V_ESTADEST, V_MUNIORIG, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_TIPOOPER,
                                             NULL, NULL, NULL, NULL, NULL, NULL, C_PRODUTO.IDORIGEMPROD);
                        END IF;
                     END IF;

                     BEGIN
                        SELECT MAX(VRALIQUTMP), MAX(VRADICALIQFECP)
                          INTO V_ALIQICMSDEST, V_ALIQFECPDEST
                          FROM ALIQTEMP
                         WHERE NRALIQTEMP = V_ALIQTEMP;
                     EXCEPTION
                        WHEN NO_DATA_FOUND THEN
                           V_ALIQICMSDEST := 0;
                           V_ALIQFECPDEST := 0;
                     END;
                     IF (V_ALIQICMSDEST = 0) OR (V_ALIQICMSDEST IS NULL) THEN
                        BEGIN
                           SELECT NVL(CONSULTA_QUADRO_ALIQUOTAS(V_ESTADEST, V_ESTADEST), 0)
                             INTO V_ALIQICMSDEST
                             FROM DUAL;
                        EXCEPTION
                           WHEN NO_DATA_FOUND THEN
                              V_ALIQICMSDEST := 0;
                        END;
                     END IF;
                     -- CONSULTANDO A ALÍQUOTA DO FCP (FUNDO DE COMBATE A POBREZA) QUANDO ELE ESTÁ CADASTRADO COMO IMPOSTO
                     IF (V_ALIQFECPDEST = 0) OR (V_ALIQFECPDEST IS NULL) THEN
                        BEGIN
                           SELECT CDIMPOSTO
                             INTO V_CDIMPOSTOFECP
                             FROM IMPOSTO
                            WHERE CDIMPOSTONFE = '01';
                        EXCEPTION
                           WHEN NO_DATA_FOUND THEN
                              V_CDIMPOSTOFECP := NULL;
                        END;
                        IF V_CDIMPOSTOFECP IS NOT NULL THEN
                           DELETE
                             FROM ALIQTEMP
                            WHERE NRALIQTEMP = V_ALIQTEMP;
                           --VERIFICANDO SE EXISTE A INCIDÊNCIA DE FECP PARA O PRODUTO
                           IF C_PRODUTO.IDUTMUNIORIG = w_D THEN
                              CONSULTA_ALIQUOTA(V_CDIMPOSTOFECP, w_S, P_EMPRESA, C_PRODUTO.CDARVPROD, P_INSCESTA, V_PAISDEST,
                                                V_ESTADEST, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRPFISCSV, P_TIPOOPER,
                                                NULL, NULL, NULL, NULL, NULL, NULL, C_PRODUTO.IDORIGEMPROD);
                           ELSE
                              CONSULTA_ALIQUOTA(V_CDIMPOSTOFECP, w_S, P_EMPRESA, C_PRODUTO.CDARVPROD, P_INSCESTA, V_PAISDEST,
                                                V_ESTADEST, V_PAISDEST, V_ESTADEST, V_MUNIORIG, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_TIPOOPER,
                                                NULL, NULL, NULL, NULL, NULL, NULL, C_PRODUTO.IDORIGEMPROD);
                           END IF;
                           BEGIN
                              SELECT NVL(MAX(VRALIQUTMP), 0)
                                INTO V_ALIQFECPDEST
                                FROM ALIQTEMP
                               WHERE NRALIQTEMP = V_ALIQTEMP;
                           EXCEPTION
                              WHEN NO_DATA_FOUND THEN
                                 V_ALIQFECPDEST := 0;
                           END;
                        ELSE
                           V_ALIQFECPDEST := 0;
                        END IF;
                     END IF;
                     -- REALIZANDO O CÁLCULO DA BASE COM O IMPOSTO POR DENTRO
                     -- BASE DE CÁLCULO REAL = BASE DE CÁLCULO / (1 - ((ALIQUOTA DO IMPOSTO + ALIQUOTA DO FCP) / 100)
                     BEGIN
                     SELECT MAX(VRBASECALCIT)
                       INTO V_BASECALCIT
                       FROM ITEMPROIMPOS
                      WHERE (CDFILIAL     = P_FILIAL)              AND
                            (NRLANCTONF   = P_LANCTONF)            AND
                            (NRSEQITPROD  = C_PRODUTO.NRSEQITPROD) AND
                            (CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)   AND
                            (NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS);
                     EXCEPTION
                        WHEN NO_DATA_FOUND THEN
                           V_BASECALCIT := 0;
                     END;
                     V_VRIMPOSTOST := 0;
                     IF C_PRODUTO.CDIMPOSTONFE = '80' THEN
                        FOR C_SUBSTRIB IN (SELECT NVL(IDVRIMPSTRIB, 'N') IDVRIMPSTRIB, I.CDIMPOSTO
                                             FROM ITEMPROIMPOS I, IMPOSTO II
                                            WHERE (CDFILIAL     = P_FILIAL)
                                              AND (NRLANCTONF   = P_LANCTONF)
                                              AND (NRSEQITPROD  = C_PRODUTO.NRSEQITPROD)
                                              AND (NRITPROIMPOS = '1')
                                              AND (INSTR(V_CDIMPOSTRIB,II.CDIMPOSTO||'_') > 0)
                                              AND (I.CDIMPOSTO = II.CDIMPOSTO))
                        LOOP
                           IF (C_SUBSTRIB.IDVRIMPSTRIB = w_S) THEN
                              Begin
                                 SELECT NVL(ROUND(MAX(VRIMPOSTOIT), 2),0), NVL(ROUND(MAX(VRBASECALCIT), 2),0)
                                 INTO   V_VRIMPOSST, V_VRBASEICMS
                                 FROM ITEMPROIMPOS I
                                 WHERE (CDFILIAL     = P_FILIAL)                   AND
                                       (NRLANCTONF   = P_LANCTONF)                 AND
                                       (NRSEQITPROD  = C_PRODUTO.NRSEQITPROD)  AND
                                       (CDIMPOSTO    = C_SUBSTRIB.CDIMPOSTO)       AND
                                       (INSTR(V_CDIMPOSTRIB,CDIMPOSTO||'_') > 0)   AND
                                       (NRITPROIMPOS = w_1);
                              Exception
                                 When No_Data_Found Then
                                    V_VRIMPOSST := 0;
                                    V_VRBASEICMS := 0;
                              End;
                           ELSE
                              V_VRIMPOSST := 0;
                              V_VRBASEICMS := 0;
                           END IF;

                           /*198639, 200299*/
                           IF V_VRBASEICMS > 0 THEN
                              DELETE ALIQTEMP
                               WHERE NRALIQTEMP = V_ALIQTEMP;

                              /* Verifica grupo fiscal */
                              SELECT MAX(IDGRUPFISSRV)
                                INTO V_UTGRUPFISCS
                                FROM IMPOSTO
                               WHERE CDIMPOSTO = C_PRODUTO.CDIMPOSTO;

                              IF V_UTGRUPFISCS = 'S' THEN
                                 V_CDGRPFISCSV := NULL;
                                 SELECT MAX(CDGRUPOFISC)
                                   INTO V_CDGRPFISCSV
                                   FROM SERVCLIE SC, SERVICO S
                                  WHERE SC.CDFILIAL   = V_CDFILIEMIT AND
                                       SC.CDCLIENTE  = P_CLIENTE    AND
                                       SC.CDFILIAL   = S.CDFILIAL   AND
                                       SC.CDSERVFILI = S.CDSERVFILI AND
                                       S.CDPRODUTO   = C_PRODUTO.CDPRODUTO;

                                 IF V_CDGRPFISCSV IS NULL THEN
                                    SELECT MAX(CDGRUPOFISC)
                                      INTO V_CDGRPFISCSV
                                      FROM CLIENFILIAL
                                    WHERE CDFILIAL   = V_CDFILIEMIT AND
                                         CDCLIENTE  = P_CLIENTE;
                                 END IF;

                                 CONSULTA_ALIQUOTA(C_PRODUTO.CDIMPOSTO, w_S, P_EMPRESA, C_PRODUTO.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                   V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_VRBASEICMS, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRPFISCSV, P_TIPOOPER,
                                                   NULL, NULL, NULL, NULL, NULL, NULL, C_PRODUTO.IDORIGEMPROD);

                              ELSE
                                 CONSULTA_ALIQUOTA(C_PRODUTO.CDIMPOSTO, w_S, P_EMPRESA, C_PRODUTO.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                   V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_VRBASEICMS, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_TIPOOPER,
                                                   NULL, NULL, NULL, NULL, NULL, NULL, C_PRODUTO.IDORIGEMPROD);

                              END IF;

                              BEGIN
                                 SELECT NVL(MAX(VRALIQICMSCBSP),0)
                                   INTO V_VRALIQICMSCBSP
                                   FROM ALIQTEMP
                                  WHERE (NRALIQTEMP = V_ALIQTEMP);
                              EXCEPTION
                                 WHEN NO_DATA_FOUND THEN
                                    V_VRALIQICMSCBSP := 0;
                              END;

                              IF V_VRALIQICMSCBSP > 0 THEN
                                 V_VRIMPOSST := V_VRBASEICMS * (V_VRALIQICMSCBSP/100);
                              END IF;

                              DELETE ALIQTEMP
                               WHERE NRALIQTEMP = V_ALIQTEMP;
                           END IF;
                           /*198639, 200299*/

                           V_VRIMPOSTOST := V_VRIMPOSTOST + V_VRIMPOSST;
                        END LOOP;
                     END IF;
                     IF V_BASECALCIT > 0 THEN
                        V_BASECALCIT := V_BASECALCIT/((100-(V_ALIQICMSDEST+V_ALIQFECPDEST))/100);
                        V_IMPOSTOIT := (V_BASECALCIT * V_TAXAALIQUOTA) - V_VRIMPOSTOST;
                        IF C_PRODUTO.CDIMPOSTONFE = '80' THEN
                           UPDATE ITEMPROIMPOS
                              SET VRBASECALCIT = V_BASECALCIT,
                                  VRIMPOSTOIT  = V_IMPOSTOIT,
                                  VRIMPOSTOVISUIT = DECODE(V_IDPERVISIMPSCRE, 'S', V_IMPOSTOIT, DECODE(CDFISCALIT, '1', V_IMPOSTOIT,0)),
                                  VRADICALIQFECP = V_ALIQFECPDEST,
                                  VRADICFECP = V_BASECALCIT * (V_ALIQFECPDEST/100)
                            WHERE (CDFILIAL     = P_FILIAL)              AND
                                  (NRLANCTONF   = P_LANCTONF)            AND
                                  (NRSEQITPROD  = C_PRODUTO.NRSEQITPROD) AND
                                  (CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)   AND
                                  (NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS);
                        ELSE
                           UPDATE ITEMPROIMPOS
                              SET VRBASECALCIT = V_BASECALCIT,
                                  VRIMPOSTOIT  = V_IMPOSTOIT,
                                  VRIMPOSTOVISUIT = DECODE(V_IDPERVISIMPSCRE, 'S', V_IMPOSTOIT, DECODE(CDFISCALIT, '1', V_IMPOSTOIT,0))
                            WHERE (CDFILIAL     = P_FILIAL)              AND
                                  (NRLANCTONF   = P_LANCTONF)            AND
                                  (NRSEQITPROD  = C_PRODUTO.NRSEQITPROD) AND
                                  (CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)   AND
                                  (NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS);
                        END IF;
                     END IF;
                  --END IF;
               END IF;
            END IF;
         END IF;
      END LOOP; --fim do loop c_produto
      FOR C_ITEM IN (SELECT II.CDIMPOSTO,  I.NRSEQITPROD, II.NRITPROIMPOS
                  FROM ITEMPRODUTO I, ITEMPROIMPOS II
                  WHERE I.CDFILIAL    = P_FILIAL       AND
                        I.NRLANCTONF  = P_LANCTONF     AND
                        I.CDFILIAL    = II.CDFILIAL    AND
                        I.NRLANCTONF  = II.NRLANCTONF  AND
                        I.NRSEQITPROD = II.NRSEQITPROD ) LOOP

         V_ICMS := 'N';
         FOR C_ICMS IN (SELECT CDIMPOSTO
                          FROM IMPOSTONFE N, IMPOSTO I
                         WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                           AND N.CDIMPOSTONFE = '00'
                           AND I.CDIMPOSTO = C_ITEM.CDIMPOSTO)
         LOOP
            V_ICMS := 'S';
         END LOOP;

         IF (V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')  AND (V_ICMS = 'S') THEN
            UPDATE ITEMPROIMPOS
               SET VRCONTITIMP  = TRUNC(VRCONTITIMP,2),
                   VRBASECALCIT = TRUNC(VRBASECALCIT,2),
                   VRIMPOSTOIT  = TRUNC(VRIMPOSTOIT,2),
                   VRIMPOSTOVISUIT = TRUNC(VRIMPOSTOVISUIT,2)
             WHERE (CDFILIAL     = P_FILIAL) AND
                   (NRLANCTONF   = P_LANCTONF) AND
                   (CDIMPOSTO    = C_ITEM.CDIMPOSTO) AND
                   (NRSEQITPROD  = C_ITEM.NRSEQITPROD) AND
                   (NRITPROIMPOS = C_ITEM.NRITPROIMPOS);
         ELSE
           UPDATE ITEMPROIMPOS
               SET VRCONTITIMP  = ROUND(VRCONTITIMP,2),
                   VRBASECALCIT = ROUND(VRBASECALCIT,2),
                   VRIMPOSTOIT  = ROUND(VRIMPOSTOIT,2),
                   VRIMPOSTOVISUIT = ROUND(VRIMPOSTOVISUIT,2)
             WHERE (CDFILIAL     = P_FILIAL) AND
                   (NRLANCTONF   = P_LANCTONF) AND
                   (CDIMPOSTO    = C_ITEM.CDIMPOSTO) AND
                   (NRSEQITPROD  = C_ITEM.NRSEQITPROD) AND
                   (NRITPROIMPOS = C_ITEM.NRITPROIMPOS);
         END IF;
      END LOOP;

   --FIM DA ATUALIZAÇÃO NA TABELA DE ITEMPROIMPOS

   --TOTALIZAÇÃO DOS IMPOSTOS

      DELETE IMPOSNFTOT
      WHERE (CDFILIAL = P_FILIAL) AND
            (NRLANCTONF = P_LANCTONF);

      FOR C_IMPOSNFTOT IN (SELECT IT.CDIMPOSTO
                           FROM ITEMPROIMPOS IT
                           WHERE (IT.CDFILIAL   = P_FILIAL) AND
                                 (IT.NRLANCTONF = P_LANCTONF)
                           GROUP BY IT.CDIMPOSTO) LOOP

         V_IMPOSTOIT  := 0;
         V_BASECALCIT := 0;

         SELECT NVL(SUM(IT.VRIMPOSTOIT),0),
                NVL(SUM(IT.VRBASECALCIT),0),
                NVL(SUM(IT.VRADICFECP),0)
         INTO   V_IMPOSTOIT,
                V_BASECALCIT,
                V_VRADICFECPNFTOT
         FROM ITEMPROIMPOS IT, IMPOSTO I
         WHERE (IT.CDFILIAL   = P_FILIAL)               AND
               (IT.NRLANCTONF = P_LANCTONF)             AND
               (IT.CDIMPOSTO  = C_IMPOSNFTOT.CDIMPOSTO) AND
               (IT.CDIMPOSTO  = I.CDIMPOSTO);

         V_ICMS := 'N';
         FOR C_ICMS IN (SELECT CDIMPOSTO
                          FROM IMPOSTONFE N, IMPOSTO I
                         WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                           AND N.CDIMPOSTONFE = '00'
                           AND I.CDIMPOSTO = C_IMPOSNFTOT.CDIMPOSTO)
         LOOP
            V_ICMS := 'S';
         END LOOP;

         IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
            INSERT INTO IMPOSNFTOT(CDFILIAL, NRLANCTONF, CDIMPOSTO, VRTOTIMPONF, VRTOTBCALCNF,
                                   VRADICFECP)
                           VALUES (P_FILIAL, P_LANCTONF, C_IMPOSNFTOT.CDIMPOSTO, TRUNC(V_IMPOSTOIT ,V_NRDECITOTANF), TRUNC(V_BASECALCIT, V_NRDECITOTANF),
                                   V_VRADICFECPNFTOT);
         ELSE
            INSERT INTO IMPOSNFTOT(CDFILIAL, NRLANCTONF, CDIMPOSTO, VRTOTIMPONF, VRTOTBCALCNF,
                                   VRADICFECP)
                           VALUES (P_FILIAL, P_LANCTONF, C_IMPOSNFTOT.CDIMPOSTO, ROUND(V_IMPOSTOIT ,V_NRDECITOTANF), ROUND(V_BASECALCIT, V_NRDECITOTANF),
                                   V_VRADICFECPNFTOT);
         END IF;

      END LOOP;

   --INCLUSÃO DOS IMPOSTOS DE CORPO DE NOTA EM CASO DE NOTA FISCAL--------------------------------------------------------------------------
      V_SEQUIMPOSTNF := w_01;

      DELETE IMPOSTONF
      WHERE (CDFILIAL   = P_FILIAL) AND
            (NRLANCTONF = P_LANCTONF);


      CONSULTA_INCIDENCIA(w_S, P_EMPRESA, '', P_INSCESTA, P_TIPOOPER, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, NULL, V_IDINTEREST);


      FOR C_INCIDENCIA IN (SELECT DISTINCT (CDIMPOTEMP) AS CDIMPOTEMP, CDFISCTEMP, IDUTMUNIORIG,
                                  IDTRATIMPTMP, IDIMPORECUP, CDDETALHEPROD, IP.CDIMPOSTONFE
                           FROM INCITEMP IT, IMPOSTO IP
                           WHERE (IT.NRINCITEMP  = V_INCITEMP)       AND
                                 (IT.CDIMPOTEMP  = IP.CDIMPOSTO)     AND
                                 (IP.IDPRODNOTA  = w_C)) LOOP
         V_ALIQUTMP := 0;
         V_UTIBB    := 'N';
         V_SIMPLES  := 'N';
--integração fiscal especifica com Compass_Argentina atraves da importação de aliquota do imposto IBB
--A aliquota de imposto 03(ibb) sera cadastrada na tabela paramintegraibb e tera prioridade sobre o
-- cadastro de aliquota realizado em sistema

         /*VERIFICA CST POR IMPOSTO*/
         V_IMPOICMS := NULL;
         V_CDGRUPOFISCAUX := NULL;

         SELECT MAX(G.CDGRUPOFISC)
           INTO V_CDGRUPOFISCAUX
           FROM GRUPOFISCIMPFIL G,
                (SELECT CDFILIEMIT AS CDFILIAL
                   FROM NOTAFISCAL
                  WHERE CDFILIAL = P_FILIAL
                        AND NRLANCTONF = P_LANCTONF) F
          WHERE G.CDFILIAL = F.CDFILIAL
            AND NOT G.CDGRUPOFISC IS NULL
            AND G.CDIMPOSTO = C_INCIDENCIA.CDIMPOTEMP;

         IF V_IDORIGDESTNF = 'C' THEN
            SELECT NVL(MAX(G.CDGRUPOFISC), V_CDGRUPOFISCAUX)
              INTO V_CDGRUPOFISCAUX
              FROM GRFISIMPIECLIE G,
                   (SELECT CDCLIENTE
                      FROM NOTAFISCAL
                     WHERE CDFILIAL = P_FILIAL
                       AND NRLANCTONF = P_LANCTONF) N
             WHERE G.CDCLIENTE = N.CDCLIENTE
               AND G.CDEMPRESA = P_EMPRESA
               AND G.CDINSCESTA = P_INSCESTA
               AND NOT G.CDGRUPOFISC IS NULL
               AND G.CDIMPOSTO = C_INCIDENCIA.CDIMPOTEMP;
         ELSE
            SELECT NVL(MAX(G.CDGRUPOFISC), V_CDGRUPOFISCAUX)
              INTO V_CDGRUPOFISCAUX
              FROM GRFISIMPIEFORN G,
                  (SELECT CDFORNECED
                     FROM NOTAFISCAL
                    WHERE CDFILIAL = P_FILIAL
                      AND NRLANCTONF = P_LANCTONF) N
             WHERE G.CDFORNECED = N.CDFORNECED
               AND G.CDEMPRESA = P_EMPRESA
               AND G.CDINSCESTA = P_INSCESTA
               AND NOT G.CDGRUPOFISC IS NULL
               AND G.CDIMPOSTO = C_INCIDENCIA.CDIMPOTEMP;
         END IF;

         IF V_CDGRUPOFISCAUX IS NULL THEN
            CONSULTA_CST_NFE(w_S, P_EMPRESA, '', P_INSCESTA, P_TIPOOPER, V_CDGRUPOFISC,C_INCIDENCIA.CDIMPOTEMP, V_IDINTEREST, V_IDINTERNA, P_FILIAL, P_LANCTONF, '', V_CDSITTRIBTMP, V_IDMODBCNFE, V_IDMODBCSTNFE, V_CDTPCRPICOSTNFE, V_CDNATUBCPCSTNFE, V_IDMOTIDESSTNFE);
         ELSE
            CONSULTA_CST_NFE(w_S, P_EMPRESA, '', P_INSCESTA, P_TIPOOPER, V_CDGRUPOFISCAUX,C_INCIDENCIA.CDIMPOTEMP, V_IDINTEREST, V_IDINTERNA, P_FILIAL, P_LANCTONF, '', V_CDSITTRIBTMP, V_IDMODBCNFE, V_IDMODBCSTNFE, V_CDTPCRPICOSTNFE, V_CDNATUBCPCSTNFE, V_IDMOTIDESSTNFE);
         END IF;
         V_CDSIMPLESNACIONAL := NULL;
         V_CDFAIXA := NULL;

         /*SIMPLES NACIONAL*/
         IF (V_CDSITUCRT <> '3') THEN

            CALCULA_ALIQUOTA_SN(P_EMPRESA,
                                P_TIPOOPER,
                                P_INIVALID,
                                SUBSTR(V_FISOPEITEM, 2, 3),
                                C_INCIDENCIA.CDIMPOSTONFE,
                                V_VRSUBLIMITESN,
                                'N',
                                V_RBT12,
                                V_RBA,
                                V_CDSIMPLESNACIONAL,
                                V_CDFAIXA,
                                V_VRALIQSIMPLES);

            IF (V_CDFAIXA IS NOT NULL) OR ((C_INCIDENCIA.CDIMPOSTONFE IN ('00', '31')) AND (V_RBT12 >= 3600000)) THEN
               V_ALIQUTMP     := V_VRALIQSIMPLES;
               V_NRALIQTEMP   := 0;
               V_PARDEDTMP    := 0;
               V_PREDBCTMP    := 0;
               V_TRATIMPST    := w_0;
               V_PBCSUBTRIB   := 0;
               V_IDPMCBASECAL := 'N';
               V_SIMPLES      := 'S';
            END IF;
         END IF;

         IF C_INCIDENCIA.CDIMPOTEMP = '03' THEN
            IF V_IDORIGDESTNF = 'C' THEN
               V_ALIQUTMP := NULL;

               V_DTVINGENTE := NVL(V_DTINIREFEFAT, P_INIVALID);

               SELECT NVL(MAX(VRALIQUOTAIBB),NULL)
               INTO   V_ALIQUTMP
               FROM PARAMINTEGRAIBB
               WHERE CDCLIENTE = P_CLIENTE AND
                     V_DTVINGENTE BETWEEN DTVIGINICIALIBB AND DTVIGFINALIBB;


               IF V_ALIQUTMP IS NOT NULL THEN
                  V_NRALIQTEMP   := 0;
                  V_PARDEDTMP    := 0;
                  V_PREDBCTMP    := 0;
                  V_TRATIMPST    := w_0;
                  V_PBCSUBTRIB   := 0;
                  V_IDPMCBASECAL := 'N';
                  V_UTIBB        := 'S';
               END IF;
            END IF;
         END IF;

         IF (V_SIMPLES = 'N') THEN
            V_CDSIMPLESNACIONAL := NULL;
            V_CDFAIXA := NULL;
            IF (V_UTIBB = 'N')  THEN
               V_ALIQUTMP  := 0;
               V_PARDEDTMP := 0;
               V_PREDBCTMP := 0;
               V_ALIQUTMP  := 0;
               V_VRALIQICMSCBSP := 0;

               IF C_INCIDENCIA.IDUTMUNIORIG = w_D THEN
                  /* CONSIDERA O MUNICIPIO DE DESTINO */
                  CONSULTA_ALIQUOTA(C_INCIDENCIA.CDIMPOTEMP, w_S, P_EMPRESA, '', P_INSCESTA, V_PAISORIG,
                                    V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_TIPOOPER);
               ELSE
                  /* CONSIDERA O MUNICIPIO DE ORIGEM*/
                  CONSULTA_ALIQUOTA(C_INCIDENCIA.CDIMPOTEMP, w_S, P_EMPRESA, '', P_INSCESTA, V_PAISORIG,
                                    V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIORIG, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_TIPOOPER);
               END IF;

               SELECT MAX(NRALIQTEMP), MAX(VRPARDEDTMP), MAX(VRPREDBCTMP), NVL(MAX(VRALIQICMSCBSP),0),
                      MAX(VRALIQUTMP), NVL(MAX(IDTRIMPSTTMP), w_0), NVL(MAX(VRPBCSTTMP),0)
               INTO   V_NRALIQTEMP, V_PARDEDTMP, V_PREDBCTMP, V_VRALIQICMSCBSP,
                      V_ALIQUTMP,   V_TRATIMPST, V_PBCSUBTRIB
               FROM ALIQTEMP
               WHERE (NRALIQTEMP = V_ALIQTEMP);

               IF (V_ALIQUTMP IS NULL) THEN
                  V_ALIQUTMP := 0;
               END IF;
            END IF;
         END IF;
         V_PRODUENCARGO := 0;

         SELECT SUM(VRITEMENCA) AS VRSOMAITEM
         INTO   V_SOMAITEM
         FROM ITEMENCARGO IE, ENCARGO EN, BASECALC BC
         WHERE (IE.CDFILIAL   = P_FILIAL)                AND
               (IE.NRLANCTONF = P_LANCTONF)              AND
               (EN.CDENCARGO  = IE.CDENCARGO)            AND
               (BC.CDENCARGO  = IE.CDENCARGO)            AND
               (BC.CDIMPOSTO  = C_INCIDENCIA.CDIMPOTEMP) AND
               (NVL(BC.IDTRATIMPOBCENC, EN.IDENCARGO)  = w_A);

         SELECT SUM(VRITEMENCA) AS VRDESCITEM
         INTO   V_DESCITEM
         FROM ITEMENCARGO IE, ENCARGO EN, BASECALC BC
         WHERE (IE.CDFILIAL   = P_FILIAL)                AND
               (IE.NRLANCTONF = P_LANCTONF)              AND
               (EN.CDENCARGO  = IE.CDENCARGO)            AND
               (BC.CDENCARGO  = IE.CDENCARGO)            AND
               (BC.CDIMPOSTO  = C_INCIDENCIA.CDIMPOTEMP) AND
               (NVL(BC.IDTRATIMPOBCENC, EN.IDENCARGO)  = w_D);

         IF V_SOMAITEM IS NULL THEN
            V_SOMAITEM := 0;
         END IF;

         IF V_DESCITEM IS NULL THEN
            V_DESCITEM := 0;
         END IF;

         IF (V_ALIQUTMP IS NULL) THEN --VERIFICAR VALOR DA ALÍQUOTA P/ IMPOSTO RECUPERÁVEL COM COD. FISCAL = '3'
            V_ALIQUTMP := 0;
         END IF;

         IF (V_PREDBCTMP IS NULL) THEN
            V_PREDBCTMP := 0;
         END IF;

         IF (V_PARDEDTMP IS NULL) THEN
             V_PARDEDTMP := 0;
         END IF;

         V_PRODUENCARGO := V_SOMAITEM - V_DESCITEM;

         IF (V_VRALIQICMSCBSP > 0) AND (C_INCIDENCIA.CDIMPOSTONFE = '80') THEN /*201021*/
            V_TAXABASECALC := (V_PREDBCTMP/100);
         ELSE
            V_TAXABASECALC := (100 - V_PREDBCTMP)/100;
         END IF;

         V_TAXAALIQUOTA := (V_ALIQUTMP/100);
         V_TAXABCSUBSTR := 1 + (V_PBCSUBTRIB/100);
         V_BASECALCIT   := (V_LIQUIDO + V_PRODUENCARGO) * V_TAXABASECALC;

         V_PERDBCALC    := 100 - V_PREDBCTMP;

         IF V_PBCSUBTRIB > 0 THEN
            V_BASECALCIT := (V_BASECALCIT * V_TAXABCSUBSTR);
			   V_PREDBCSTIT := V_PREDBCTMP;
            V_PREDBCTMP  := V_PBCSUBTRIB;
            V_PERDBCALC  := 0;
         ELSE
            V_PREDBCSTIT := V_PREDBCTMP;
         END IF;

         V_CONTIMPO     := V_BASECALCIT;
         V_IMPOSTOIT    := (V_BASECALCIT * V_TAXAALIQUOTA) - V_PARDEDTMP;

         IF V_BASECALCIT < 0 THEN
            V_BASECALCIT := 0;
         END IF;
         
         IF (P_LANCTONF = '0000196011') THEN
            RAISE_APPLICATION_ERROR(-20501,'LUCAS -  '||V_PRODUENCARGO|| ' - PRIMO', TRUE);
         END IF;

         V_CONTABCALC := (V_LIQUIDO + V_PRODUENCARGO) - ((V_LIQUIDO + V_PRODUENCARGO) * V_TAXABASECALC);
         V_PERDBCALC  := 100 - V_PREDBCTMP;

         IF V_IMPOSTOIT < 0 THEN
            V_IMPOSTOIT := 0;
         END IF;

         V_ICMS := 'N';
         FOR C_ICMS IN (SELECT CDIMPOSTO
                          FROM IMPOSTONFE N, IMPOSTO I
                         WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                           AND N.CDIMPOSTONFE = '00'
                           AND I.CDIMPOSTO = C_INCIDENCIA.CDIMPOTEMP)
         LOOP
            V_ICMS := 'S';
         END LOOP;

         IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
            INSERT INTO IMPOSNFTOT(CDFILIAL, NRLANCTONF, CDIMPOSTO              , VRTOTIMPONF                              , VRTOTBCALCNF)
                           VALUES (P_FILIAL, P_LANCTONF, C_INCIDENCIA.CDIMPOTEMP, TRUNC(NVL(V_IMPOSTOIT,0), V_NRDECITOTANF), TRUNC(NVL(V_BASECALCIT,0),V_NRDECITOTANF));
         ELSE
            INSERT INTO IMPOSNFTOT(CDFILIAL, NRLANCTONF, CDIMPOSTO              , VRTOTIMPONF                              , VRTOTBCALCNF)
                           VALUES (P_FILIAL, P_LANCTONF, C_INCIDENCIA.CDIMPOTEMP, ROUND(NVL(V_IMPOSTOIT,0), V_NRDECITOTANF), ROUND(NVL(V_BASECALCIT,0),V_NRDECITOTANF));
         END IF;

         IF (C_INCIDENCIA.IDIMPORECUP = w_S) OR (C_INCIDENCIA.IDIMPORECUP <> w_S AND V_ALIQUTMP <> 0) THEN
            IF (C_INCIDENCIA.IDIMPORECUP = w_S) AND
               (C_INCIDENCIA.CDFISCTEMP <> w_1) THEN
               V_BASECALCIT := 0;
               V_ALIQUTMP   := 0;
               V_IMPOSTOIT  := 0;
               V_PREDBCTMP  := 0;
               V_PARDEDTMP  := 0;
            END IF;

            V_ICMS := 'N';
            FOR C_ICMS IN (SELECT CDIMPOSTO
                             FROM IMPOSTONFE N, IMPOSTO I
                            WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                              AND N.CDIMPOSTONFE = '00'
                              AND I.CDIMPOSTO = C_INCIDENCIA.CDIMPOTEMP)
            LOOP
               V_ICMS := 'S';
            END LOOP;

            IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
               INSERT INTO IMPOSTONF(
                  CDFILIAL, NRLANCTONF, CDIMPOSTO, NRIMPOSNF, VRCONTABILNF, VRPERREDBCNF, VRBASECALCNF,
                  VRALIQNF, VRPARDEDNF, VRIMPOSTONF, CDFISCALNF, IDTRIMPOSTNF, CDSITUTRIBIMNFE,  CDTPCREDPICONF, CDNATUBCALPCNF, IDMOTDESONERANF)
               VALUES(
                  P_FILIAL, P_LANCTONF, C_INCIDENCIA.CDIMPOTEMP, V_SEQUIMPOSTNF, TRUNC(V_CONTIMPO,2), V_PREDBCTMP,
                  TRUNC(V_BASECALCIT,2), V_ALIQUTMP, TRUNC(V_PARDEDTMP,2), TRUNC(V_IMPOSTOIT,2), C_INCIDENCIA.CDFISCTEMP, V_TRATIMPST, V_CDSITTRIBTMP, V_CDTPCRPICOSTNFE, V_CDNATUBCPCSTNFE, V_IDMOTIDESSTNFE);
            ELSE
               INSERT INTO IMPOSTONF(
                  CDFILIAL, NRLANCTONF, CDIMPOSTO, NRIMPOSNF, VRCONTABILNF, VRPERREDBCNF, VRBASECALCNF,
                  VRALIQNF, VRPARDEDNF, VRIMPOSTONF, CDFISCALNF, IDTRIMPOSTNF, CDSITUTRIBIMNFE, CDTPCREDPICONF, CDNATUBCALPCNF, IDMOTDESONERANF)
               VALUES(
                  P_FILIAL, P_LANCTONF, C_INCIDENCIA.CDIMPOTEMP, V_SEQUIMPOSTNF, ROUND(V_CONTIMPO,2), V_PREDBCTMP,
                  ROUND(V_BASECALCIT,2), V_ALIQUTMP, ROUND(V_PARDEDTMP,2), ROUND(V_IMPOSTOIT,2), C_INCIDENCIA.CDFISCTEMP, V_TRATIMPST, V_CDSITTRIBTMP, V_CDTPCRPICOSTNFE, V_CDNATUBCPCSTNFE, V_IDMOTIDESSTNFE);
            END IF;

            V_SEQUIMPOSTNF := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_SEQUIMPOSTNF) + 1)),2,0);

            IF (C_INCIDENCIA.IDIMPORECUP = w_S) AND
               (V_PREDBCTMP > 0) AND
               (C_INCIDENCIA.CDFISCTEMP = w_1) THEN
               INSERT INTO IMPOSTONF(
                  CDFILIAL, NRLANCTONF, CDIMPOSTO, NRIMPOSNF, VRCONTABILNF, VRPERREDBCNF, VRBASECALCNF,
                  VRALIQNF, VRPARDEDNF, VRIMPOSTONF, CDFISCALNF, CDSITUTRIBIMNFE,
				      CDTPCREDPICONF, CDNATUBCALPCNF, IDMOTDESONERANF)
               VALUES(
                  P_FILIAL, P_LANCTONF, C_INCIDENCIA.CDIMPOTEMP, V_SEQUIMPOSTNF, V_CONTABCALC, V_PERDBCALC,
                  0, 0, V_PARDEDTMP, 0, w_2, V_CDSITTRIBTMP, V_CDTPCRPICOSTNFE, V_CDNATUBCPCSTNFE, V_IDMOTIDESSTNFE);

               V_SEQUIMPOSTNF := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_SEQUIMPOSTNF) + 1)),2,0);
            END IF;
         END IF;

         DELETE ALIQTEMP
         WHERE NRALIQTEMP = V_ALIQTEMP;
      END LOOP;

      V_TOTIMPOCONT := 0;
      V_TOTIMPOBRUT := 0;

      /*CONTABILIZACAO DOS IMPOSTOS DE CORPO DE NOTA*/
      FOR C_IMPOSCONTAB IN (SELECT VRTOTIMPONF, IDIMPORECUP, CDCCTBLPASS, CDCCTBLATIV,
                                   IDTRATIMPO,  CDFISCTEMP, IDTIPCONTAB
                            FROM IMPOSNFTOT INF, IMPOSTO IP, INCITEMP IT
                            WHERE CDFILIAL      = P_FILIAL      AND
                                  NRLANCTONF    = P_LANCTONF    AND
                                  IP.CDIMPOSTO  = INF.CDIMPOSTO AND
                                  IT.CDIMPOTEMP = IP.CDIMPOSTO  AND
                                  IT.NRINCITEMP = V_INCITEMP    AND
                                  IP.IDPRODNOTA = w_C) LOOP


         IF (C_IMPOSCONTAB.IDTRATIMPO = w_A) THEN
            IF C_IMPOSCONTAB.IDTIPCONTAB = w_D THEN
               V_TOTIMPOCONT := V_TOTIMPOCONT + C_IMPOSCONTAB.VRTOTIMPONF;
            END IF;
            V_TOTIMPOBRUT := V_TOTIMPOBRUT + C_IMPOSCONTAB.VRTOTIMPONF;

         ELSIF (C_IMPOSCONTAB.IDTRATIMPO = w_D) THEN
            IF C_IMPOSCONTAB.IDTIPCONTAB = w_D THEN
               V_TOTIMPOCONT := V_TOTIMPOCONT - C_IMPOSCONTAB.VRTOTIMPONF;
            END IF;
            V_TOTIMPOBRUT := V_TOTIMPOBRUT - C_IMPOSCONTAB.VRTOTIMPONF;

         ELSIF (C_IMPOSCONTAB.IDTRATIMPO = w_R) THEN
            IF (C_IMPOSCONTAB.IDIMPORECUP = w_S) THEN
               IF (C_IMPOSCONTAB.CDCCTBLATIV IS NULL) OR
                  (C_IMPOSCONTAB.CDFISCTEMP <> w_1) AND (C_IMPOSCONTAB.IDTIPCONTAB = w_D) THEN

                  V_TOTIMPOCONT := V_TOTIMPOCONT - C_IMPOSCONTAB.VRTOTIMPONF;
               END IF;
            ELSE
               IF (C_IMPOSCONTAB.CDCCTBLATIV IS NULL) AND (C_IMPOSCONTAB.IDTIPCONTAB = w_D) THEN
                  V_TOTIMPOCONT := V_TOTIMPOCONT - C_IMPOSCONTAB.VRTOTIMPONF;
               END IF;
            END IF;
         END IF;
      END LOOP;

      IF (V_TOTIMPOBRUT <> 0) OR (V_TOTIMPOCONT <> 0) THEN
         FOR C_ITPRODUTO IN (SELECT NRSEQITPROD, (VRTOTAITEM - VRDESCITEM) AS VRLIQUIDO
                             FROM ITEMPRODUTO
                             WHERE CDFILIAL   = P_FILIAL AND
                                   NRLANCTONF = P_LANCTONF)LOOP


            IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
               UPDATE ITEMPRODUTO
               SET VRBRUTITEM = TRUNC(VRBRUTITEM + ((V_TOTIMPOBRUT / V_LIQUIDO) * C_ITPRODUTO.VRLIQUIDO),2),
                   VRCONTITEM = TRUNC(VRCONTITEM + ((V_TOTIMPOCONT / V_LIQUIDO) * C_ITPRODUTO.VRLIQUIDO),2)
               WHERE CDFILIAL    = P_FILIAL   AND
                     NRLANCTONF  = P_LANCTONF AND
                     NRSEQITPROD = C_ITPRODUTO.NRSEQITPROD;
            ELSE
               UPDATE ITEMPRODUTO
               SET VRBRUTITEM = ROUND(VRBRUTITEM + ((V_TOTIMPOBRUT / V_LIQUIDO) * C_ITPRODUTO.VRLIQUIDO),2),
                   VRCONTITEM = ROUND(VRCONTITEM + ((V_TOTIMPOCONT / V_LIQUIDO) * C_ITPRODUTO.VRLIQUIDO),2)
               WHERE CDFILIAL    = P_FILIAL   AND
                     NRLANCTONF  = P_LANCTONF AND
                     NRSEQITPROD = C_ITPRODUTO.NRSEQITPROD;
            END IF;
         END LOOP;
      END IF;

      DELETE INCITEMP
      WHERE NRINCITEMP = V_INCITEMP;

      SELECT SUM(NVL(VRBCICMSSTRETIDO,0)), SUM(NVL(VRICMSSTRETIDO,0))
        INTO V_BCICMSRET, V_ICMSRET
        FROM ITEMPROIMPOS
       WHERE CDFILIAL = P_FILIAL
         AND NRLANCTONF = P_LANCTONF;

      IF V_ICMSRET <> 0 THEN
         SELECT COUNT(*)
           INTO V_EXISTDSDADOSADIC
           FROM DADOSADIC
          WHERE CDFILIAL = P_FILIAL
            AND NRLANCTONF = P_LANCTONF
            AND DSDADOADIC LIKE 'ICMS retido anteriormente por substituição tributária: BC %';

         IF V_EXISTDSDADOSADIC = 0 THEN

            /*PREENCHE AS MENSAGENS ATRELADAS A INSCRICAO ESTADUAL*/
            INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
                           VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, 'ICMS retido anteriormente por substituição tributária: BC '||DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_BCICMSRET, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_BCICMSRET, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_BCICMSRET, 2), '9999999999999.99')))|| ' Valor '|| DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_ICMSRET, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_ICMSRET, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_ICMSRET, 2), '9999999999999.99'))));

            V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
         ELSE
            UPDATE DADOSADIC
               SET DSDADOADIC = 'ICMS retido anteriormente por substituição tributária: BC '||DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_BCICMSRET, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_BCICMSRET, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_BCICMSRET, 2), '9999999999999.99')))|| ' Valor '|| DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_ICMSRET, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_ICMSRET, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_ICMSRET, 2), '9999999999999.99')))
             WHERE CDFILIAL = P_FILIAL
               AND NRLANCTONF = P_LANCTONF
               AND DSDADOADIC LIKE 'ICMS retido anteriormente por substituição tributária: BC %';
         END IF;
      END IF;

      /*200683
      FOR C_ITEMPRODUTO_DIFAL IN (SELECT NRSEQITPROD
                                    FROM ITEMPRODUTO
                                   WHERE CDFILIAL = P_FILIAL
                                     AND NRLANCTONF = P_LANCTONF) LOOP
         GERA_ICMS_INTERESTADUAL(P_FILIAL, P_LANCTONF, C_ITEMPRODUTO_DIFAL.NRSEQITPROD, P_INIVALID);
      END LOOP;

      BEGIN
         SELECT NVL(IDCALCDIFAL, w_S)
           INTO V_IDCALCDIFAL
           FROM ESTADO
          WHERE (SGESTADO = V_ESTADEST)
            AND (CDPAIS = V_PAISDEST);
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
            V_IDCALCDIFAL := w_S;
      END;*/

      V_CFOP1DIGT := NULL;
      BEGIN
         SELECT MAX(SUBSTR(CDFISOPEITEM, 1, 1)) AS PRIMEIRODIGITO
           INTO V_CFOP1DIGT
           FROM ITEMPRODUTO
          WHERE CDFILIAL = P_FILIAL
            AND NRLANCTONF = P_LANCTONF;
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
            V_CFOP1DIGT := NULL;
      END;

      IF (V_CFOP1DIGT = '6') THEN --(V_IDCALCDIFAL = w_S) AND
         FOR C_ITEMPRODUTO_DIFAL IN (SELECT NRSEQITPROD
                                       FROM ITEMPRODUTO
                                      WHERE CDFILIAL = P_FILIAL
                                        AND NRLANCTONF = P_LANCTONF) LOOP
            BEGIN
               SELECT NVL(IDCALCDIFAL, w_S)
                 INTO V_IDCALCDIFAL
                 FROM CALCDIFALIMP C, IMPOSTO I, ITEMPROIMPOS IT
                WHERE (C.CDIMPOSTO = I.CDIMPOSTO)
                  AND (I.CDIMPOSTONFE = '00')
                  AND (IT.CDFILIAL = P_FILIAL)
                  AND (IT.NRLANCTONF = P_LANCTONF)
                  AND (IT.NRSEQITPROD = C_ITEMPRODUTO_DIFAL.NRSEQITPROD)
                  AND (IT.CDIMPOSTO = I.CDIMPOSTO)
                  AND (IT.NRITPROIMPOS = '1')
                  AND (C.CDPAIS = V_PAISDEST)
                  AND (C.SGESTADO = V_ESTADEST);
                  --AND ((INSTR(I.DSESTCALCDIFAL, V_ESTADEST) > 0) OR (I.DSESTCALCDIFAL = 'T') OR (I.DSESTCALCDIFAL = 'N'));
            EXCEPTION
               WHEN NO_DATA_FOUND THEN
                  V_IDCALCDIFAL := w_S;
            END;
            IF V_IDCALCDIFAL = w_S THEN
               GERA_ICMS_INTERESTADUAL(P_FILIAL, P_LANCTONF, C_ITEMPRODUTO_DIFAL.NRSEQITPROD, P_INIVALID);
            END IF;
         END LOOP;
      END IF;

      SELECT MAX(NRDADOADIC)
        INTO V_DADOADIC
        FROM DADOSADIC
       WHERE (CDFILIAL = P_FILIAL)
         AND (NRLANCTONF = P_LANCTONF);
      IF (V_DADOADIC IS NULL) THEN
         V_DADOADIC := W_001;
      ELSE
         V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
      END IF;
      -- FIM DA TOTALIZAÇÃO DOS IMPOSTOS


      -- NOTAS COM DOCUMENTO DE ORIGEM
      IF (V_IDDEVOLIST = 'S') THEN
         DELETE FROM DADOSADIC
          WHERE CDFILIAL = P_FILIAL
            AND NRLANCTONF = P_LANCTONF
            AND DSDADOADIC LIKE 'Nota de Origem:%';
         -- gravar dados adicionais
         FOR C_ITEMNOTAFISC IN (SELECT IT.CDFILIALIT, IT.NRLANCTONFIT, NVL(N.NRNOTAFISCALELE, N.NRNOTAFISC) AS NRNOTA,
                              TO_CHAR(N.DTEMISSAO,  'DD/MM/YYYY') AS DTEMISSAO, N.VRNOTAFISC
                    FROM ITEMNOTAFISC IT, NOTAFISCAL N
                    WHERE IT.CDFILIAL   = P_FILIAL
                      AND IT.NRLANCTONF = P_LANCTONF
                      AND IT.CDFILIALIT   = N.CDFILIAL
                      AND IT.NRLANCTONFIT = N.NRLANCTONF) LOOP

               INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
                  VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, 'Nota de Origem: '||C_ITEMNOTAFISC.NRNOTA||' (Emissão: '||C_ITEMNOTAFISC.DTEMISSAO||' Total: '||DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(C_ITEMNOTAFISC.VRNOTAFISC, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(C_ITEMNOTAFISC.VRNOTAFISC, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(C_ITEMNOTAFISC.VRNOTAFISC, 2), '9999999999999.99')))|| ' )');
                         V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
         -- dados adicionais para devolucao em lista

         END LOOP;
         SELECT COUNT(*)
           INTO   V_COUNT
           FROM ITEMNOTAFISC
           WHERE CDFILIAL   = P_FILIAL AND
                 NRLANCTONF = P_LANCTONF;

         IF ((V_IDCONTCONFORIG = 'S') AND (V_COUNT = 1)) THEN
            FOR C_ITEMPROD IN (SELECT IT.*, P.CDARVPROD
                            FROM ITEMPRODUTO IT, PRODUTO P
                            WHERE IT.CDFILIAL   = P_FILIAL   AND
                                  IT.NRLANCTONF = P_LANCTONF AND
                                  IT.CDPRODUTO  = P.CDPRODUTO) LOOP

               FOR C_ITEMNOTAFISC IN (SELECT CDFILIALIT, NRLANCTONFIT
                                        FROM ITEMNOTAFISC
                                        WHERE CDFILIAL   = P_FILIAL AND
                                              NRLANCTONF = P_LANCTONF) LOOP
                    Begin
                       SELECT SUM(I.QTITEMPROD)
                         INTO V_SOMAQITEMPROD
                         FROM ITEMPRODUTO I
                        WHERE CDFILIAL    = C_ITEMNOTAFISC.CDFILIALIT                                          AND
                              NRLANCTONF  = C_ITEMNOTAFISC.NRLANCTONFIT                                        AND
                              CDPRODUTO   = C_ITEMPROD.CDPRODUTO                                               AND
                             ((NRSEQITPROD = C_ITEMPROD.NRSEQITPRODORIG AND C_ITEMPROD.NRSEQITPRODORIG IS NOT NULL) OR
                             (C_ITEMPROD.NRSEQITPRODORIG IS NULL AND ROUND(VRUNITITEM, 5) = ROUND(C_ITEMPROD.VRUNITITEM, 5) AND
                             (NVL(NRLOTEESTQ, ' ')  = (NVL(C_ITEMPROD.NRLOTEESTQ, ' ')))                      AND
                             (NVL(NRSUBLOTE , ' ')  = (NVL(C_ITEMPROD.NRSUBLOTE , ' '))) ));                              
                              /*ROUND(VRUNITITEM, V_NRDECITOTANF) = ROUND(C_ITEMPROD.VRUNITITEM, V_NRDECITOTANF) AND
                              (NVL(NRLOTEESTQ, ' ')  = (NVL(C_ITEMPROD.NRLOTEESTQ, ' ')))                      AND
                              (NVL(NRSUBLOTE , ' ')  = (NVL(C_ITEMPROD.NRSUBLOTE , ' ')));*/

                       SELECT NVL(MAX(C_ITEMPROD.QTITEMPROD / V_SOMAQITEMPROD),1) AS VRFATOCONV,
                              NVL(SUM(VRBRUTITEM),0), NVL(SUM(VRCONTITEM),0), NVL(SUM(VRENCARGOIMPXML), 0)
                         INTO V_VRFATOCONV, V_VRBRUTO, V_VRCONTAB, V_VRENCARGOIMPXML
                         FROM ITEMPRODUTO I
                        WHERE CDFILIAL    = C_ITEMNOTAFISC.CDFILIALIT                                          AND
                              NRLANCTONF  = C_ITEMNOTAFISC.NRLANCTONFIT                                        AND
                              CDPRODUTO   = C_ITEMPROD.CDPRODUTO                                               AND
                             ((NRSEQITPROD = C_ITEMPROD.NRSEQITPRODORIG AND C_ITEMPROD.NRSEQITPRODORIG IS NOT NULL) OR
                             (C_ITEMPROD.NRSEQITPRODORIG IS NULL AND ROUND(VRUNITITEM, 5) = ROUND(C_ITEMPROD.VRUNITITEM, 5) AND
                             (NVL(NRLOTEESTQ, ' ')  = (NVL(C_ITEMPROD.NRLOTEESTQ, ' ')))                      AND
                             (NVL(NRSUBLOTE , ' ')  = (NVL(C_ITEMPROD.NRSUBLOTE , ' '))) ));                             
                              /*ROUND(VRUNITITEM, V_NRDECITOTANF) = ROUND(C_ITEMPROD.VRUNITITEM, V_NRDECITOTANF) AND
                              (NVL(NRLOTEESTQ, ' ')  = (NVL(C_ITEMPROD.NRLOTEESTQ, ' ')))                      AND
                              (NVL(NRSUBLOTE , ' ')  = (NVL(C_ITEMPROD.NRSUBLOTE , ' ')));*/
                    Exception
                       When No_Data_Found Then
                          V_VRFATOCONV := 1; V_VRBRUTO := 0; V_VRCONTAB := 0;
                    End;


                    IF P_TIPOOPER <> '03' THEN
                      UPDATE ITEMPRODUTO
                         SET VRCONTITEMORIG = ROUND(V_VRCONTAB * V_VRFATOCONV,2),
                             VRBRUTITEMORIG = ROUND(V_VRBRUTO * V_VRFATOCONV,2),
                             VRCONTITEM = ROUND(V_VRCONTAB * V_VRFATOCONV,2),
                             VRBRUTITEM = ROUND(V_VRBRUTO * V_VRFATOCONV,2),
                             VRENCARGOIMPXML = ROUND(V_VRENCARGOIMPXML * V_VRFATOCONV,2),
                             VRPERDEVOL      = (V_VRFATOCONV * 100)
                       WHERE CDFILIAL    = P_FILIAL                                                           AND
                             NRLANCTONF  = P_LANCTONF                                                         AND
                             CDPRODUTO   = C_ITEMPROD.CDPRODUTO                                               AND
                            ((NRSEQITPROD = C_ITEMPROD.NRSEQITPROD AND C_ITEMPROD.NRSEQITPRODORIG IS NOT NULL) OR
                             (C_ITEMPROD.NRSEQITPRODORIG IS NULL AND ROUND(VRUNITITEM, 5) = ROUND(C_ITEMPROD.VRUNITITEM, 5) AND
                             (NVL(NRLOTEESTQ, ' ')  = (NVL(C_ITEMPROD.NRLOTEESTQ, ' ')))                      AND
                             (NVL(NRSUBLOTE , ' ')  = (NVL(C_ITEMPROD.NRSUBLOTE , ' '))) ));
                             /*ROUND(VRUNITITEM, V_NRDECITOTANF) = ROUND(C_ITEMPROD.VRUNITITEM, V_NRDECITOTANF) AND
                             (NVL(NRLOTEESTQ, ' ') = (NVL(C_ITEMPROD.NRLOTEESTQ, ' ')))                       AND
                             (NVL(NRSUBLOTE , ' ') = (NVL(C_ITEMPROD.NRSUBLOTE , ' ')));*/
                    END IF;

                    IF V_CDINTEGRACAO IS NOT NULL THEN
                       IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                          UPDATE ITEMPRODUTO
                          SET VRCONTITEM = TRUNC((V_VRCONTAB * V_VRFATOCONV),2),
                              VRBRUTITEM = TRUNC((V_VRBRUTO * V_VRFATOCONV),2)
                          WHERE CDFILIAL    = P_FILIAL                                                           AND
                                NRLANCTONF  = P_LANCTONF                                                         AND
                                CDPRODUTO   = C_ITEMPROD.CDPRODUTO                                               AND
                                ROUND(VRUNITITEM, V_NRDECITOTANF) = ROUND(C_ITEMPROD.VRUNITITEM, V_NRDECITOTANF) AND
                               (NVL(NRLOTEESTQ, ' ') = (NVL(C_ITEMPROD.NRLOTEESTQ, ' ')))                        AND
                               (NVL(NRSUBLOTE , ' ') = (NVL(C_ITEMPROD.NRSUBLOTE , ' ')));
                       ELSE
                          UPDATE ITEMPRODUTO
                          SET VRCONTITEM = ROUND(V_VRCONTAB * V_VRFATOCONV,2),
                              VRBRUTITEM = ROUND(V_VRBRUTO * V_VRFATOCONV,2)
                          WHERE CDFILIAL    = P_FILIAL                                                           AND
                                NRLANCTONF  = P_LANCTONF                                                         AND
                                CDPRODUTO   = C_ITEMPROD.CDPRODUTO                                               AND
                                ROUND(VRUNITITEM, V_NRDECITOTANF) = ROUND(C_ITEMPROD.VRUNITITEM, V_NRDECITOTANF) AND
                               (NVL(NRLOTEESTQ, ' ') = (NVL(C_ITEMPROD.NRLOTEESTQ, ' ')))                        AND
                               (NVL(NRSUBLOTE , ' ') = (NVL(C_ITEMPROD.NRSUBLOTE , ' ')));
                       END IF;
                    END IF;
                 END LOOP;
            END LOOP;
         END IF; 

      END IF;
   ELSIF ((P_TIPOOPER IN ('07','10')) OR (V_IDOPERDEVONF = w_S) OR (V_ESTORNOCANC = w_S) OR (V_IDDEVOLIST = w_S)) AND (V_IDNFAJUSTE <> w_S)THEN

      DELETE FROM ITEMPROIMPOS
      WHERE CDFILIAL   = P_FILIAL AND
            NRLANCTONF = P_LANCTONF;

      DELETE FROM ITEMPROIMPOSORIG
      WHERE CDFILIAL   = P_FILIAL AND
            NRLANCTONF = P_LANCTONF;

      V_VRTOTALIPI := 0;
      V_VRTOTALICMSST := 0;
      V_CDENCARGOICMST := NULL;
      V_CDENQLEGALIPI := NULL;
      V_CDCEST := NULL;

      SELECT NVL(MAX(IDGERICMSTDESPA), 'N'), MAX(CDENCARGOICMST), NVL(MAX(IDPEINFICMSTDEME), 'N'), NVL(MAX(IDGERIPIDESPA), 'N')
        INTO V_IDGERICMSTDESPA, V_CDENCARGOICMST, V_IDPEINFICMSTDEME, V_IDGERIPIDESPA
        FROM TIPOOPERAC
       WHERE IDENTRSAIDOP = 'S'
         AND CDTIPOOPER = P_TIPOOPER;

      SELECT MAX(IDUTCTRLFISSAID)
        INTO V_IDUTCTRLFISSAID
        FROM PARAMGERAL;

      SELECT MAX(IDUTCTRLFISSAID)
        INTO V_IDUTCTRLFISFIL
        FROM PARAMFILIAL
       WHERE CDFILIAL = V_CDFILIEMIT;

      IF V_IDUTCTRLFISSAID = 'S' THEN
         V_IDUTCTRLFIS := 'S';
      ELSE
         IF V_IDUTCTRLFISFIL = 'S' THEN
            V_IDUTCTRLFIS := 'S';
         ELSE
            V_IDUTCTRLFIS := 'N';
         END IF;
      END IF;

      V_UPDENCIMPXML := 'N';


      FOR C_ITEMPROD IN (SELECT IT.*, P.CDARVPROD
                         FROM ITEMPRODUTO IT, PRODUTO P
                         WHERE IT.CDFILIAL   = P_FILIAL   AND
                               IT.NRLANCTONF = P_LANCTONF AND
                               IT.CDPRODUTO  = P.CDPRODUTO) LOOP

         V_LIQUIITEM := C_ITEMPROD.VRTOTAITEM - C_ITEMPROD.VRDESCITEM;

         IF (C_ITEMPROD.IDPRODBONIF = 'N') OR (V_CDTIPOOPERBONIF = 'N') THEN
            CONSULTA_CST(w_S, P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, P_TIPOOPER, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, V_IDINTEREST, V_IDINTERNA, NULL, C_ITEMPROD.IDORIGEMPROD);
         ELSE
            CONSULTA_CST(w_S, P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, V_CDTIPOOPERBONIF, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, V_IDINTEREST, V_IDINTERNA, NULL, C_ITEMPROD.IDORIGEMPROD);
         END IF;

         SELECT MAX(CDSITTRIBTMP)
         INTO   V_SITUTRIBPR
         FROM CSTTEMP
         WHERE (NRCSTTEMP = V_CSTTEMP);

         IF (V_IDOPERDEVONF <> w_S) THEN
            FOR C_CSTTEMP IN (SELECT DSMENSCSTTMP
                              FROM CSTTEMP
                              WHERE (NRCSTTEMP = V_CSTTEMP) AND
                                    (DSMENSCSTTMP IS NOT NULL) AND
                                    (NOT EXISTS(SELECT DSDADOADIC
                                                FROM DADOSADIC
                                                WHERE (CDFILIAL   = P_FILIAL)   AND
                                                      (NRLANCTONF = P_LANCTONF) AND
                                                      (DSDADOADIC LIKE CSTTEMP.DSMENSCSTTMP || '%')))) LOOP

               IF NOT (C_CSTTEMP.DSMENSCSTTMP IS NULL) THEN
                  /*PREENCHE AS MENSAGENS ATRELADAS AO CST*/
                  INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
                                 VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, C_CSTTEMP.DSMENSCSTTMP);

                  V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
               END IF;
            END LOOP;
         END IF;

         IF (C_ITEMPROD.IDPRODBONIF = 'N') OR (V_CDTIPOOPERBONIF = 'N') THEN
            CONSULTA_CFOP(w_S, P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, P_TIPOOPER, V_PAISORIG,
                           V_ESTAORIG, V_PAISCFOP, V_ESTACFOP, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_INIVALID, C_ITEMPROD.IDORIGEMPROD);
         ELSE
            CONSULTA_CFOP(w_S, P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, V_CDTIPOOPERBONIF, V_PAISORIG,
                           V_ESTAORIG, V_PAISCFOP, V_ESTACFOP, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_INIVALID, C_ITEMPROD.IDORIGEMPROD);
         END IF;

         FOR C_CFOPTEMP IN (SELECT DSMENSCFOTMP
                            FROM CFOPTEMP
                            WHERE (NRCFOPTEMP = V_CFOPTEMP) AND
                                  (DSMENSCFOTMP IS NOT NULL) AND
                                  (NOT EXISTS(SELECT DSDADOADIC
                                              FROM DADOSADIC
                                              WHERE (CDFILIAL   = P_FILIAL)   AND
                                                    (NRLANCTONF = P_LANCTONF) AND
                                                    (DSDADOADIC LIKE CFOPTEMP.DSMENSCFOTMP || '%')))) LOOP

            IF NOT(C_CFOPTEMP.DSMENSCFOTMP IS NULL) THEN
               /*PREENCHE AS MENSAGENS ATRELADAS AO CFOP*/
               INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
                              VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, C_CFOPTEMP.DSMENSCFOTMP);

               V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
            END IF;
         END LOOP;

         IF (NVL(V_CFOPINFUSU, 'N') <> 'S') AND (V_CDFISCOPERREGRA IS NOT NULL) THEN
            V_DSCDFISOPEITREGRA := SUBSTR(DESCRICAO_CFOP(V_CDFISCOPERREGRA),1,45);
         END IF;

         IF (V_DSCDFISOPEITREGRA IS NOT NULL) THEN
            UPDATE NOTAFISCAL
               SET DSCDFISOPENF = V_DSCDFISOPEITREGRA
             WHERE CDFILIAL   = P_FILIAL   AND
                   NRLANCTONF = P_LANCTONF;
         ELSE
            UPDATE NOTAFISCAL
               SET DSCDFISOPENF = (SELECT MAX(DSCFOPTMP)
                                     FROM CFOPTEMP
                                    WHERE NRCFOPTEMP = V_CFOPTEMP)
             WHERE CDFILIAL   = P_FILIAL
               AND NRLANCTONF = P_LANCTONF;

         END IF;

         SELECT MAX(CDFISOPETMP), MAX(CDSUFCFOPTMP),SUBSTR(MAX(DSCFOPTMP),1,50)
         INTO   V_FISOPEITEM,     V_SUFXCFOPPR,     V_DSCDFISOPEIT
         FROM CFOPTEMP
         WHERE NRCFOPTEMP = V_CFOPTEMP;

         IF (C_ITEMPROD.IDPRODBONIF = 'N') OR (V_CDTIPOOPERBONIF = 'N') THEN
            CONSULTA_CSOSN('S', P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, P_TIPOOPER, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC,V_IDINTEREST, V_CDFISCOPERSN);
         ELSE
            CONSULTA_CSOSN('S', P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, V_CDTIPOOPERBONIF, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC,V_IDINTEREST, V_CDFISCOPERSN);
         END IF;

         IF (NVL(V_CFOPINFUSU, 'N') <> 'S') AND (V_CDFISCOPERREGRA IS NOT NULL) THEN
            V_FISOPEITEM := NVL(V_CDFISCOPERREGRA, V_FISOPEITEM);
            V_DSCDFISOPEITREGRA := SUBSTR(DESCRICAO_CFOP(V_CDFISCOPERREGRA),1,45);
         END IF;

         UPDATE ITEMPRODUTO
         SET CDFISOPEITEM = V_FISOPEITEM,
             CDSUFXCFOPPR = V_SUFXCFOPPR,
             CDSITUTRIBPR  = NVL(V_SITUTRIBPR, C_ITEMPROD.CDSITUTRIBPR),
             DSCDFISOPEIT = V_DSCDFISOPEIT,
             CDFISCOPERSN = V_CDFISCOPERSN
         WHERE CDFILIAL    = P_FILIAL     AND
               NRLANCTONF  = P_LANCTONF   AND
               NRSEQITPROD = C_ITEMPROD.NRSEQITPROD;

         IF V_IDOPERDEVONF = w_S THEN
            FOR C_ITEMNOTAFISC IN (SELECT CDFILIALIT, NRLANCTONFIT
                                   FROM ITEMNOTAFISC
                                   WHERE CDFILIAL   = P_FILIAL AND
                                         NRLANCTONF = P_LANCTONF) LOOP
               Begin
                  SELECT SUM(I.QTITEMPROD)
                    INTO V_SOMAQITEMPROD
                    FROM ITEMPRODUTO I
                   WHERE CDFILIAL    = C_ITEMNOTAFISC.CDFILIALIT                                          AND
                         NRLANCTONF  = C_ITEMNOTAFISC.NRLANCTONFIT                                        AND
                         CDPRODUTO   = C_ITEMPROD.CDPRODUTO                                               AND
                         ((NRSEQITPROD = C_ITEMPROD.NRSEQITPRODORIG AND C_ITEMPROD.NRSEQITPRODORIG IS NOT NULL) OR
                         (C_ITEMPROD.NRSEQITPRODORIG IS NULL AND ROUND(VRUNITITEM, 5) = ROUND(C_ITEMPROD.VRUNITITEM, 5) AND
                         (NVL(NRLOTEESTQ, ' ')  = (NVL(C_ITEMPROD.NRLOTEESTQ, ' ')))                      AND
                         (NVL(NRSUBLOTE , ' ')  = (NVL(C_ITEMPROD.NRSUBLOTE , ' '))) ));
                         /*NRSEQITPROD = C_ITEMPROD.NRSEQITPRODORIG                                     AND
                         ROUND(VRUNITITEM, 5) = ROUND(C_ITEMPROD.VRUNITITEM, 5) AND
                         (NVL(NRLOTEESTQ, ' ')  = (NVL(C_ITEMPROD.NRLOTEESTQ, ' ')))                      AND
                         (NVL(NRSUBLOTE , ' ')  = (NVL(C_ITEMPROD.NRSUBLOTE , ' ')));*/

                  SELECT NVL(MAX(C_ITEMPROD.QTITEMPROD / V_SOMAQITEMPROD),1) AS VRFATOCONV,
                         NVL(SUM(VRBRUTITEM),0), NVL(SUM(VRCONTITEM),0), NVL(SUM(VRENCARGOIMPXML), 0)
                    INTO V_VRFATOCONV, V_VRBRUTO, V_VRCONTAB, V_VRENCARGOIMPXML
                    FROM ITEMPRODUTO I
                   WHERE CDFILIAL    = C_ITEMNOTAFISC.CDFILIALIT                                          AND
                         NRLANCTONF  = C_ITEMNOTAFISC.NRLANCTONFIT                                        AND
                         CDPRODUTO   = C_ITEMPROD.CDPRODUTO                                               AND
                         ((NRSEQITPROD = C_ITEMPROD.NRSEQITPRODORIG AND C_ITEMPROD.NRSEQITPRODORIG IS NOT NULL) OR
                         (C_ITEMPROD.NRSEQITPRODORIG IS NULL AND ROUND(VRUNITITEM, 5) = ROUND(C_ITEMPROD.VRUNITITEM, 5) AND
                         (NVL(NRLOTEESTQ, ' ')  = (NVL(C_ITEMPROD.NRLOTEESTQ, ' ')))                      AND
                         (NVL(NRSUBLOTE , ' ')  = (NVL(C_ITEMPROD.NRSUBLOTE , ' '))) ));
                         
               Exception
                  When No_Data_Found Then
                     V_VRFATOCONV := 1; V_VRBRUTO := 0; V_VRCONTAB := 0;
               End;

              /*IF P_TIPOOPER = '03' THEN
                 Begin
                    SELECT NVL(C_ITEMPROD.VRTOTAITEM / SUM(I.VRTOTAITEM) ,1) AS VRFATOCONV,
                           NVL(SUM(VRBRUTITEM),0), NVL(SUM(VRCONTITEM),0)
                    INTO   V_VRFATOCONV, V_VRBRUTO, V_VRCONTAB
                    FROM ITEMPRODUTO I
                    WHERE CDFILIAL    = C_ITEMNOTAFISC.CDFILIALIT                                          AND
                          NRLANCTONF  = C_ITEMNOTAFISC.NRLANCTONFIT                                        AND
                          CDPRODUTO   = C_ITEMPROD.CDPRODUTO                                               AND
                          ROUND(VRUNITITEM, V_NRDECITOTANF) = ROUND(C_ITEMPROD.VRUNITITEM, V_NRDECITOTANF) AND
                          (NVL(NRLOTEESTQ, ' ')  = (NVL(C_ITEMPROD.NRLOTEESTQ, ' ')))                      AND
                          (NVL(NRSUBLOTE , ' ')  = (NVL(C_ITEMPROD.NRSUBLOTE , ' ')));
                 Exception
                    When No_Data_Found Then
                       V_VRFATOCONV := 1; V_VRBRUTO := 0; V_VRCONTAB := 0;
                 End;
              END IF;*/
              IF (P_TIPOOPER <> '03' AND V_VRCONTAB > 0 AND V_IDCONTCONFORIG = 'S') THEN
                 UPDATE ITEMPRODUTO
                    SET VRCONTITEMORIG = ROUND(V_VRCONTAB * V_VRFATOCONV,2),
                        VRBRUTITEMORIG = ROUND(V_VRBRUTO * V_VRFATOCONV,2),
                        VRCONTITEM = ROUND(V_VRCONTAB * V_VRFATOCONV,2),
                        VRBRUTITEM = ROUND(V_VRBRUTO * V_VRFATOCONV,2),
                        VRENCARGOIMPXML = ROUND(V_VRENCARGOIMPXML * V_VRFATOCONV,2),
                        VRPERDEVOL      = (V_VRFATOCONV * 100)
                  WHERE CDFILIAL    = P_FILIAL                                                           AND
                        NRLANCTONF  = P_LANCTONF                                                         AND
                        CDPRODUTO   = C_ITEMPROD.CDPRODUTO                                               AND
                        ((NRSEQITPROD = C_ITEMPROD.NRSEQITPROD AND C_ITEMPROD.NRSEQITPRODORIG IS NOT NULL) OR
                         (C_ITEMPROD.NRSEQITPRODORIG IS NULL AND ROUND(VRUNITITEM, 5) = ROUND(C_ITEMPROD.VRUNITITEM, 5) AND
                         (NVL(NRLOTEESTQ, ' ')  = (NVL(C_ITEMPROD.NRLOTEESTQ, ' ')))                      AND
                         (NVL(NRSUBLOTE , ' ')  = (NVL(C_ITEMPROD.NRSUBLOTE , ' '))) ));
                        /*(NRSEQITPROD = C_ITEMPROD.NRSEQITPROD AND NRSEQITPRODORIG IS NOT NULL)           AND
                        ROUND(VRUNITITEM, 5) = ROUND(C_ITEMPROD.VRUNITITEM, 5) AND
                        (NVL(NRLOTEESTQ, ' ') = (NVL(C_ITEMPROD.NRLOTEESTQ, ' ')))                       AND
                        (NVL(NRSUBLOTE , ' ') = (NVL(C_ITEMPROD.NRSUBLOTE , ' ')));*/
               END IF;

               IF V_CDINTEGRACAO IS NOT NULL THEN
                  IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                     UPDATE ITEMPRODUTO
                     SET VRCONTITEM = TRUNC((V_VRCONTAB * V_VRFATOCONV),2),
                         VRBRUTITEM = TRUNC((V_VRBRUTO * V_VRFATOCONV),2)
                     WHERE CDFILIAL    = P_FILIAL                                                           AND
                           NRLANCTONF  = P_LANCTONF                                                         AND
                           CDPRODUTO   = C_ITEMPROD.CDPRODUTO                                               AND
                           ROUND(VRUNITITEM, 5) = ROUND(C_ITEMPROD.VRUNITITEM, 5) AND
                          (NVL(NRLOTEESTQ, ' ') = (NVL(C_ITEMPROD.NRLOTEESTQ, ' ')))                        AND
                          (NVL(NRSUBLOTE , ' ') = (NVL(C_ITEMPROD.NRSUBLOTE , ' ')));
                  ELSE
                     UPDATE ITEMPRODUTO
                     SET VRCONTITEM = ROUND(V_VRCONTAB * V_VRFATOCONV,2),
                         VRBRUTITEM = ROUND(V_VRBRUTO * V_VRFATOCONV,2)
                     WHERE CDFILIAL    = P_FILIAL                                                           AND
                           NRLANCTONF  = P_LANCTONF                                                         AND
                           CDPRODUTO   = C_ITEMPROD.CDPRODUTO                                               AND
                           ROUND(VRUNITITEM, 5) = ROUND(C_ITEMPROD.VRUNITITEM, 5) AND
                          (NVL(NRLOTEESTQ, ' ') = (NVL(C_ITEMPROD.NRLOTEESTQ, ' ')))                        AND
                          (NVL(NRSUBLOTE , ' ') = (NVL(C_ITEMPROD.NRSUBLOTE , ' ')));
                  END IF;
               END IF;
               V_CDIMPOSRECALC := NULL;

               UPDATE ITEMPRODUTO
                  SET IDUTILBCPMC = 'N'
                WHERE CDFILIAL = P_FILIAL
                  AND NRLANCTONF = P_LANCTONF
                  AND NRSEQITPROD = C_ITEMPROD.NRSEQITPROD;

               IF (V_IDCONTCONFORIG = 'N') THEN
                  UPDATE ITEMPRODUTO
                     SET VRCONTITEMORIG = (VRTOTAITEM - VRDESCITEM),
                         VRCONTITEM     = (VRTOTAITEM - VRDESCITEM),
                         VRBRUTITEMORIG = VRTOTAITEM,
                         VRBRUTITEM     = VRTOTAITEM
                   WHERE CDFILIAL       = P_FILIAL
                     AND NRLANCTONF     = P_LANCTONF
                     AND NRSEQITPROD    = C_ITEMPROD.NRSEQITPROD;
               END IF;

               /*IMPOSTOS POR ITEM DA NOTA DE ORIGEM*/

               SELECT COUNT(*)
                 INTO V_QTDCDPRODUTO
                 FROM ITEMPRODUTO
                WHERE CDFILIAL = C_ITEMNOTAFISC.CDFILIALIT
                  AND NRLANCTONF = C_ITEMNOTAFISC.NRLANCTONFIT
                  AND CDPRODUTO = C_ITEMPROD.CDPRODUTO;

               BEGIN
                  SELECT NVL(IDNFGERADAVIAXML, 'N')
                    INTO V_IDNFGERADAVIAXML
                    FROM NOTAFISCAL
                   WHERE CDFILIAL = C_ITEMNOTAFISC.CDFILIALIT
                     AND NRLANCTONF = C_ITEMNOTAFISC.NRLANCTONFIT;
               EXCEPTION
                  WHEN NO_DATA_FOUND THEN
                     V_IDNFGERADAVIAXML := 'N';
               END;

               IF V_QTDCDPRODUTO > 1 THEN
                  FOR C_ITEMPROIMPOS IN (SELECT VRPERREDBCIT,  NRITPROIMPOS, IT.CDIMPOSTO, CDFISCALIT, VRALIQITEM, VRPARDEDIT, SUM(VRCONTITIMP) AS VRCONTITIMP,
                                                SUM(VRBASECALCIT) AS VRBASECALCIT, SUM(VRIMPOSTOIT) AS VRIMPOSTOIT, CDSITUTRIBITNFE AS CDSITUTRIBNFE,
                                                IDMODBCITNFE AS IDMODBCNFE, IDMODBCSTITNFE AS IDMODBCSTNFE, CDTPCREDPICOITE, CDNATUBCALPCIT,
                                                IDMOTDESONERAIT, IDTRIMPSTII, NVL(IDDIFALIQCUSPRI, 'N') AS IDDIFALIQCUSPRI, IM.CDIMPOSTONFE,
                                                IT.CDENQLEGALIPI, IT.CDCEST,
                                                NVL(I.IDUTVRPAUTAPROD, 'N') AS IDUTVRPAUTAPROD, NVL(I.VRPAUTAMINPROD, 1) AS VRPAUTAMINPROD, SUM(I.QTITEMPROD) AS QTITEMPROD,
                                                IM.IDUTVRPAUTA, NVL(IT.VRADICALIQFECP, 0) AS VRADICALIQFECP, NVL(SUM(IT.VRADICFECP), 0) AS VRADICFECP,
                                                I.CDFISOPEITEM, IT.CDBENEFFISCAL,
                                                NVL(IT.IDVALORINFIT, W_N) AS IDVALORINFIT
                                           FROM ITEMPROIMPOS IT, ITEMPRODUTO I, IMPOSTO IM
                                          WHERE IT.CDFILIAL = C_ITEMNOTAFISC.CDFILIALIT
                                            AND IT.NRLANCTONF = C_ITEMNOTAFISC.NRLANCTONFIT
                                            AND I.CDFILIAL = C_ITEMNOTAFISC.CDFILIALIT
                                            AND I.NRLANCTONF = C_ITEMNOTAFISC.NRLANCTONFIT
                                            AND IT.NRSEQITPROD = I.NRSEQITPROD
                                            AND IT.CDIMPOSTO = IM.CDIMPOSTO
                                            AND I.CDPRODUTO = C_ITEMPROD.CDPRODUTO
                                            AND IT.NRITPROIMPOS = '1'
                                            AND ROUND(I.VRUNITITEM, 5) = ROUND(C_ITEMPROD.VRUNITITEM, 5)
                                            AND (NVL(I.NRLOTEESTQ, ' ') = (NVL(C_ITEMPROD.NRLOTEESTQ, ' ')))
                                            AND (NVL(I.NRSUBLOTE, ' ') = (NVL(C_ITEMPROD.NRSUBLOTE,  ' ')))
                                          GROUP BY VRPERREDBCIT,
                                                IT.CDIMPOSTO,
                                                NRITPROIMPOS,
                                                CDFISCALIT,
                                                VRALIQITEM,
                                                VRPARDEDIT,
                                                CDSITUTRIBITNFE,
                                                IDMODBCITNFE,
                                                IDMODBCSTITNFE,
                                                CDTPCREDPICOITE,
                                                CDNATUBCALPCIT,
                                                IDMOTDESONERAIT,
                                                IDTRIMPSTII,
                                                IDDIFALIQCUSPRI,
                                                IM.CDIMPOSTONFE,
                                                IT.CDENQLEGALIPI,
                                                IT.CDCEST,
                                                NVL(I.IDUTVRPAUTAPROD, 'N'),
                                                NVL(I.VRPAUTAMINPROD, 1),
                                                --I.QTITEMPROD,
                                                IM.IDUTVRPAUTA,
                                                NVL(IT.VRADICALIQFECP, 0),
                                                I.CDFISOPEITEM,
                                                IT.CDBENEFFISCAL,
                                                NVL(IT.IDVALORINFIT, W_N)
                                          ORDER BY CDIMPOSTO) LOOP

                     /*IMPOSTO DE SUBSTITUICAO TRIBUTARIA*/
                     V_CDIMPOSTRIB  := null;

                     V_CDBENEFFISCAL := NULL;

                     FOR C_ICMSST IN (SELECT CDIMPOSTO
                                        FROM IMPOSTO
                                       WHERE CDIMPOSTRIB = C_ITEMPROIMPOS.CDIMPOSTO)
                     LOOP
                        V_CDIMPOSTRIB := V_CDIMPOSTRIB||C_ICMSST.CDIMPOSTO||'_';
                     END LOOP;

                     V_CDIMPOSIPI := null;
                     SELECT NVL(MAX(IDGERIPIDESPA), 'N'), MAX(CDIMPOSTOIPI)
                       INTO V_IDGERIPIDESPA, V_CDIMPOSIPI
                       FROM TIPOOPERAC
                      WHERE IDENTRSAIDOP = 'S'
                        AND CDTIPOOPER = P_TIPOOPER
                        AND CDIMPOSTOIPI = C_ITEMPROIMPOS.CDIMPOSTO;

                     IF (V_IDGERICMSTDESPA = 'S') AND (V_CDIMPOSTRIB IS NOT NULL) AND (V_IDUTCTRLFIS = 'S') THEN
                        IF NOT((C_ITEMPROIMPOS.VRPERREDBCIT > 0.00) AND (C_ITEMPROIMPOS.NRITPROIMPOS = w_2)) THEN
                           V_VRTOTALICMSST := V_VRTOTALICMSST + (C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV);
                        END IF;
                        IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
                           INSERT INTO ITEMPROIMPOSORIG(CDFILIAL,     NRLANCTONF,     NRSEQITPROD,     CDIMPOSTO,      NRITPROIMPOS,    CDFISCALIT,
                                                    CDSITUTRIBIT, CDFISCOPERIT,   CDSUFXCFOPIT,    VRALIQITEM,     VRPERREDBCIT,    VRPARDEDIT,
                                                    VRCONTITIMP,  VRBASECALCIT,   VRIMPOSTOIT,     IDERROSIMPIT,   IDAVISIMPIT,     CDSITUTRIBITNFE,
                                                    IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT, IDTRIMPSTII,
                                                    CDDETALHEPROD, CDENQLEGALIPI, CDCEST,          CDBENEFFISCAL)
                           VALUES(P_FILIAL, P_LANCTONF, C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, C_ITEMPROIMPOS.NRITPROIMPOS, C_ITEMPROIMPOS.CDFISCALIT,
                                  C_ITEMPROD.CDSITUTRIBPR, V_FISOPEITEM, V_SUFXCFOPPR, C_ITEMPROIMPOS.VRALIQITEM, C_ITEMPROIMPOS.VRPERREDBCIT, TRUNC((C_ITEMPROIMPOS.VRPARDEDIT * V_VRFATOCONV),2),
                                  TRUNC((C_ITEMPROIMPOS.VRCONTITIMP * V_VRFATOCONV),2), TRUNC((C_ITEMPROIMPOS.VRBASECALCIT * V_VRFATOCONV),2),
                                  TRUNC((C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV),2), w_00000, w_00000, C_ITEMPROIMPOS.CDSITUTRIBNFE,
                                  C_ITEMPROIMPOS.IDMODBCNFE, C_ITEMPROIMPOS.IDMODBCSTNFE, C_ITEMPROIMPOS.CDTPCREDPICOITE, C_ITEMPROIMPOS.CDNATUBCALPCIT, NVL(C_ITEMPROIMPOS.IDMOTDESONERAIT,'9'), C_ITEMPROIMPOS.IDTRIMPSTII,
                                  V_CDDETALHEPRODTEMP, C_ITEMPROIMPOS.CDENQLEGALIPI, C_ITEMPROIMPOS.CDCEST, C_ITEMPROIMPOS.CDBENEFFISCAL);
                        ELSE
                           INSERT INTO ITEMPROIMPOSORIG(CDFILIAL,     NRLANCTONF,     NRSEQITPROD,     CDIMPOSTO,      NRITPROIMPOS,    CDFISCALIT,
                                                    CDSITUTRIBIT, CDFISCOPERIT,   CDSUFXCFOPIT,    VRALIQITEM,     VRPERREDBCIT,    VRPARDEDIT,
                                                    VRCONTITIMP,  VRBASECALCIT,   VRIMPOSTOIT,     IDERROSIMPIT,   IDAVISIMPIT,     CDSITUTRIBITNFE,
                                                    IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT, IDTRIMPSTII,
                                                    CDDETALHEPROD, CDENQLEGALIPI, CDCEST,          CDBENEFFISCAL)
                           VALUES(P_FILIAL, P_LANCTONF, C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, C_ITEMPROIMPOS.NRITPROIMPOS, C_ITEMPROIMPOS.CDFISCALIT,
                                  C_ITEMPROD.CDSITUTRIBPR, V_FISOPEITEM, V_SUFXCFOPPR, C_ITEMPROIMPOS.VRALIQITEM, C_ITEMPROIMPOS.VRPERREDBCIT, (C_ITEMPROIMPOS.VRPARDEDIT * V_VRFATOCONV),
                                  ROUND((C_ITEMPROIMPOS.VRCONTITIMP * V_VRFATOCONV),2), (C_ITEMPROIMPOS.VRBASECALCIT * V_VRFATOCONV),
                                  (C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV), w_00000, w_00000, C_ITEMPROIMPOS.CDSITUTRIBNFE,
                                  C_ITEMPROIMPOS.IDMODBCNFE, C_ITEMPROIMPOS.IDMODBCSTNFE, C_ITEMPROIMPOS.CDTPCREDPICOITE, C_ITEMPROIMPOS.CDNATUBCALPCIT, NVL(C_ITEMPROIMPOS.IDMOTDESONERAIT,'9'), C_ITEMPROIMPOS.IDTRIMPSTII,
                                  V_CDDETALHEPRODTEMP, C_ITEMPROIMPOS.CDENQLEGALIPI, C_ITEMPROIMPOS.CDCEST, C_ITEMPROIMPOS.CDBENEFFISCAL);
                        END IF;
                     END IF;
                     IF (V_IDGERIPIDESPA = 'S') AND (V_CDIMPOSIPI IS NOT NULL) AND (V_IDUTCTRLFIS = 'S') THEN
                        IF NOT((C_ITEMPROIMPOS.VRPERREDBCIT > 0.00) AND (C_ITEMPROIMPOS.NRITPROIMPOS = w_2)) THEN
                           V_VRTOTALIPI := V_VRTOTALIPI + (C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV);
                        END IF;
                        IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
                           INSERT INTO ITEMPROIMPOSORIG(CDFILIAL,     NRLANCTONF,     NRSEQITPROD,     CDIMPOSTO,      NRITPROIMPOS,    CDFISCALIT,
                                                    CDSITUTRIBIT, CDFISCOPERIT,   CDSUFXCFOPIT,    VRALIQITEM,     VRPERREDBCIT,    VRPARDEDIT,
                                                    VRCONTITIMP,  VRBASECALCIT,   VRIMPOSTOIT,     IDERROSIMPIT,   IDAVISIMPIT,     CDSITUTRIBITNFE,
                                                    IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT, IDTRIMPSTII,
                                                    CDDETALHEPROD, CDENQLEGALIPI, CDCEST, CDBENEFFISCAL)
                           VALUES(P_FILIAL, P_LANCTONF, C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, C_ITEMPROIMPOS.NRITPROIMPOS, C_ITEMPROIMPOS.CDFISCALIT,
                                  C_ITEMPROD.CDSITUTRIBPR, V_FISOPEITEM, V_SUFXCFOPPR, C_ITEMPROIMPOS.VRALIQITEM, C_ITEMPROIMPOS.VRPERREDBCIT, TRUNC((C_ITEMPROIMPOS.VRPARDEDIT * V_VRFATOCONV),2),
                                  TRUNC((C_ITEMPROIMPOS.VRCONTITIMP * V_VRFATOCONV),2), TRUNC((C_ITEMPROIMPOS.VRBASECALCIT * V_VRFATOCONV),2),
                                  TRUNC((C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV),2), w_00000, w_00000, C_ITEMPROIMPOS.CDSITUTRIBNFE,
                                  C_ITEMPROIMPOS.IDMODBCNFE, C_ITEMPROIMPOS.IDMODBCSTNFE, C_ITEMPROIMPOS.CDTPCREDPICOITE, C_ITEMPROIMPOS.CDNATUBCALPCIT, NVL(C_ITEMPROIMPOS.IDMOTDESONERAIT,'9'), C_ITEMPROIMPOS.IDTRIMPSTII,
                                  V_CDDETALHEPRODTEMP, C_ITEMPROIMPOS.CDENQLEGALIPI, C_ITEMPROIMPOS.CDCEST, C_ITEMPROIMPOS.CDBENEFFISCAL);
                        ELSE
                           INSERT INTO ITEMPROIMPOSORIG(CDFILIAL,     NRLANCTONF,     NRSEQITPROD,     CDIMPOSTO,      NRITPROIMPOS,    CDFISCALIT,
                                                    CDSITUTRIBIT, CDFISCOPERIT,   CDSUFXCFOPIT,    VRALIQITEM,     VRPERREDBCIT,    VRPARDEDIT,
                                                    VRCONTITIMP,  VRBASECALCIT,   VRIMPOSTOIT,     IDERROSIMPIT,   IDAVISIMPIT,     CDSITUTRIBITNFE,
                                                    IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT, IDTRIMPSTII,
                                                    CDDETALHEPROD, CDENQLEGALIPI, CDCEST, CDBENEFFISCAL)
                           VALUES(P_FILIAL, P_LANCTONF, C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, C_ITEMPROIMPOS.NRITPROIMPOS, C_ITEMPROIMPOS.CDFISCALIT,
                                  C_ITEMPROD.CDSITUTRIBPR, V_FISOPEITEM, V_SUFXCFOPPR, C_ITEMPROIMPOS.VRALIQITEM, C_ITEMPROIMPOS.VRPERREDBCIT, (C_ITEMPROIMPOS.VRPARDEDIT * V_VRFATOCONV),
                                  ROUND((C_ITEMPROIMPOS.VRCONTITIMP * V_VRFATOCONV),2), (C_ITEMPROIMPOS.VRBASECALCIT * V_VRFATOCONV),
                                  (C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV), w_00000, w_00000, C_ITEMPROIMPOS.CDSITUTRIBNFE,
                                  C_ITEMPROIMPOS.IDMODBCNFE, C_ITEMPROIMPOS.IDMODBCSTNFE, C_ITEMPROIMPOS.CDTPCREDPICOITE, C_ITEMPROIMPOS.CDNATUBCALPCIT, NVL(C_ITEMPROIMPOS.IDMOTDESONERAIT,'9'), C_ITEMPROIMPOS.IDTRIMPSTII,
                                  V_CDDETALHEPRODTEMP, C_ITEMPROIMPOS.CDENQLEGALIPI, C_ITEMPROIMPOS.CDCEST, C_ITEMPROIMPOS.CDBENEFFISCAL);
                        END IF;
                     END IF;

                     IF (NOT((V_IDGERICMSTDESPA = 'S') AND (V_CDIMPOSTRIB IS NOT NULL) OR (V_IDGERIPIDESPA = 'S')
                        AND (V_CDIMPOSIPI IS NOT NULL)) AND (V_IDUTCTRLFIS = 'S')) OR (V_IDUTCTRLFIS = 'N') THEN
                        -- Verifica se há grupo fiscal por servico
                        SELECT MAX(CDGRUPOFISC)
                        INTO V_CDGRPFISCSV
                        FROM SERVCLIE SC, SERVICO S
                        WHERE SC.CDFILIAL   = V_CDFILIEMIT AND
                              SC.CDCLIENTE  = P_CLIENTE    AND
                              SC.CDFILIAL   = S.CDFILIAL   AND
                              SC.CDSERVFILI = S.CDSERVFILI AND
                              S.CDPRODUTO   = C_ITEMPROD.CDPRODUTO;

                        IF V_CDGRPFISCSV IS NULL THEN
                        -- Verifica se há grupo fiscal por cliente da filial
                           SELECT MAX(CDGRUPOFISC)
                           INTO V_CDGRPFISCSV
                           FROM CLIENFILIAL
                           WHERE CDFILIAL   = V_CDFILIEMIT AND
                                 CDCLIENTE  = P_CLIENTE;
                        END IF;

                        IF (C_ITEMPROD.IDPRODBONIF = 'N') OR (V_CDTIPOOPERBONIF = 'N') THEN
                           CONSULTA_INCIDENCIA(w_S, P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, P_TIPOOPER, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC,
                                               V_CDGRPFISCSV, V_IDINTEREST, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPROD.IDORIGEMPROD);
                        ELSE
                           CONSULTA_INCIDENCIA(w_S, P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, V_CDTIPOOPERBONIF, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC,
                                               V_CDGRPFISCSV, V_IDINTEREST, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPROD.IDORIGEMPROD);
                        END IF;
                        BEGIN
                           SELECT MAX(CDFISCTEMP), MAX(CDDETALHEPROD), MAX(CDENQLEGALIPI), MAX(CDCEST)
                             INTO   V_CDFISCTEMP, V_CDDETALHEPRODTEMP, V_CDENQLEGALIPI, V_CDCEST
                            FROM INCITEMP IT, IMPOSTO IP
                            WHERE IT.NRINCITEMP = V_INCITEMP
                              AND IP.CDIMPOSTO  = IT.CDIMPOTEMP
                              AND IP.IDPRODNOTA = w_P
                              AND IT.CDIMPOTEMP = C_ITEMPROIMPOS.CDIMPOSTO;
                        EXCEPTION
                           WHEN NO_DATA_FOUND THEN
                              V_CDFISCTEMP        := NULL;
                              V_CDDETALHEPRODTEMP := NULL;
                              V_CDENQLEGALIPI     := NULL;
                              V_CDCEST            := NULL;
                        END;

                        IF (C_ITEMPROIMPOS.VRPERREDBCIT > 0.00) AND
                           (C_ITEMPROIMPOS.NRITPROIMPOS = w_2) THEN
                           V_CDFISCTEMP := w_2;
                        ELSE
                           IF (V_CDFISCTEMP IS NULL) THEN
                               V_CDFISCTEMP := C_ITEMPROIMPOS.CDFISCALIT;
                           END IF;
                        END IF;

                        IF V_CDENQLEGALIPI IS NULL THEN
                           V_CDENQLEGALIPI := C_ITEMPROIMPOS.CDENQLEGALIPI;
                        END IF;

                        IF V_CDCEST IS NULL THEN
                           V_CDCEST := C_ITEMPROIMPOS.CDCEST;
                        END IF;

                        DELETE INCITEMP
                         WHERE NRINCITEMP = V_INCITEMP;

                        /*VERIFICA CST POR IMPOSTO*/
                        V_IMPOICMS := NULL;
                        V_CDGRUPOFISCAUX := NULL;

                        SELECT MAX(G.CDGRUPOFISC)
                          INTO V_CDGRUPOFISCAUX
                          FROM GRUPOFISCIMPFIL G,
                               (SELECT CDFILIEMIT AS CDFILIAL
                                  FROM NOTAFISCAL
                                 WHERE CDFILIAL = P_FILIAL
                                       AND NRLANCTONF = P_LANCTONF) F
                         WHERE G.CDFILIAL = F.CDFILIAL
                           AND NOT G.CDGRUPOFISC IS NULL
                           AND G.CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO;

                        IF V_IDORIGDESTNF = 'C' THEN
                           SELECT NVL(MAX(G.CDGRUPOFISC), V_CDGRUPOFISCAUX)
                             INTO V_CDGRUPOFISCAUX
                             FROM GRFISIMPIECLIE G,
                                  (SELECT CDCLIENTE
                                     FROM NOTAFISCAL
                                    WHERE CDFILIAL = P_FILIAL
                                      AND NRLANCTONF = P_LANCTONF) N
                            WHERE G.CDCLIENTE = N.CDCLIENTE
                              AND G.CDEMPRESA = P_EMPRESA
                              AND G.CDINSCESTA = P_INSCESTA
                              AND NOT G.CDGRUPOFISC IS NULL
                              AND G.CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO;
                        ELSE
                           SELECT NVL(MAX(G.CDGRUPOFISC), V_CDGRUPOFISCAUX)
                             INTO V_CDGRUPOFISCAUX
                             FROM GRFISIMPIEFORN G,
                                 (SELECT CDFORNECED
                                    FROM NOTAFISCAL
                                   WHERE CDFILIAL = P_FILIAL
                                     AND NRLANCTONF = P_LANCTONF) N
                            WHERE G.CDFORNECED = N.CDFORNECED
                              AND G.CDEMPRESA = P_EMPRESA
                              AND G.CDINSCESTA = P_INSCESTA
                              AND NOT G.CDGRUPOFISC IS NULL
                              AND G.CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO;
                        END IF;
                        IF V_CDGRUPOFISCAUX IS NULL THEN
                           IF (C_ITEMPROD.IDPRODBONIF = 'N') OR (V_CDTIPOOPERBONIF = 'N') THEN
                              CONSULTA_CST_NFE(w_S, P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, P_TIPOOPER, V_CDGRUPOFISC,C_ITEMPROIMPOS.CDIMPOSTO, V_IDINTEREST, V_IDINTERNA, P_FILIAL, P_LANCTONF, '', V_CDSITTRIBTMP, V_IDMODBCNFE, V_IDMODBCSTNFE, V_CDTPCRPICOSTNFE, V_CDNATUBCPCSTNFE, V_IDMOTIDESSTNFE, C_ITEMPROD.IDORIGEMPROD);
                           ELSE
                              CONSULTA_CST_NFE(w_S, P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, V_CDTIPOOPERBONIF, V_CDGRUPOFISC,C_ITEMPROIMPOS.CDIMPOSTO, V_IDINTEREST, V_IDINTERNA, P_FILIAL, P_LANCTONF, '', V_CDSITTRIBTMP, V_IDMODBCNFE, V_IDMODBCSTNFE, V_CDTPCRPICOSTNFE, V_CDNATUBCPCSTNFE, V_IDMOTIDESSTNFE, C_ITEMPROD.IDORIGEMPROD);
                           END IF;
                        ELSE
                           IF (C_ITEMPROD.IDPRODBONIF = 'N') OR (V_CDTIPOOPERBONIF = 'N') THEN
                              CONSULTA_CST_NFE(w_S, P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, P_TIPOOPER, V_CDGRUPOFISCAUX,C_ITEMPROIMPOS.CDIMPOSTO, V_IDINTEREST, V_IDINTERNA, P_FILIAL, P_LANCTONF, '', V_CDSITTRIBTMP, V_IDMODBCNFE, V_IDMODBCSTNFE, V_CDTPCRPICOSTNFE, V_CDNATUBCPCSTNFE, V_IDMOTIDESSTNFE, C_ITEMPROD.IDORIGEMPROD);
                           ELSE
                              CONSULTA_CST_NFE(w_S, P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, V_CDTIPOOPERBONIF, V_CDGRUPOFISCAUX,C_ITEMPROIMPOS.CDIMPOSTO, V_IDINTEREST, V_IDINTERNA, P_FILIAL, P_LANCTONF, '', V_CDSITTRIBTMP, V_IDMODBCNFE, V_IDMODBCSTNFE, V_CDTPCRPICOSTNFE, V_CDNATUBCPCSTNFE, V_IDMOTIDESSTNFE, C_ITEMPROD.IDORIGEMPROD);
                           END IF;
                        END IF;

                        IF (V_CDSITTRIBTMP IS NULL) THEN
                           V_CDSITUTRIBNFE := C_ITEMPROIMPOS.CDSITUTRIBNFE;
                        ELSE
                           V_CDSITUTRIBNFE := V_CDSITTRIBTMP;
                        END IF;
                        IF (V_IDMODBCNFE IS NULL) THEN
                           V_IDMODBCNFEIT := C_ITEMPROIMPOS.IDMODBCNFE;
                        ELSE
                           V_IDMODBCNFEIT := V_IDMODBCNFE;
                        END IF;
                        IF (V_IDMODBCSTNFE IS NULL) THEN
                           V_IDMODBCSTNFEIT := C_ITEMPROIMPOS.IDMODBCSTNFE;
                        ELSE
                           V_IDMODBCSTNFEIT := V_IDMODBCSTNFE;
                        END IF;
                      --  IF (C_ITEMPROIMPOS.CDTPCREDPICOITE IS NULL) THEN
                           V_CDTPCRPICOSTNFEIT := V_CDTPCRPICOSTNFE;
                      --  ELSE
                      --     V_CDTPCRPICOSTNFEIT := C_ITEMPROIMPOS.CDTPCREDPICOITE;
                      --  END IF;

                      --  IF (C_ITEMPROIMPOS.CDNATUBCALPCIT IS NULL) THEN
                           V_CDNATUBCPCSTNFEIT := V_CDNATUBCPCSTNFE;
                      --  ELSE
                      --     V_CDNATUBCPCSTNFEIT := C_ITEMPROIMPOS.CDNATUBCALPCIT;
                      --  END IF;

                        IF (V_IDMOTIDESSTNFE IS NULL) THEN
                           V_IDMOTIDESSTNFE := C_ITEMPROIMPOS.IDMOTDESONERAIT;
                        ELSE
                           V_IDMOTIDESSTNFE := V_IDMOTIDESSTNFE;
                        END IF;

                        SELECT NVL(MAX(IDUTMUNIORIG),'N')
                          INTO V_IDUTMUNIORIG
                          FROM IMPOSTO
                         WHERE CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO;

                        IF (C_ITEMPROIMPOS.IDUTVRPAUTAPROD = 'S') AND (C_ITEMPROIMPOS.IDUTVRPAUTA = 'S') THEN
                           V_LIQUIITEM := (C_ITEMPROD.QTITEMPROD * C_ITEMPROIMPOS.VRPAUTAMINPROD) / C_ITEMPROIMPOS.QTITEMPROD;
                        ELSE
                           V_LIQUIITEM := C_ITEMPROD.VRTOTAITEM - C_ITEMPROD.VRDESCITEM;
                        END IF;

                        IF ((V_IDUTMUNIORIG = 'O') OR (V_IDUTMUNIORIG = 'N')) THEN
                           IF (C_ITEMPROD.IDPRODBONIF = 'N') OR (V_CDTIPOOPERBONIF = 'N') THEN
                              CONSULTA_ALIQUOTA(C_ITEMPROIMPOS.CDIMPOSTO, w_S, P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIORIG, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_TIPOOPER,
                                                NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPROD.IDORIGEMPROD);
                           ELSE
                              CONSULTA_ALIQUOTA(C_ITEMPROIMPOS.CDIMPOSTO, w_S, P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIORIG, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, V_CDTIPOOPERBONIF,
                                                NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPROD.IDORIGEMPROD);
                           END IF;
                        ELSE
                           IF (C_ITEMPROD.IDPRODBONIF = 'N') OR (V_CDTIPOOPERBONIF = 'N') THEN
                              CONSULTA_ALIQUOTA(C_ITEMPROIMPOS.CDIMPOSTO, w_S, P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_TIPOOPER,
                                                NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPROD.IDORIGEMPROD);
                           ELSE
                              CONSULTA_ALIQUOTA(C_ITEMPROIMPOS.CDIMPOSTO, w_S, P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, V_CDTIPOOPERBONIF,
                                                NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPROD.IDORIGEMPROD);
                           END IF;
                        END IF;

                        V_NRALIQTEMP := 0;
                        V_PARDEDTMP  := 0;
                        V_PREDBCTMP  := 0;
                        V_ALIQUTMP   := 0;
                        V_IMPOSTOIT  := 0;
                        V_CDTIPOOPER    := NULL;
                        V_CDREGRAITALIQ := NULL;
                        V_VRADICFECP     := NULL;
                        V_VRADICALIQFECP := NULL;
                        V_IDIMPODESONERA  := w_N;
                        V_IDCONSDESONVRNF := w_N;
                        V_VRALIQICMSCBSP := 0;

                        SELECT NVL(MAX(NRALIQTEMP),0),
                               NVL(MAX(VRPARDEDTMP),0),
                               NVL(MAX(VRPREDBCTMP),0),
                               NVL(MAX(VRALIQUTMP),0),
                               NVL(MAX(IDTRIMPSTTMP), w_0),
                               NVL(MAX(VRPBCSTTMP),0),
                               NVL(MAX(IDPMCBSCALTMP), w_N),
                               MAX(CDTIPOOPERTMP),
                               MAX(CDREGRATMP),
                               MAX(CDFISCOPER),
                               MAX(IDDIFEALIQ),
                               MAX(IDDIFALIQCUSPR),
                               MAX(CDBENEFFISCAL),
                               NVL(MAX(IDIMPODESONERA), 'N'),
                               NVL(MAX(IDCONSDESONVRNF), 'N'),
                               NVL(MAX(IDCONSMVAPMC), '3'),
                               NVL(MAX(IDCONSCOMPBCPMC), '3'),
                               MAX(VRADICALIQFECP)
                          INTO V_NRALIQTEMP,
                               V_PARDEDTMP,
                               V_PREDBCTMP,
                               V_ALIQUTMP,
                               V_TRATIMPST,
                               V_PBCSUBTRIB,
                               V_IDPMCBASECAL,
                               V_CDTIPOOPER,
                               V_CDREGRAITALIQ,
                               V_CDFISCOPERREGRA,
                               V_IDDIFEALIQREGRA,
                               V_IDDIFALIQCUSPRREGRA,
                               V_CDBENEFFISCAL,
                               V_IDIMPODESONERA,
                               V_IDCONSDESONVRNF,
                               V_IDCONSMVAPMC,
                               V_IDCONSCOMPBCPMC,
                               V_VRADICALIQFECP
                          FROM ALIQTEMP
                         WHERE (NRALIQTEMP = V_ALIQTEMP);


                        IF V_CDBENEFFISCAL IS NULL THEN
                           V_CDBENEFFISCAL := C_ITEMPROIMPOS.CDBENEFFISCAL;
                        END IF;

                        IF V_PAISORIG = V_PAISCFOP THEN
                           IF V_ESTAORIG = V_ESTACFOP THEN
                              V_CFOP1DIGT := '5';
                           ELSE
                              V_CFOP1DIGT := '6';
                           END IF;
                        ELSE
                           V_CFOP1DIGT := '7';
                        END IF;

                        IF V_CDFISCOPERREGRA IS NOT NULL THEN
                           IF (LENGTH(V_CDFISCOPERREGRA) < 4) THEN
                              V_CDFISCOPERREGRA := V_CFOP1DIGT||V_CDFISCOPERREGRA;
                           END IF;
                        ELSE
                           V_CDFISCOPERREGRA := V_FISOPEITEM;
                        END IF;

                        V_ICMS := 'N';
                        FOR C_ICMS IN (SELECT CDIMPOSTO
                                         FROM IMPOSTONFE N, IMPOSTO I
                                        WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                                          AND N.CDIMPOSTONFE = '00'
                                          AND I.CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO)
                        LOOP
                           V_ICMS := 'S';
                        END LOOP;

                        IF (V_ICMS = 'S') THEN
                           IF (NVL(V_CFOPINFUSU, 'N') <> 'S') AND (V_CDFISCOPERREGRA IS NOT NULL) THEN
                              V_FISOPEITEM        := NVL(V_CDFISCOPERREGRA, V_FISOPEITEM);
                              V_DSCDFISOPEITREGRA := SUBSTR(DESCRICAO_CFOP(V_CDFISCOPERREGRA),1,45);
                           END IF;

                           UPDATE NOTAFISCAL
                              SET DSCDFISOPENF = NVL(V_DSCDFISOPEITREGRA, (SELECT MAX(DSCFOPTMP)
                                                                               FROM CFOPTEMP
                                                                              WHERE NRCFOPTEMP = V_CFOPTEMP))
                            WHERE CDFILIAL   = P_FILIAL   AND
                                  NRLANCTONF = P_LANCTONF;


                           SELECT MAX(CDFISOPETMP), MAX(CDSUFCFOPTMP), SUBSTR(MAX(DSCFOPTMP),1,50)
                             INTO V_FISOPEITEM    , V_SUFXCFOPPR, V_DSCDFISOPEIT
                             FROM CFOPTEMP
                            WHERE NRCFOPTEMP = V_CFOPTEMP;

                           IF (NVL(V_CFOPINFUSU, 'N') <> 'S') AND (V_CDFISCOPERREGRA IS NOT NULL) THEN
                              V_FISOPEITEM        := NVL(V_CDFISCOPERREGRA, V_FISOPEITEM);
                              V_DSCDFISOPEITREGRA := SUBSTR(DESCRICAO_CFOP(V_CDFISCOPERREGRA),1,45);
                           END IF;

                           UPDATE ITEMPRODUTO
                              SET CDFISOPEITEM  = V_FISOPEITEM,
                                  CDSUFXCFOPPR  = V_SUFXCFOPPR,
                                  DSCDFISOPEIT  = V_DSCDFISOPEIT
                            WHERE CDFILIAL    = P_FILIAL AND
                                  NRLANCTONF  = P_LANCTONF AND
                                  NRSEQITPROD = C_ITEMPROD.NRSEQITPROD;
                        END IF;



                        /*Verifica alíquota parametrizada por tipo de operação desde que não seja nota de estorno de cancelamento*/
                        V_TAXABASECALC := (100 - V_PREDBCTMP)/100;
                        V_CONTABCALC  := V_LIQUIITEM - (V_LIQUIITEM * V_TAXABASECALC);

                        IF ((V_NRALIQTEMP IS NOT NULL) AND (V_CDTIPOOPER IS NOT NULL) AND (V_ESTORNOCANC <> w_S)) THEN
                           V_CDIMPOSRECALC := V_CDIMPOSRECALC||C_ITEMPROIMPOS.CDIMPOSTO||'_';
                           IF (C_ITEMPROIMPOS.NRITPROIMPOS = w_2) THEN
                              V_CDIMPOSTRIB  := null;
                              V_IDVRIMPSTRIB := null;

                           ELSE
                              V_CDIMPOSTRIB  := null;
                              V_IDVRIMPSTRIB := null;

                              /*IMPOSTO DE SUBSTITUICAO TRIBUTARIA*/
                              FOR C_ICMSST IN (SELECT CDIMPOSTO
                                                 FROM IMPOSTO
                                                WHERE CDIMPOSTRIB = C_ITEMPROIMPOS.CDIMPOSTO)
                              LOOP
                                 V_CDIMPOSTRIB := V_CDIMPOSTRIB||C_ICMSST.CDIMPOSTO||'_';
                              END LOOP;

                              V_TAXABASECALC := (100 - V_PREDBCTMP)/100;
                              V_TAXAALIQUOTA := (V_ALIQUTMP/100);
                              V_TAXABCSUBSTR := 1 + (V_PBCSUBTRIB/100);
                              V_BASECALCIT   := V_LIQUIITEM * V_TAXABASECALC;

                              IF V_CDIMPOSTRIB IS NULL THEN
                                 V_IDTRIMPSTII := '';
                                 IF NVL(V_IDPMCBASECAL, W_N) = W_S THEN
                                    CALCULA_BC_PMC(P_FILIAL,                          
                                                   P_LANCTONF,
                                                   C_ITEMPROD.NRSEQITPROD,
                                                   C_ITEMPROIMPOS.CDIMPOSTO,
                                                   V_IDCONSMVAPMC,
                                                   V_IDCONSCOMPBCPMC,
                                                   V_PAISDEST,
                                                   V_ESTADEST,
                                                   C_ITEMPROD.CDPRODUTO,
                                                   C_ITEMPROD.QTITEMPROD,
                                                   C_ITEMPROD.VRUNITITEM,
                                                   C_ITEMPROD.VRDESCITEM,
                                                   V_PBCSUBTRIB,
                                                   V_PREDBCTMP,
                                                   V_VRALIQICMSCBSP,
                                                   NULL,
                                                   NULL,
                                                   NULL,
                                                   NULL,
                                                   NULL,
                                                   NULL,
                                                   'N',
                                                   V_BASECALCTO);

                                    V_IMPOSTOIT := (V_BASECALCTO * V_TAXAALIQUOTA) - V_PARDEDTMP;
                                    V_BASECALCIT   := V_BASECALCTO * V_TAXABASECALC;
                                 END IF;
                              ELSE
                                 IF V_CDSITUCRT = '1' THEN
                                    IF SUBSTR(V_CDFISCOPERSN, 2, 3) = '500' THEN
                                       V_IDTRIMPSTII := w_2;
                                    ELSE
                                       V_IDTRIMPSTII := V_TRATIMPST;
                                    END IF;
                                 ELSE
                                    IF SUBSTR(V_SITUTRIBPR, 2, 2) = '60' THEN
                                       V_IDTRIMPSTII := 2;
                                    ELSE
                                       V_IDTRIMPSTII := V_TRATIMPST;
                                    END IF;
                                 END IF;

                                 IF NVL(V_IDPMCBASECAL, W_N) = W_S THEN
                                    CALCULA_BC_PMC(P_FILIAL,                          
                                                   P_LANCTONF,
                                                   C_ITEMPROD.NRSEQITPROD,
                                                   C_ITEMPROIMPOS.CDIMPOSTO,
                                                   V_IDCONSMVAPMC,
                                                   V_IDCONSCOMPBCPMC,
                                                   V_PAISDEST,
                                                   V_ESTADEST,
                                                   C_ITEMPROD.CDPRODUTO,
                                                   C_ITEMPROD.QTITEMPROD,
                                                   C_ITEMPROD.VRUNITITEM,
                                                   C_ITEMPROD.VRDESCITEM,
                                                   V_PBCSUBTRIB,
                                                   V_PREDBCTMP,
                                                   V_VRALIQICMSCBSP,
                                                   NULL,
                                                   NULL,
                                                   NULL,
                                                   NULL,
                                                   NULL,
                                                   NULL,
                                                   'N',
                                                   V_BASECALCTO);

                                    V_IMPOSTOIT := (V_BASECALCTO * V_TAXAALIQUOTA) - V_PARDEDTMP;
                                 ELSE
                                    V_BASECALCTO  := V_BASECALCIT;
                                    V_IMPOSTOIT   := (V_BASECALCIT * V_TAXAALIQUOTA) - V_PARDEDTMP;
                                 END IF;

                                 SELECT NVL(MAX(IDVRIMPSTRIB), 'N')
                                   INTO V_IDVRIMPSTRIB
                                   FROM ITEMPROIMPOS I, IMPOSTO II
                                  WHERE (CDFILIAL = P_FILIAL)
                                    AND (NRLANCTONF = P_LANCTONF)
                                    AND (NRSEQITPROD = C_ITEMPROD.NRSEQITPROD)
                                    AND (INSTR(V_CDIMPOSTRIB,II.CDIMPOSTO||'_') > 0)
                                    AND (I.CDIMPOSTO = II.CDIMPOSTO);

                                 IF (V_TRATIMPST = W_1) OR (NVL(V_IDVRIMPSTRIB, W_N) = W_N) THEN
                                    V_VRIMPOSTOST := 0;
                                    V_VRBASEICMS := 0;
                                 ELSE
                                    BEGIN
                                       SELECT NVL(MAX(VRIMPOSTOIT),0), NVL(ROUND(MAX(VRBASECALCIT), 2),0)
                                         INTO V_VRIMPOSTOST, V_VRBASEICMS
                                         FROM ITEMPROIMPOS I
                                        WHERE (CDFILIAL = P_FILIAL)
                                          AND (NRLANCTONF = P_LANCTONF)
                                          AND (NRSEQITPROD = C_ITEMPROD.NRSEQITPROD)
                                          AND (INSTR(V_CDIMPOSTRIB,CDIMPOSTO||'_') > 0)
                                          AND (NRITPROIMPOS = w_1);
                                    EXCEPTION
                                       WHEN NO_DATA_FOUND THEN BEGIN
                                          V_VRIMPOSTOST := 0;
                                          V_VRBASEICMS := 0;
                                       END;
                                    END;
                                 END IF;

                                 /*198639, 200299*/
                                 IF V_VRBASEICMS > 0 THEN
                                    DELETE ALIQTEMP
                                     WHERE NRALIQTEMP = V_ALIQTEMP;

                                    /* Verifica grupo fiscal */
                                    SELECT MAX(IDGRUPFISSRV)
                                      INTO V_UTGRUPFISCS
                                      FROM IMPOSTO
                                     WHERE CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO;

                                    IF V_UTGRUPFISCS = 'S' THEN
                                       V_CDGRPFISCSV := NULL;
                                       SELECT MAX(CDGRUPOFISC)
                                         INTO V_CDGRPFISCSV
                                         FROM SERVCLIE SC, SERVICO S
                                        WHERE SC.CDFILIAL   = V_CDFILIEMIT AND
                                             SC.CDCLIENTE  = P_CLIENTE    AND
                                             SC.CDFILIAL   = S.CDFILIAL   AND
                                             SC.CDSERVFILI = S.CDSERVFILI AND
                                             S.CDPRODUTO   = C_ITEMPROD.CDPRODUTO;

                                       IF V_CDGRPFISCSV IS NULL THEN
                                          SELECT MAX(CDGRUPOFISC)
                                            INTO V_CDGRPFISCSV
                                            FROM CLIENFILIAL
                                          WHERE CDFILIAL   = V_CDFILIEMIT AND
                                               CDCLIENTE  = P_CLIENTE;
                                       END IF;

                                       CONSULTA_ALIQUOTA(C_ITEMPROIMPOS.CDIMPOSTO, w_S, P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                         V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_VRBASEICMS, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRPFISCSV, P_TIPOOPER,
                                                         NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPROD.IDORIGEMPROD);

                                    ELSE
                                       CONSULTA_ALIQUOTA(C_ITEMPROIMPOS.CDIMPOSTO, w_S, P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                         V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_VRBASEICMS, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_TIPOOPER,
                                                         NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPROD.IDORIGEMPROD);

                                    END IF;

                                    BEGIN
                                       SELECT NVL(MAX(VRALIQICMSCBSP),0)
                                         INTO V_VRALIQICMSCBSP
                                         FROM ALIQTEMP
                                        WHERE (NRALIQTEMP = V_ALIQTEMP);
                                    EXCEPTION
                                       WHEN NO_DATA_FOUND THEN
                                          V_VRALIQICMSCBSP := 0;
                                    END;

                                    IF V_VRALIQICMSCBSP > 0 THEN
                                       V_VRIMPOSTOST := V_VRBASEICMS * (V_VRALIQICMSCBSP/100);
                                    END IF;

                                    DELETE ALIQTEMP
                                     WHERE NRALIQTEMP = V_ALIQTEMP;
                                 END IF;
                                 /*198639, 200299*/

                                 V_IMPOSTOIT := V_IMPOSTOIT - V_VRIMPOSTOST;

                                 IF V_IMPOSTOIT < 0 THEN
                                    V_IMPOSTOIT := 0;
                                 END IF;

                                 IF (V_IDCONTCONFORIG = 'N') THEN
                                    IF NVL(V_IDPMCBASECAL, W_N) = W_S THEN
                                       UPDATE ITEMPRODUTO
                                          SET VRBRUTITEM = VRBRUTITEM + V_IMPOSTOIT,
                                              VRCONTITEM = VRCONTITEM + V_IMPOSTOIT
                                        WHERE CDFILIAL = P_FILIAL
                                          AND NRLANCTONF = P_LANCTONF
                                          AND NRSEQITPROD = C_ITEMPROD.NRSEQITPROD;
                                     END IF;
                                 END IF;
                              END IF;

                              IF NVL(V_IDPMCBASECAL, W_N) = W_N THEN
                                 V_PERDBCALC    := 100 - V_PREDBCTMP;

                                 IF V_PBCSUBTRIB > 0 THEN
                                    V_BASECALCIT := (V_BASECALCIT * V_TAXABCSUBSTR);
                                    V_PREDBCSTIT := V_PREDBCTMP;
                                    V_PREDBCTMP  := V_PBCSUBTRIB;
                                    V_PERDBCALC  := 0;
                                 ELSE
                                    V_PREDBCSTIT := V_PREDBCTMP;
                                 END IF;

                                 SELECT NVL(MAX(IDUTVLRQTDEIMPO), 'N')
                                   INTO V_IDUTVLRQTDEIMPO
                                   FROM IMPOSTO
                                  WHERE CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO;

                                 IF (V_IDUTVLRQTDEIMPO = 'S') THEN
                                    SELECT NVL(MAX(VRFATOCONVES), 1)
                                      INTO V_VRFATOCONVES
                                      FROM CONVPRODUTO
                                     WHERE CDPRODUTO = C_ITEMPROD.CDPRODUTO;

                                    V_BASECALCTO  := (C_ITEMPROD.QTITEMPROD * V_VRFATOCONVES);
                                    V_IMPOSTOIT   := ((C_ITEMPROD.QTITEMPROD * V_VRFATOCONVES) * V_ALIQUTMP) - V_PARDEDTMP;
                                 ELSE
                                    V_BASECALCTO  := V_BASECALCIT;
                                    V_IMPOSTOIT   := (V_BASECALCIT * V_TAXAALIQUOTA) - V_PARDEDTMP;
                                 END IF;
                              END IF;

                              /*Impostos importados do arquivo XML, na devolução sempre vai gravar de acordo com a origem*/
                              IF (C_ITEMPROIMPOS.IDVALORINFIT = W_S) AND (V_IDNFGERADAVIAXML = 'S') THEN
                                 V_BASECALCIT := ROUND((C_ITEMPROIMPOS.VRBASECALCIT * V_VRFATOCONV), 2);
                                 V_BASECALCTO := V_BASECALCIT;

                                 V_ALIQUTMP := C_ITEMPROIMPOS.VRALIQITEM;

                                 V_TAXAALIQUOTA := (V_ALIQUTMP/100);
                                 V_IMPOSTOIT := ROUND((C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV), 2);
                              ELSE
                                 V_BASECALCTO := V_BASECALCIT;
                                 V_IMPOSTOIT   := (V_BASECALCIT * V_TAXAALIQUOTA) - V_PARDEDTMP;
                              END IF;

                              V_CONTABCALC  := V_LIQUIITEM - (V_LIQUIITEM * V_TAXABASECALC);

                              IF (V_ALIQUTMP = 0) AND (V_IMPOSTOIT = 0) THEN
                                 V_BASECALCTO := 0;
                              END IF;

                              IF V_BASECALCTO IS NULL THEN        /*utiliza pmc mas não tem impostrib então não entra na parte do calcula pmc, desta forma, a variável de bC fica vazia*/
                                 V_BASECALCTO  := V_BASECALCIT;
                                 V_IMPOSTOIT   := (V_BASECALCIT * V_TAXAALIQUOTA) - V_PARDEDTMP;
                              END IF;

                              -- ALTERAR O VALOR CONTÁBIL CASO O PARÂMETRO "CONTABILIZA CONFORME NF DE ORIGEM" ESTEJA DESMARCADO

                              IF (V_IDCONTCONFORIG = 'N') THEN

                                 V_IMPOCONTAB  := 0;
                                 V_IDIMPORECUP := NULL;
                                 V_CDCCTBLATIV := NULL;
                                 V_IDTRATIMPO  := NULL;

                                 SELECT NVL(IDIMPORECUP, 'N'), IDTRATIMPO, CDCCTBLATIV
                                   INTO V_IDIMPORECUP, V_IDTRATIMPO, V_CDCCTBLATIV
                                   FROM IMPOSTO
                                  WHERE CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO;

                                 IF (V_IDIMPORECUP = W_S) THEN
                                    IF (V_CDFISCTEMP = W_1) THEN
                                       IF (V_CDCCTBLATIV IS NOT NULL) THEN
                                          IF V_IDTRATIMPO = W_V THEN
                                             V_IMPOCONTAB := - V_IMPOSTOIT;
                                          END IF;
                                       END IF;
                                    ELSE
                                       IF V_IDTRATIMPO = W_A THEN
                                          V_IMPOCONTAB := V_IMPOSTOIT;
                                       ELSIF V_IDTRATIMPO IN (W_D,W_R) THEN
                                          V_IMPOCONTAB := - V_IMPOSTOIT;
                                       END IF;
                                    END IF;
                                 END IF;

                                 IF (ABS(NVL(V_IMPOCONTAB, 0)) > 0) THEN
                                    UPDATE ITEMPRODUTO
                                       SET VRCONTITEMORIG = (VRCONTITEM) + NVL(V_IMPOCONTAB, 0),
                                           VRCONTITEM     = (VRCONTITEM) + NVL(V_IMPOCONTAB, 0)
                                     WHERE CDFILIAL       = P_FILIAL
                                       AND NRLANCTONF     = P_LANCTONF
                                       AND NRSEQITPROD    = C_ITEMPROD.NRSEQITPROD;
                                 END IF;
                              END IF;
                              -- Alterar o valor contábil caso o parâmetro "Contabiliza conforme NF de origem" esteja desmarcado

                              Begin
                                 SELECT CDFILIAL
                                 INTO   V_CHAVE
                                 FROM ITEMPROIMPOS
                                 WHERE CDFILIAL     = P_FILIAL                 AND
                                       NRLANCTONF   = P_LANCTONF               AND
                                       NRSEQITPROD  = C_ITEMPROD.NRSEQITPROD   AND
                                       CDIMPOSTO    = C_ITEMPROIMPOS.CDIMPOSTO AND
                                       NRITPROIMPOS = C_ITEMPROIMPOS.NRITPROIMPOS;
                              Exception
                                 When No_Data_Found Then
                                    V_CHAVE := Null;
                              End;

                              IF V_IDPERVISIMPSCRE = 'S' THEN
                                 V_VRIMPOSTOVISUIT := V_IMPOSTOIT;
                              ELSE
                                 IF (V_CDFISCTEMP = '1') THEN
                                    V_VRIMPOSTOVISUIT := V_IMPOSTOIT;
                                 ELSE
                                    V_VRIMPOSTOVISUIT := 0;
                                 END IF;
                              END IF;

                              /* ROTINA PARA CALCULAR O DIFERIMENTO DO IMPOSTO */
                              V_PERDIFERE    := NULL;
                              V_IMPOSTOOPERA := NULL;
                              V_IMPOSTODIFER := NULL;
                              IF C_ITEMPROIMPOS.CDIMPOSTONFE = '00' THEN
                                 IF V_CDSITTRIBTMP = '51' THEN
                                    BEGIN
                                       SELECT PD.VRPERDIFERE, 'S'
                                         INTO V_VRPERDIFERE, V_IDDIFECLI
                                         FROM PRODDIFEREIMPCLI PD, PRODUTO PR
                                        WHERE PD.CDPRODUTO = PR.CDPRODUTO
                                          AND PD.CDPAIS = V_PAISORIG
                                          AND PD.SGESTADO = V_ESTAORIG
                                          AND PD.CDCLIENTE = P_CLIENTE
                                          AND PR.CDARVPROD IN (SELECT MAX(PR.CDARVPROD) AS CDARVPROD
                                                                 FROM PRODDIFEREIMPCLI PD, PRODUTO PR
                                                                WHERE PD.CDPRODUTO = PR.CDPRODUTO
                                                                  AND PD.CDPAIS = V_PAISORIG
                                                                  AND PD.SGESTADO = V_ESTAORIG
                                                                  AND PD.CDCLIENTE = P_CLIENTE
                                                                  AND INSTR(NVL(RTRIM(C_ITEMPROD.CDARVPROD), PR.CDARVPROD), PR.CDARVPROD) = 1);
                                    EXCEPTION
                                       WHEN NO_DATA_FOUND THEN
                                          V_VRPERDIFERE := NULL; V_IDDIFECLI := 'N';
                                    END;

                                    IF V_IDDIFECLI = 'N' THEN
                                       BEGIN
                                          SELECT PD.VRPERDIFERE
                                            INTO V_VRPERDIFERE
                                            FROM PRODDIFEREIMPOS PD, PRODUTO PR
                                           WHERE PD.CDPRODUTO = PR.CDPRODUTO
                                             AND PD.CDPAIS = V_PAISORIG
                                             AND PD.SGESTADO = V_ESTAORIG
                                             AND PR.CDARVPROD IN (SELECT MAX(PR.CDARVPROD) AS CDARVPROD
                                                                    FROM PRODDIFEREIMPOS PD, PRODUTO PR
                                                                   WHERE PD.CDPRODUTO = PR.CDPRODUTO
                                                                     AND PD.CDPAIS = V_PAISORIG
                                                                     AND PD.SGESTADO = V_ESTAORIG
                                                                     AND INSTR(NVL(RTRIM(C_ITEMPROD.CDARVPROD), PR.CDARVPROD), PR.CDARVPROD) = 1);
                                       EXCEPTION
                                          WHEN NO_DATA_FOUND THEN
                                             V_VRPERDIFERE := NULL;
                                       END;
                                    END IF;

                                    IF V_VRPERDIFERE IS NOT NULL THEN
                                       V_PERDIFERE    := V_VRPERDIFERE;
                                    IF V_PREDBCTMP > 0 THEN
                                       V_IMPOSTOOPERA := (V_BASECALCIT * V_TAXABASECALC) * V_TAXAALIQUOTA;
                                    ELSE
                                       V_IMPOSTOOPERA := V_BASECALCIT * V_TAXAALIQUOTA;
                                    END IF;
                                       V_IMPOSTODIFER := V_IMPOSTOOPERA * (V_VRPERDIFERE/100);
                                       V_IMPOSTOIT    := V_IMPOSTOOPERA - V_IMPOSTODIFER;
                                    END IF;
                                 END IF;
                              END IF;

                              IF V_CHAVE IS NULL THEN
                                 V_ICMS := 'N';
                                 FOR C_ICMS IN (SELECT CDIMPOSTO
                                                  FROM IMPOSTONFE N, IMPOSTO I
                                                 WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                                                   AND N.CDIMPOSTONFE = '00'
                                                   AND I.CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO)
                                 LOOP
                                    V_ICMS := 'S';
                                 END LOOP;

                                 IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
                                    INSERT INTO ITEMPROIMPOS(
                                       CDFILIAL,        NRLANCTONF,   NRSEQITPROD,    CDIMPOSTO,       NRITPROIMPOS,   CDFISCALIT,
                                       CDSITUTRIBIT,    CDFISCOPERIT, CDSUFXCFOPIT,   VRALIQITEM,      VRPERREDBCIT,   VRPARDEDIT,
                                       VRCONTITIMP,     VRBASECALCIT, VRIMPOSTOIT,    IDERROSIMPIT,    IDAVISIMPIT,    IDTRIMPSTII,
                                       CDSITUTRIBITNFE, IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT,
                                       CDDETALHEPROD,   VRIMPOSTOVISUIT,   CDREGRAIT, VRPERDIFEREIT, VRIMPOSTOOPERAIT, VRIMPOSTODIFERIT,
                                       CDENQLEGALIPI,   CDCEST,            CDBENEFFISCAL, IDDESONERAREGRA, IDCONSDESONVRNF, IDVALORINFIT, VRPERREDBCSTIT, VRIMPOSTOREP)
                                    VALUES(
                                       P_FILIAL,                P_LANCTONF,     C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, w_1,                 V_CDFISCTEMP,
                                       NVL(V_SITUTRIBPR, C_ITEMPROD.CDSITUTRIBPR), V_FISOPEITEM,   V_SUFXCFOPPR,           V_ALIQUTMP,               V_PREDBCTMP,         V_PARDEDTMP,
                                       ROUND(V_BASECALCTO,2),   V_BASECALCTO,   TRUNC(V_IMPOSTOIT,2),   w_00000,                  w_00000,             V_IDTRIMPSTII,
                                       V_CDSITUTRIBNFE,         V_IDMODBCNFEIT, V_IDMODBCSTNFEIT,       V_CDTPCRPICOSTNFEIT,      V_CDNATUBCPCSTNFEIT, V_IDMOTIDESSTNFE,
                                       V_CDDETALHEPRODTEMP, TRUNC(V_VRIMPOSTOVISUIT,2), V_CDREGRAITALIQ, V_PERDIFERE, V_IMPOSTOOPERA, V_IMPOSTODIFER,
                                       V_CDENQLEGALIPI, V_CDCEST, V_CDBENEFFISCAL, NVL(V_IDIMPODESONERA, 'N'), NVL(V_IDCONSDESONVRNF, 'N'), C_ITEMPROIMPOS.IDVALORINFIT, V_PREDBCSTIT, V_VRIMPOSTOREP);
                                 ELSE
                                    IF (C_ITEMPROIMPOS.NRITPROIMPOS = w_3)  THEN

                                       /*Inserir a linha de diferencial de alíquota*/

                                       V_DIFALIQ := 0;

                                       SELECT MAX(VRALIQITEM)
                                         INTO V_DIFALIQ
                                         FROM ITEMPROIMPOS IT, ITEMPRODUTO I
                                        WHERE IT.CDFILIAL     = C_ITEMNOTAFISC.CDFILIALIT
                                          AND IT.NRLANCTONF   = C_ITEMNOTAFISC.NRLANCTONFIT
                                          AND I.CDFILIAL      = C_ITEMNOTAFISC.CDFILIALIT
                                          AND I.NRLANCTONF    = C_ITEMNOTAFISC.NRLANCTONFIT
                                          AND IT.NRSEQITPROD  = I.NRSEQITPROD
                                          AND I.CDPRODUTO     = C_ITEMPROD.CDPRODUTO
                                          AND ROUND(I.VRUNITITEM, V_NRDECITOTANF) = ROUND(C_ITEMPROD.VRUNITITEM, V_NRDECITOTANF)
                                          AND (NVL(NRLOTEESTQ, ' ') = (NVL(C_ITEMPROD.NRLOTEESTQ, ' ')))
                                          AND (NVL(NRSUBLOTE, ' ')  = (NVL(C_ITEMPROD.NRSUBLOTE , ' ')))
                                          AND IT.CDIMPOSTO    = C_ITEMPROIMPOS.CDIMPOSTO
                                          AND IT.NRITPROIMPOS = w_1;

                                       IF  (V_ALIQUTMP = V_DIFALIQ) THEN
                                          INSERT INTO ITEMPROIMPOS(
                                             CDFILIAL,        NRLANCTONF,   NRSEQITPROD,    CDIMPOSTO,       NRITPROIMPOS,   CDFISCALIT,
                                             CDSITUTRIBIT,    CDFISCOPERIT, CDSUFXCFOPIT,   VRALIQITEM,      VRPERREDBCIT,   VRPARDEDIT,
                                             VRCONTITIMP,     VRBASECALCIT, VRIMPOSTOIT,    IDERROSIMPIT,    IDAVISIMPIT,    IDTRIMPSTII,
                                             CDSITUTRIBITNFE, IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT,
                                             CDDETALHEPROD,   VRIMPOSTOVISUIT, CDREGRAIT, IDDIFALIQCUSPRI,
                                             CDENQLEGALIPI,   CDCEST,          CDBENEFFISCAL, IDDESONERAREGRA, IDCONSDESONVRNF, IDVALORINFIT)
                                          VALUES(
                                             P_FILIAL, P_LANCTONF, C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, C_ITEMPROIMPOS.NRITPROIMPOS, C_ITEMPROIMPOS.CDFISCALIT,
                                             C_ITEMPROD.CDSITUTRIBPR, V_FISOPEITEM, V_SUFXCFOPPR, C_ITEMPROIMPOS.VRALIQITEM, C_ITEMPROIMPOS.VRPERREDBCIT, (C_ITEMPROIMPOS.VRPARDEDIT * V_VRFATOCONV),
                                             ROUND((C_ITEMPROIMPOS.VRCONTITIMP * V_VRFATOCONV),2), (C_ITEMPROIMPOS.VRBASECALCIT * V_VRFATOCONV),
                                             (C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV), w_00000, w_00000, C_ITEMPROIMPOS.IDTRIMPSTII, C_ITEMPROIMPOS.CDSITUTRIBNFE,
                                             C_ITEMPROIMPOS.IDMODBCNFE, C_ITEMPROIMPOS.IDMODBCSTNFE, C_ITEMPROIMPOS.CDTPCREDPICOITE, C_ITEMPROIMPOS.CDNATUBCALPCIT, NVL(C_ITEMPROIMPOS.IDMOTDESONERAIT,'9'),
                                             V_CDDETALHEPRODTEMP, (C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV), V_CDREGRAITALIQ, C_ITEMPROIMPOS.IDDIFALIQCUSPRI,
                                             V_CDENQLEGALIPI, V_CDCEST, V_CDBENEFFISCAL, NVL(V_IDIMPODESONERA, 'N'), NVL(V_IDCONSDESONVRNF, 'N'), C_ITEMPROIMPOS.IDVALORINFIT);
                                       /*Inserir a linha de diferencial de alíquota*/
                                       END IF;
                                    ELSE
                                       INSERT INTO ITEMPROIMPOS(
                                          CDFILIAL,        NRLANCTONF,   NRSEQITPROD,    CDIMPOSTO,       NRITPROIMPOS,   CDFISCALIT,
                                          CDSITUTRIBIT,    CDFISCOPERIT, CDSUFXCFOPIT,   VRALIQITEM,      VRPERREDBCIT,   VRPARDEDIT,
                                          VRCONTITIMP,     VRBASECALCIT, VRIMPOSTOIT,    IDERROSIMPIT,    IDAVISIMPIT,    IDTRIMPSTII,
                                          CDSITUTRIBITNFE, IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT,
                                          CDDETALHEPROD,   VRIMPOSTOVISUIT,   CDREGRAIT, IDDIFALIQCUSPRI, VRPERDIFEREIT, VRIMPOSTOOPERAIT,
                                          VRIMPOSTODIFERIT, CDENQLEGALIPI, CDCEST, VRADICFECP, VRADICALIQFECP,
                                          CDBENEFFISCAL, IDDESONERAREGRA, IDCONSDESONVRNF, IDVALORINFIT, VRPERREDBCSTIT, VRIMPOSTOREP)
                                       VALUES(
                                          P_FILIAL,                P_LANCTONF,     C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, w_1,               V_CDFISCTEMP,
                                          NVL(V_SITUTRIBPR, C_ITEMPROD.CDSITUTRIBPR), V_FISOPEITEM,   V_SUFXCFOPPR,           V_ALIQUTMP,               V_PREDBCTMP,         V_PARDEDTMP,
                                          ROUND(V_BASECALCTO,2),   V_BASECALCTO,   ROUND(V_IMPOSTOIT,2),   w_00000,                  w_00000,             V_IDTRIMPSTII,
                                          V_CDSITUTRIBNFE,         V_IDMODBCNFEIT, V_IDMODBCSTNFEIT,       V_CDTPCRPICOSTNFEIT,      V_CDNATUBCPCSTNFEIT, V_IDMOTIDESSTNFE,
                                          V_CDDETALHEPRODTEMP,     ROUND(V_VRIMPOSTOVISUIT,2),     V_CDREGRAITALIQ, C_ITEMPROIMPOS.IDDIFALIQCUSPRI, V_PERDIFERE, V_IMPOSTOOPERA,
                                          V_IMPOSTODIFER, V_CDENQLEGALIPI, V_CDCEST, ROUND((C_ITEMPROIMPOS.VRADICFECP * V_VRFATOCONV), 2), C_ITEMPROIMPOS.VRADICALIQFECP,
                                          V_CDBENEFFISCAL, NVL(V_IDIMPODESONERA, 'N'), NVL(V_IDCONSDESONVRNF, 'N'), C_ITEMPROIMPOS.IDVALORINFIT, V_PREDBCSTIT, V_VRIMPOSTOREP);
                                    END IF;
                                 END IF;

                                 IF (C_ITEMPROIMPOS.NRITPROIMPOS = w_1) THEN
                                    IF (V_PREDBCTMP > 0) AND (V_PBCSUBTRIB = 0) THEN
                                       IF C_ITEMPROD.CDSITUTRIBPR = '060' THEN
                                          INSERT INTO ITEMPROIMPOS(
                                             CDFILIAL,        NRLANCTONF,     NRSEQITPROD,    CDIMPOSTO,       NRITPROIMPOS,   CDFISCALIT,
                                             CDSITUTRIBIT,    CDFISCOPERIT,   CDSUFXCFOPIT,   VRALIQITEM,      VRPERREDBCIT,   VRPARDEDIT,
                                             VRCONTITIMP,     VRBASECALCIT,   VRIMPOSTOIT,    IDERROSIMPIT,    IDAVISIMPIT,    IDTRIMPSTII,
                                             CDSITUTRIBITNFE, IDMODBCITNFE,   IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT,
                                             CDDETALHEPROD,   VRIMPOSTOVISUIT,   CDREGRAIT, CDENQLEGALIPI, CDCEST, VRADICFECP, VRADICALIQFECP,
                                             CDBENEFFISCAL,   IDDESONERAREGRA, IDCONSDESONVRNF, IDVALORINFIT)
                                          VALUES(
                                             P_FILIAL,                P_LANCTONF,     C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, w_2,                 w_2,
                                             NVL(V_SITUTRIBPR, C_ITEMPROD.CDSITUTRIBPR), V_FISOPEITEM,   V_SUFXCFOPPR,           0,                        V_PERDBCALC,         V_PARDEDTMP,
                                             V_CONTABCALC,            0,              0,                      w_00000,                  w_00000,             V_IDTRIMPSTII,
                                             V_CDSITUTRIBNFE,         V_IDMODBCNFEIT, V_IDMODBCSTNFEIT,       V_CDTPCRPICOSTNFEIT,      V_CDNATUBCPCSTNFEIT, V_IDMOTIDESSTNFE,
                                             V_CDDETALHEPRODTEMP, 0,     V_CDREGRAITALIQ, V_CDENQLEGALIPI, V_CDCEST, ROUND((C_ITEMPROIMPOS.VRADICFECP * V_VRFATOCONV), 2), C_ITEMPROIMPOS.VRADICALIQFECP,
                                             V_CDBENEFFISCAL, NVL(V_IDIMPODESONERA, 'N'), NVL(V_IDCONSDESONVRNF, 'N'), C_ITEMPROIMPOS.IDVALORINFIT);
                                       ELSE
                                          INSERT INTO ITEMPROIMPOS(
                                             CDFILIAL,        NRLANCTONF,     NRSEQITPROD,     CDIMPOSTO,       NRITPROIMPOS,   CDFISCALIT,
                                             CDSITUTRIBIT,    CDFISCOPERIT,   CDSUFXCFOPIT,    VRALIQITEM,      VRPERREDBCIT,   VRPARDEDIT,
                                             VRCONTITIMP,     VRBASECALCIT,   VRIMPOSTOIT,     IDERROSIMPIT,    IDAVISIMPIT,    IDTRIMPSTII,
                                             CDSITUTRIBITNFE, IDMODBCITNFE,   IDMODBCSTITNFE,  CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT,
                                             CDDETALHEPROD,   VRIMPOSTOVISUIT,   CDREGRAIT, CDENQLEGALIPI, CDCEST, VRADICFECP, VRADICALIQFECP,
                                             CDBENEFFISCAL,   IDDESONERAREGRA, IDCONSDESONVRNF, IDVALORINFIT, VRPERREDBCSTIT)
                                          VALUES(
                                             P_FILIAL,                P_LANCTONF,     C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, w_2,                 w_2,
                                             NVL(V_SITUTRIBPR, C_ITEMPROD.CDSITUTRIBPR), V_FISOPEITEM,   V_SUFXCFOPPR,           0,                        V_PERDBCALC,         V_PARDEDTMP,
                                             V_CONTABCALC,            0,              0,                      w_00000,                  w_00000,             V_IDTRIMPSTII,
                                             V_CDSITUTRIBNFE,         V_IDMODBCNFEIT, V_IDMODBCSTNFEIT,       V_CDTPCRPICOSTNFEIT,      V_CDNATUBCPCSTNFEIT, V_IDMOTIDESSTNFE,
                                             V_CDDETALHEPRODTEMP,     0,     V_CDREGRAITALIQ, V_CDENQLEGALIPI, V_CDCEST, ROUND((C_ITEMPROIMPOS.VRADICFECP * V_VRFATOCONV), 2), C_ITEMPROIMPOS.VRADICALIQFECP,
                                             V_CDBENEFFISCAL, NVL(V_IDIMPODESONERA, 'N'), NVL(V_IDCONSDESONVRNF, 'N'), C_ITEMPROIMPOS.IDVALORINFIT, V_PREDBCSTIT);
                                       END IF;
                                    END IF;
                                 END IF;
                                 IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
                                    INSERT INTO ITEMPROIMPOSORIG(CDFILIAL,     NRLANCTONF,     NRSEQITPROD,     CDIMPOSTO,      NRITPROIMPOS,    CDFISCALIT,
                                                             CDSITUTRIBIT, CDFISCOPERIT,   CDSUFXCFOPIT,    VRALIQITEM,     VRPERREDBCIT,    VRPARDEDIT,
                                                             VRCONTITIMP,  VRBASECALCIT,   VRIMPOSTOIT,     IDERROSIMPIT,   IDAVISIMPIT,     CDSITUTRIBITNFE,
                                                             IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT, IDTRIMPSTII,
                                                             CDDETALHEPROD, CDENQLEGALIPI, CDCEST, CDBENEFFISCAL)
                                    VALUES(P_FILIAL, P_LANCTONF, C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, C_ITEMPROIMPOS.NRITPROIMPOS, C_ITEMPROIMPOS.CDFISCALIT,
                                           C_ITEMPROD.CDSITUTRIBPR, V_FISOPEITEM, V_SUFXCFOPPR, C_ITEMPROIMPOS.VRALIQITEM, C_ITEMPROIMPOS.VRPERREDBCIT, TRUNC((C_ITEMPROIMPOS.VRPARDEDIT * V_VRFATOCONV),2),
                                           TRUNC((C_ITEMPROIMPOS.VRCONTITIMP * V_VRFATOCONV),2), TRUNC((C_ITEMPROIMPOS.VRBASECALCIT * V_VRFATOCONV),2),
                                           TRUNC((C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV),2), w_00000, w_00000, C_ITEMPROIMPOS.CDSITUTRIBNFE,
                                           C_ITEMPROIMPOS.IDMODBCNFE, C_ITEMPROIMPOS.IDMODBCSTNFE, C_ITEMPROIMPOS.CDTPCREDPICOITE, C_ITEMPROIMPOS.CDNATUBCALPCIT, NVL(C_ITEMPROIMPOS.IDMOTDESONERAIT,'9'), C_ITEMPROIMPOS.IDTRIMPSTII,
                                           V_CDDETALHEPRODTEMP, V_CDENQLEGALIPI, V_CDCEST, V_CDBENEFFISCAL);
                                 ELSE
                                    INSERT INTO ITEMPROIMPOSORIG(CDFILIAL,     NRLANCTONF,     NRSEQITPROD,     CDIMPOSTO,      NRITPROIMPOS,    CDFISCALIT,
                                                             CDSITUTRIBIT, CDFISCOPERIT,   CDSUFXCFOPIT,    VRALIQITEM,     VRPERREDBCIT,    VRPARDEDIT,
                                                             VRCONTITIMP,  VRBASECALCIT,   VRIMPOSTOIT,     IDERROSIMPIT,   IDAVISIMPIT,     CDSITUTRIBITNFE,
                                                             IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT, IDTRIMPSTII,
                                                             CDDETALHEPROD, CDENQLEGALIPI, CDCEST, CDBENEFFISCAL)
                                    VALUES(P_FILIAL, P_LANCTONF, C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, C_ITEMPROIMPOS.NRITPROIMPOS, C_ITEMPROIMPOS.CDFISCALIT,
                                           C_ITEMPROD.CDSITUTRIBPR, V_FISOPEITEM, V_SUFXCFOPPR, C_ITEMPROIMPOS.VRALIQITEM, C_ITEMPROIMPOS.VRPERREDBCIT, (C_ITEMPROIMPOS.VRPARDEDIT * V_VRFATOCONV),
                                           ROUND((C_ITEMPROIMPOS.VRCONTITIMP * V_VRFATOCONV),2), (C_ITEMPROIMPOS.VRBASECALCIT * V_VRFATOCONV),
                                           (C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV), w_00000, w_00000, C_ITEMPROIMPOS.CDSITUTRIBNFE,
                                           C_ITEMPROIMPOS.IDMODBCNFE, C_ITEMPROIMPOS.IDMODBCSTNFE, C_ITEMPROIMPOS.CDTPCREDPICOITE, C_ITEMPROIMPOS.CDNATUBCALPCIT, NVL(C_ITEMPROIMPOS.IDMOTDESONERAIT,'9'), C_ITEMPROIMPOS.IDTRIMPSTII,
                                           V_CDDETALHEPRODTEMP, V_CDENQLEGALIPI, V_CDCEST, V_CDBENEFFISCAL);
                                 END IF;
                              END IF;
                           END IF;
                        ELSE
                           BEGIN
                              SELECT CDFILIAL
                                INTO V_CHAVE
                                FROM ITEMPROIMPOS
                               WHERE CDFILIAL     = P_FILIAL
                                 AND NRLANCTONF   = P_LANCTONF
                                 AND NRSEQITPROD  = C_ITEMPROD.NRSEQITPROD
                                 AND CDIMPOSTO    = C_ITEMPROIMPOS.CDIMPOSTO
                                 AND NRITPROIMPOS = C_ITEMPROIMPOS.NRITPROIMPOS;
                           EXCEPTION
                              WHEN NO_DATA_FOUND THEN BEGIN
                                 V_CHAVE := NULL;
                              END;
                           END;

                           IF V_IDPERVISIMPSCRE = 'S' THEN
                              V_VRIMPOSTOVISUIT := (C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV);
                           ELSE
                              IF (V_CDFISCTEMP = '1') THEN
                                V_VRIMPOSTOVISUIT := (C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV);
                              ELSE
                                V_VRIMPOSTOVISUIT := 0;
                              END IF;
                           END IF;

                           -- ALTERAR O VALOR CONTÁBIL CASO O PARÂMETRO "CONTABILIZA CONFORME NF DE ORIGEM" ESTEJA DESMARCADO
                           IF (V_IDCONTCONFORIG =  'N') THEN

                              V_IMPOCONTAB  := 0;
                              V_IDIMPORECUP := NULL;
                              V_CDCCTBLATIV := NULL;
                              V_IDTRATIMPO  := NULL;
                              V_IMPORIG     := C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV;

                              SELECT NVL(IDIMPORECUP, 'N'), IDTRATIMPO, CDCCTBLATIV
                                INTO V_IDIMPORECUP, V_IDTRATIMPO, V_CDCCTBLATIV
                                FROM IMPOSTO
                               WHERE CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO;

                              IF (V_IDIMPORECUP = W_S) THEN
                                 IF (V_CDFISCTEMP = W_1) THEN
                                    IF (V_CDCCTBLATIV IS NOT NULL) THEN
                                       IF V_IDTRATIMPO = W_V THEN
                                          V_IMPOCONTAB := - V_IMPORIG;
                                       END IF;
                                    END IF;
                                 ELSE
                                    IF V_IDTRATIMPO = W_A THEN
                                       V_IMPOCONTAB := V_IMPOSTOIT;
                                    ELSIF V_IDTRATIMPO IN (W_D,W_R) THEN
                                       V_IMPOCONTAB := - V_IMPORIG;
                                    END IF;
                                 END IF;
                              END IF;

                              V_ENCARGO := 0;
                              FOR C_ENCARGO IN (SELECT IT.CDENCARGO, VRITEMENCA, IDENCARGO
                                                  FROM ITEMENCARGO IT, ENCARGO E
                                                 WHERE IT.CDENCARGO = E.CDENCARGO
                                                   AND VRITEMENCA > 0
                                                   AND NRLANCTONF = C_ITEMNOTAFISC.NRLANCTONFIT
                                                   AND CDFILIAL = C_ITEMNOTAFISC.CDFILIALIT) LOOP
                                 IF C_ENCARGO.IDENCARGO = 'A' THEN
                                    V_ENCARGO := V_ENCARGO + C_ENCARGO.VRITEMENCA;
                                 ELSIF C_ENCARGO.IDENCARGO = 'D' THEN
                                    V_ENCARGO := V_ENCARGO - C_ENCARGO.VRITEMENCA;
                                 END IF;
                              END LOOP;
                              V_ENCARGO := V_ENCARGO * V_VRFATOCONV;

                              IF (ABS(NVL(V_IMPOCONTAB, 0)) > 0) THEN
                                 UPDATE ITEMPRODUTO
                                    SET VRCONTITEMORIG = (VRCONTITEM) + NVL((V_IMPOCONTAB + V_ENCARGO), 0),
                                        VRCONTITEM     = (VRCONTITEM) + NVL((V_IMPOCONTAB + V_ENCARGO), 0)
                                  WHERE CDFILIAL       = P_FILIAL
                                    AND NRLANCTONF     = P_LANCTONF
                                    AND NRSEQITPROD    = C_ITEMPROD.NRSEQITPROD;
                              END IF;

                           END IF;
                           -- Alterar o valor contábil caso o parâmetro "Contabiliza conforme NF de origem" esteja desmarcado
                           IF V_CHAVE IS NULL THEN
                              V_ICMS := 'N';
                              FOR C_ICMS IN (SELECT CDIMPOSTO
                                               FROM IMPOSTONFE N, IMPOSTO I
                                              WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                                                AND N.CDIMPOSTONFE = '00'
                                                AND I.CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO)
                              LOOP
                                 V_ICMS := 'S';
                              END LOOP;

                              IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
                                 INSERT INTO ITEMPROIMPOS(CDFILIAL,     NRLANCTONF,     NRSEQITPROD,     CDIMPOSTO,      NRITPROIMPOS,    CDFISCALIT,
                                                          CDSITUTRIBIT, CDFISCOPERIT,   CDSUFXCFOPIT,    VRALIQITEM,     VRPERREDBCIT,    VRPARDEDIT,
                                                          VRCONTITIMP,  VRBASECALCIT,   VRIMPOSTOIT,     IDERROSIMPIT,   IDAVISIMPIT,     CDSITUTRIBITNFE,
                                                          IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT, IDTRIMPSTII,
                                                          CDDETALHEPROD, VRIMPOSTOVISUIT, CDENQLEGALIPI, CDCEST, CDBENEFFISCAL, IDDESONERAREGRA,
                                                          IDCONSDESONVRNF, IDVALORINFIT)
                                 VALUES(P_FILIAL, P_LANCTONF, C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, C_ITEMPROIMPOS.NRITPROIMPOS, V_CDFISCTEMP,
                                        NVL(V_SITUTRIBPR, C_ITEMPROD.CDSITUTRIBPR), V_FISOPEITEM, V_SUFXCFOPPR, C_ITEMPROIMPOS.VRALIQITEM, C_ITEMPROIMPOS.VRPERREDBCIT, TRUNC((C_ITEMPROIMPOS.VRPARDEDIT * V_VRFATOCONV),2),
                                        TRUNC((C_ITEMPROIMPOS.VRCONTITIMP * V_VRFATOCONV),2), TRUNC((C_ITEMPROIMPOS.VRBASECALCIT * V_VRFATOCONV),2),
                                        TRUNC((C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV),2), w_00000, w_00000, V_CDSITUTRIBNFE,
                                        V_IDMODBCNFEIT, V_IDMODBCSTNFEIT, V_CDTPCRPICOSTNFEIT, V_CDNATUBCPCSTNFEIT, V_IDMOTIDESSTNFE, C_ITEMPROIMPOS.IDTRIMPSTII,
                                        V_CDDETALHEPRODTEMP, TRUNC(V_VRIMPOSTOVISUIT,2), V_CDENQLEGALIPI, V_CDCEST, V_CDBENEFFISCAL, NVL(V_IDIMPODESONERA, 'N'),
                                        NVL(V_IDCONSDESONVRNF, 'N'), C_ITEMPROIMPOS.IDVALORINFIT);
                              ELSE
                                 INSERT INTO ITEMPROIMPOS(CDFILIAL,     NRLANCTONF,     NRSEQITPROD,     CDIMPOSTO,      NRITPROIMPOS,    CDFISCALIT,
                                                          CDSITUTRIBIT, CDFISCOPERIT,   CDSUFXCFOPIT,    VRALIQITEM,     VRPERREDBCIT,    VRPARDEDIT,
                                                          VRCONTITIMP,  VRBASECALCIT,   VRIMPOSTOIT,     IDERROSIMPIT,   IDAVISIMPIT,     CDSITUTRIBITNFE,
                                                          IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT, IDTRIMPSTII,
                                                          CDDETALHEPROD, VRIMPOSTOVISUIT, CDENQLEGALIPI, CDCEST, VRADICFECP, VRADICALIQFECP,
                                                          CDBENEFFISCAL, IDDESONERAREGRA, IDCONSDESONVRNF, IDVALORINFIT)
                                 VALUES(P_FILIAL, P_LANCTONF, C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, C_ITEMPROIMPOS.NRITPROIMPOS, V_CDFISCTEMP,
                                        NVL(V_SITUTRIBPR, C_ITEMPROD.CDSITUTRIBPR), V_FISOPEITEM, V_SUFXCFOPPR, C_ITEMPROIMPOS.VRALIQITEM, C_ITEMPROIMPOS.VRPERREDBCIT, (C_ITEMPROIMPOS.VRPARDEDIT * V_VRFATOCONV),
                                        ROUND((C_ITEMPROIMPOS.VRCONTITIMP * V_VRFATOCONV),2), (C_ITEMPROIMPOS.VRBASECALCIT * V_VRFATOCONV),
                                        (C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV), w_00000, w_00000, V_CDSITUTRIBNFE,
                                        V_IDMODBCNFEIT, V_IDMODBCSTNFEIT, V_CDTPCRPICOSTNFEIT, V_CDNATUBCPCSTNFEIT, V_IDMOTIDESSTNFE, C_ITEMPROIMPOS.IDTRIMPSTII,
                                        V_CDDETALHEPRODTEMP, ROUND(V_VRIMPOSTOVISUIT,2), V_CDENQLEGALIPI, V_CDCEST, ROUND((C_ITEMPROIMPOS.VRADICFECP * V_VRFATOCONV), 2), C_ITEMPROIMPOS.VRADICALIQFECP,
                                        V_CDBENEFFISCAL, NVL(V_IDIMPODESONERA, 'N'), NVL(V_IDCONSDESONVRNF, 'N'), C_ITEMPROIMPOS.IDVALORINFIT);
                              END IF;

                              IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
                                 INSERT INTO ITEMPROIMPOSORIG(CDFILIAL,     NRLANCTONF,     NRSEQITPROD,     CDIMPOSTO,      NRITPROIMPOS,    CDFISCALIT,
                                                          CDSITUTRIBIT, CDFISCOPERIT,   CDSUFXCFOPIT,    VRALIQITEM,     VRPERREDBCIT,    VRPARDEDIT,
                                                          VRCONTITIMP,  VRBASECALCIT,   VRIMPOSTOIT,     IDERROSIMPIT,   IDAVISIMPIT,     CDSITUTRIBITNFE,
                                                          IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT, IDTRIMPSTII,
                                                          CDDETALHEPROD, CDENQLEGALIPI, CDCEST, CDBENEFFISCAL)
                                 VALUES(P_FILIAL, P_LANCTONF, C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, C_ITEMPROIMPOS.NRITPROIMPOS, C_ITEMPROIMPOS.CDFISCALIT,
                                        C_ITEMPROD.CDSITUTRIBPR, V_FISOPEITEM, V_SUFXCFOPPR, C_ITEMPROIMPOS.VRALIQITEM, C_ITEMPROIMPOS.VRPERREDBCIT, TRUNC((C_ITEMPROIMPOS.VRPARDEDIT * V_VRFATOCONV),2),
                                        TRUNC((C_ITEMPROIMPOS.VRCONTITIMP * V_VRFATOCONV),2), TRUNC((C_ITEMPROIMPOS.VRBASECALCIT * V_VRFATOCONV),2),
                                        TRUNC((C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV),2), w_00000, w_00000, C_ITEMPROIMPOS.CDSITUTRIBNFE,
                                        C_ITEMPROIMPOS.IDMODBCNFE, C_ITEMPROIMPOS.IDMODBCSTNFE, C_ITEMPROIMPOS.CDTPCREDPICOITE, C_ITEMPROIMPOS.CDNATUBCALPCIT, NVL(C_ITEMPROIMPOS.IDMOTDESONERAIT,'9'), C_ITEMPROIMPOS.IDTRIMPSTII,
                                        V_CDDETALHEPRODTEMP, C_ITEMPROIMPOS.CDENQLEGALIPI, C_ITEMPROIMPOS.CDCEST, V_CDBENEFFISCAL);
                              ELSE
                                 INSERT INTO ITEMPROIMPOSORIG(CDFILIAL,     NRLANCTONF,     NRSEQITPROD,     CDIMPOSTO,      NRITPROIMPOS,    CDFISCALIT,
                                                          CDSITUTRIBIT, CDFISCOPERIT,   CDSUFXCFOPIT,    VRALIQITEM,     VRPERREDBCIT,    VRPARDEDIT,
                                                          VRCONTITIMP,  VRBASECALCIT,   VRIMPOSTOIT,     IDERROSIMPIT,   IDAVISIMPIT,     CDSITUTRIBITNFE,
                                                          IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT, IDTRIMPSTII,
                                                          CDDETALHEPROD, CDENQLEGALIPI, CDCEST, CDBENEFFISCAL)
                                 VALUES(P_FILIAL, P_LANCTONF, C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, C_ITEMPROIMPOS.NRITPROIMPOS, C_ITEMPROIMPOS.CDFISCALIT,
                                        C_ITEMPROD.CDSITUTRIBPR, V_FISOPEITEM, V_SUFXCFOPPR, C_ITEMPROIMPOS.VRALIQITEM, C_ITEMPROIMPOS.VRPERREDBCIT, (C_ITEMPROIMPOS.VRPARDEDIT * V_VRFATOCONV),
                                        ROUND((C_ITEMPROIMPOS.VRCONTITIMP * V_VRFATOCONV),2), (C_ITEMPROIMPOS.VRBASECALCIT * V_VRFATOCONV),
                                        (C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV), w_00000, w_00000, C_ITEMPROIMPOS.CDSITUTRIBNFE,
                                        C_ITEMPROIMPOS.IDMODBCNFE, C_ITEMPROIMPOS.IDMODBCSTNFE, C_ITEMPROIMPOS.CDTPCREDPICOITE, C_ITEMPROIMPOS.CDNATUBCALPCIT, NVL(C_ITEMPROIMPOS.IDMOTDESONERAIT,'9'), C_ITEMPROIMPOS.IDTRIMPSTII,
                                        V_CDDETALHEPRODTEMP, C_ITEMPROIMPOS.CDENQLEGALIPI, C_ITEMPROIMPOS.CDCEST, V_CDBENEFFISCAL);
                              END IF;
                           END IF;
                        END IF;
                     END IF;

                     DELETE ALIQTEMP
                      WHERE NRALIQTEMP = V_ALIQTEMP;
                  END LOOP;
               ELSE
                  FOR C_ITEMPROIMPOS IN (SELECT VRPERREDBCIT,  NRITPROIMPOS, IT.CDIMPOSTO, CDFISCALIT, VRALIQITEM, VRPARDEDIT, SUM(VRCONTITIMP) AS VRCONTITIMP, SUM(VRBASECALCIT) AS VRBASECALCIT,
                                                SUM(VRIMPOSTOIT) AS VRIMPOSTOIT, CDSITUTRIBITNFE AS CDSITUTRIBNFE,
                                                IDMODBCITNFE AS IDMODBCNFE, IDMODBCSTITNFE AS IDMODBCSTNFE, CDTPCREDPICOITE, CDNATUBCALPCIT,
                                                IDMOTDESONERAIT, IDTRIMPSTII, NVL(IDDIFALIQCUSPRI, 'N') AS IDDIFALIQCUSPRI, IM.CDIMPOSTONFE,
                                                IT.CDENQLEGALIPI, IT.CDCEST,
                                                NVL(I.IDUTVRPAUTAPROD, 'N') AS IDUTVRPAUTAPROD, NVL(I.VRPAUTAMINPROD, 1) AS VRPAUTAMINPROD, I.QTITEMPROD, IM.IDUTVRPAUTA, NVL(IT.VRADICALIQFECP, 0) AS VRADICALIQFECP, NVL(SUM(IT.VRADICFECP), 0) AS VRADICFECP,
                                                I.CDFISOPEITEM, IT.CDBENEFFISCAL,
                                                NVL(IT.IDVALORINFIT, W_N) AS IDVALORINFIT
                                           FROM ITEMPROIMPOS IT, ITEMPRODUTO I, IMPOSTO IM
                                          WHERE IT.CDFILIAL = C_ITEMNOTAFISC.CDFILIALIT
                                            AND IT.NRLANCTONF = C_ITEMNOTAFISC.NRLANCTONFIT
                                            AND I.CDFILIAL = C_ITEMNOTAFISC.CDFILIALIT
                                            AND I.NRLANCTONF = C_ITEMNOTAFISC.NRLANCTONFIT
                                            AND IT.NRSEQITPROD = I.NRSEQITPROD
                                            AND IT.CDIMPOSTO = IM.CDIMPOSTO
                                            AND I.CDPRODUTO = C_ITEMPROD.CDPRODUTO
                                            AND IT.NRITPROIMPOS = '1'
                                            AND ROUND(I.VRUNITITEM, 5) = ROUND(C_ITEMPROD.VRUNITITEM, 5)
                                            AND (NVL(I.NRLOTEESTQ, ' ') = (NVL(C_ITEMPROD.NRLOTEESTQ, ' ')))
                                            AND (NVL(I.NRSUBLOTE, ' ') = (NVL(C_ITEMPROD.NRSUBLOTE,  ' ')))
                                          GROUP BY VRPERREDBCIT,
                                                IT.CDIMPOSTO,
                                                NRITPROIMPOS,
                                                CDFISCALIT,
                                                VRALIQITEM,
                                                VRPARDEDIT,
                                                CDSITUTRIBITNFE,
                                                IDMODBCITNFE,
                                                IDMODBCSTITNFE,
                                                CDTPCREDPICOITE,
                                                CDNATUBCALPCIT,
                                                IDMOTDESONERAIT,
                                                IDTRIMPSTII,
                                                IDDIFALIQCUSPRI,
                                                IM.CDIMPOSTONFE,
                                                IT.CDENQLEGALIPI,
                                                IT.CDCEST,
                                                NVL(I.IDUTVRPAUTAPROD, 'N'),
                                                NVL(I.VRPAUTAMINPROD, 1),
                                                I.QTITEMPROD,
                                                IM.IDUTVRPAUTA,
                                                NVL(IT.VRADICALIQFECP, 0),
                                                I.CDFISOPEITEM,
                                                IT.CDBENEFFISCAL,
                                                NVL(IT.IDVALORINFIT, W_N)
                                          ORDER BY CDIMPOSTO) LOOP

                     /*IMPOSTO DE SUBSTITUICAO TRIBUTARIA*/
                     V_CDIMPOSTRIB  := null;

                     V_CDBENEFFISCAL := NULL;

                     FOR C_ICMSST IN (SELECT CDIMPOSTO
                                        FROM IMPOSTO
                                       WHERE CDIMPOSTRIB = C_ITEMPROIMPOS.CDIMPOSTO)
                     LOOP
                        V_CDIMPOSTRIB := V_CDIMPOSTRIB||C_ICMSST.CDIMPOSTO||'_';
                     END LOOP;

                     V_CDIMPOSIPI := null;
                     SELECT NVL(MAX(IDGERIPIDESPA), 'N'), MAX(CDIMPOSTOIPI)
                       INTO V_IDGERIPIDESPA, V_CDIMPOSIPI
                       FROM TIPOOPERAC
                      WHERE IDENTRSAIDOP = 'S'
                        AND CDTIPOOPER = P_TIPOOPER
                        AND CDIMPOSTOIPI = C_ITEMPROIMPOS.CDIMPOSTO;

                     IF (V_IDGERICMSTDESPA = 'S') AND (V_CDIMPOSTRIB IS NOT NULL) AND (V_IDUTCTRLFIS = 'S') THEN
                        IF NOT((C_ITEMPROIMPOS.VRPERREDBCIT > 0.00) AND (C_ITEMPROIMPOS.NRITPROIMPOS = w_2)) THEN
                           V_VRTOTALICMSST := V_VRTOTALICMSST + (C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV);
                        END IF;
                        IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
                           INSERT INTO ITEMPROIMPOSORIG(CDFILIAL,     NRLANCTONF,     NRSEQITPROD,     CDIMPOSTO,      NRITPROIMPOS,    CDFISCALIT,
                                                    CDSITUTRIBIT, CDFISCOPERIT,   CDSUFXCFOPIT,    VRALIQITEM,     VRPERREDBCIT,    VRPARDEDIT,
                                                    VRCONTITIMP,  VRBASECALCIT,   VRIMPOSTOIT,     IDERROSIMPIT,   IDAVISIMPIT,     CDSITUTRIBITNFE,
                                                    IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT, IDTRIMPSTII,
                                                    CDDETALHEPROD, CDENQLEGALIPI, CDCEST,          CDBENEFFISCAL)
                           VALUES(P_FILIAL, P_LANCTONF, C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, C_ITEMPROIMPOS.NRITPROIMPOS, C_ITEMPROIMPOS.CDFISCALIT,
                                  C_ITEMPROD.CDSITUTRIBPR, V_FISOPEITEM, V_SUFXCFOPPR, C_ITEMPROIMPOS.VRALIQITEM, C_ITEMPROIMPOS.VRPERREDBCIT, TRUNC((C_ITEMPROIMPOS.VRPARDEDIT * V_VRFATOCONV),2),
                                  TRUNC((C_ITEMPROIMPOS.VRCONTITIMP * V_VRFATOCONV),2), TRUNC((C_ITEMPROIMPOS.VRBASECALCIT * V_VRFATOCONV),2),
                                  TRUNC((C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV),2), w_00000, w_00000, C_ITEMPROIMPOS.CDSITUTRIBNFE,
                                  C_ITEMPROIMPOS.IDMODBCNFE, C_ITEMPROIMPOS.IDMODBCSTNFE, C_ITEMPROIMPOS.CDTPCREDPICOITE, C_ITEMPROIMPOS.CDNATUBCALPCIT, NVL(C_ITEMPROIMPOS.IDMOTDESONERAIT,'9'), C_ITEMPROIMPOS.IDTRIMPSTII,
                                  V_CDDETALHEPRODTEMP, C_ITEMPROIMPOS.CDENQLEGALIPI, C_ITEMPROIMPOS.CDCEST, C_ITEMPROIMPOS.CDBENEFFISCAL);
                        ELSE
                           INSERT INTO ITEMPROIMPOSORIG(CDFILIAL,     NRLANCTONF,     NRSEQITPROD,     CDIMPOSTO,      NRITPROIMPOS,    CDFISCALIT,
                                                    CDSITUTRIBIT, CDFISCOPERIT,   CDSUFXCFOPIT,    VRALIQITEM,     VRPERREDBCIT,    VRPARDEDIT,
                                                    VRCONTITIMP,  VRBASECALCIT,   VRIMPOSTOIT,     IDERROSIMPIT,   IDAVISIMPIT,     CDSITUTRIBITNFE,
                                                    IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT, IDTRIMPSTII,
                                                    CDDETALHEPROD, CDENQLEGALIPI, CDCEST,          CDBENEFFISCAL)
                           VALUES(P_FILIAL, P_LANCTONF, C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, C_ITEMPROIMPOS.NRITPROIMPOS, C_ITEMPROIMPOS.CDFISCALIT,
                                  C_ITEMPROD.CDSITUTRIBPR, V_FISOPEITEM, V_SUFXCFOPPR, C_ITEMPROIMPOS.VRALIQITEM, C_ITEMPROIMPOS.VRPERREDBCIT, (C_ITEMPROIMPOS.VRPARDEDIT * V_VRFATOCONV),
                                  ROUND((C_ITEMPROIMPOS.VRCONTITIMP * V_VRFATOCONV),2), (C_ITEMPROIMPOS.VRBASECALCIT * V_VRFATOCONV),
                                  (C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV), w_00000, w_00000, C_ITEMPROIMPOS.CDSITUTRIBNFE,
                                  C_ITEMPROIMPOS.IDMODBCNFE, C_ITEMPROIMPOS.IDMODBCSTNFE, C_ITEMPROIMPOS.CDTPCREDPICOITE, C_ITEMPROIMPOS.CDNATUBCALPCIT, NVL(C_ITEMPROIMPOS.IDMOTDESONERAIT,'9'), C_ITEMPROIMPOS.IDTRIMPSTII,
                                  V_CDDETALHEPRODTEMP, C_ITEMPROIMPOS.CDENQLEGALIPI, C_ITEMPROIMPOS.CDCEST, C_ITEMPROIMPOS.CDBENEFFISCAL);
                        END IF;
                     END IF;
                     IF (V_IDGERIPIDESPA = 'S') AND (V_CDIMPOSIPI IS NOT NULL) AND (V_IDUTCTRLFIS = 'S') THEN
                        IF NOT((C_ITEMPROIMPOS.VRPERREDBCIT > 0.00) AND (C_ITEMPROIMPOS.NRITPROIMPOS = w_2)) THEN
                           V_VRTOTALIPI := V_VRTOTALIPI + (C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV);
                        END IF;
                        IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
                           INSERT INTO ITEMPROIMPOSORIG(CDFILIAL,     NRLANCTONF,     NRSEQITPROD,     CDIMPOSTO,      NRITPROIMPOS,    CDFISCALIT,
                                                    CDSITUTRIBIT, CDFISCOPERIT,   CDSUFXCFOPIT,    VRALIQITEM,     VRPERREDBCIT,    VRPARDEDIT,
                                                    VRCONTITIMP,  VRBASECALCIT,   VRIMPOSTOIT,     IDERROSIMPIT,   IDAVISIMPIT,     CDSITUTRIBITNFE,
                                                    IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT, IDTRIMPSTII,
                                                    CDDETALHEPROD, CDENQLEGALIPI, CDCEST, CDBENEFFISCAL)
                           VALUES(P_FILIAL, P_LANCTONF, C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, C_ITEMPROIMPOS.NRITPROIMPOS, C_ITEMPROIMPOS.CDFISCALIT,
                                  C_ITEMPROD.CDSITUTRIBPR, V_FISOPEITEM, V_SUFXCFOPPR, C_ITEMPROIMPOS.VRALIQITEM, C_ITEMPROIMPOS.VRPERREDBCIT, TRUNC((C_ITEMPROIMPOS.VRPARDEDIT * V_VRFATOCONV),2),
                                  TRUNC((C_ITEMPROIMPOS.VRCONTITIMP * V_VRFATOCONV),2), TRUNC((C_ITEMPROIMPOS.VRBASECALCIT * V_VRFATOCONV),2),
                                  TRUNC((C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV),2), w_00000, w_00000, C_ITEMPROIMPOS.CDSITUTRIBNFE,
                                  C_ITEMPROIMPOS.IDMODBCNFE, C_ITEMPROIMPOS.IDMODBCSTNFE, C_ITEMPROIMPOS.CDTPCREDPICOITE, C_ITEMPROIMPOS.CDNATUBCALPCIT, NVL(C_ITEMPROIMPOS.IDMOTDESONERAIT,'9'), C_ITEMPROIMPOS.IDTRIMPSTII,
                                  V_CDDETALHEPRODTEMP, C_ITEMPROIMPOS.CDENQLEGALIPI, C_ITEMPROIMPOS.CDCEST, C_ITEMPROIMPOS.CDBENEFFISCAL);
                        ELSE
                           INSERT INTO ITEMPROIMPOSORIG(CDFILIAL,     NRLANCTONF,     NRSEQITPROD,     CDIMPOSTO,      NRITPROIMPOS,    CDFISCALIT,
                                                    CDSITUTRIBIT, CDFISCOPERIT,   CDSUFXCFOPIT,    VRALIQITEM,     VRPERREDBCIT,    VRPARDEDIT,
                                                    VRCONTITIMP,  VRBASECALCIT,   VRIMPOSTOIT,     IDERROSIMPIT,   IDAVISIMPIT,     CDSITUTRIBITNFE,
                                                    IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT, IDTRIMPSTII,
                                                    CDDETALHEPROD, CDENQLEGALIPI, CDCEST, CDBENEFFISCAL)
                           VALUES(P_FILIAL, P_LANCTONF, C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, C_ITEMPROIMPOS.NRITPROIMPOS, C_ITEMPROIMPOS.CDFISCALIT,
                                  C_ITEMPROD.CDSITUTRIBPR, V_FISOPEITEM, V_SUFXCFOPPR, C_ITEMPROIMPOS.VRALIQITEM, C_ITEMPROIMPOS.VRPERREDBCIT, (C_ITEMPROIMPOS.VRPARDEDIT * V_VRFATOCONV),
                                  ROUND((C_ITEMPROIMPOS.VRCONTITIMP * V_VRFATOCONV),2), (C_ITEMPROIMPOS.VRBASECALCIT * V_VRFATOCONV),
                                  (C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV), w_00000, w_00000, C_ITEMPROIMPOS.CDSITUTRIBNFE,
                                  C_ITEMPROIMPOS.IDMODBCNFE, C_ITEMPROIMPOS.IDMODBCSTNFE, C_ITEMPROIMPOS.CDTPCREDPICOITE, C_ITEMPROIMPOS.CDNATUBCALPCIT, NVL(C_ITEMPROIMPOS.IDMOTDESONERAIT,'9'), C_ITEMPROIMPOS.IDTRIMPSTII,
                                  V_CDDETALHEPRODTEMP, C_ITEMPROIMPOS.CDENQLEGALIPI, C_ITEMPROIMPOS.CDCEST, C_ITEMPROIMPOS.CDBENEFFISCAL);
                        END IF;
                     END IF;

                     IF (NOT((V_IDGERICMSTDESPA = 'S') AND (V_CDIMPOSTRIB IS NOT NULL) OR (V_IDGERIPIDESPA = 'S')
                        AND (V_CDIMPOSIPI IS NOT NULL)) AND (V_IDUTCTRLFIS = 'S')) OR (V_IDUTCTRLFIS = 'N') THEN
                        -- Verifica se há grupo fiscal por servico
                        SELECT MAX(CDGRUPOFISC)
                        INTO V_CDGRPFISCSV
                        FROM SERVCLIE SC, SERVICO S
                        WHERE SC.CDFILIAL   = V_CDFILIEMIT AND
                              SC.CDCLIENTE  = P_CLIENTE    AND
                              SC.CDFILIAL   = S.CDFILIAL   AND
                              SC.CDSERVFILI = S.CDSERVFILI AND
                              S.CDPRODUTO   = C_ITEMPROD.CDPRODUTO;

                        IF V_CDGRPFISCSV IS NULL THEN
                        -- Verifica se há grupo fiscal por cliente da filial
                           SELECT MAX(CDGRUPOFISC)
                           INTO V_CDGRPFISCSV
                           FROM CLIENFILIAL
                           WHERE CDFILIAL   = V_CDFILIEMIT AND
                                 CDCLIENTE  = P_CLIENTE;
                        END IF;

                        IF (C_ITEMPROD.IDPRODBONIF = 'N') OR (V_CDTIPOOPERBONIF = 'N') THEN
                           CONSULTA_INCIDENCIA(w_S, P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, P_TIPOOPER, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC,
                                               V_CDGRPFISCSV, V_IDINTEREST, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPROD.IDORIGEMPROD);
                        ELSE
                           CONSULTA_INCIDENCIA(w_S, P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, V_CDTIPOOPERBONIF, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC,
                                               V_CDGRPFISCSV, V_IDINTEREST, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPROD.IDORIGEMPROD);
                        END IF;
                        BEGIN
                           SELECT MAX(CDFISCTEMP), MAX(CDDETALHEPROD), MAX(CDENQLEGALIPI), MAX(CDCEST)
                             INTO   V_CDFISCTEMP, V_CDDETALHEPRODTEMP, V_CDENQLEGALIPI, V_CDCEST
                            FROM INCITEMP IT, IMPOSTO IP
                            WHERE IT.NRINCITEMP = V_INCITEMP
                              AND IP.CDIMPOSTO  = IT.CDIMPOTEMP
                              AND IP.IDPRODNOTA = w_P
                              AND IT.CDIMPOTEMP = C_ITEMPROIMPOS.CDIMPOSTO;
                        EXCEPTION
                           WHEN NO_DATA_FOUND THEN
                              V_CDFISCTEMP        := NULL;
                              V_CDDETALHEPRODTEMP := NULL;
                              V_CDENQLEGALIPI     := NULL;
                              V_CDCEST            := NULL;
                        END;

                        IF (C_ITEMPROIMPOS.VRPERREDBCIT > 0.00) AND
                           (C_ITEMPROIMPOS.NRITPROIMPOS = w_2) THEN
                           V_CDFISCTEMP := w_2;
                        ELSE
                           IF (V_CDFISCTEMP IS NULL) THEN
                               V_CDFISCTEMP := C_ITEMPROIMPOS.CDFISCALIT;
                           END IF;
                        END IF;

                        IF V_CDENQLEGALIPI IS NULL THEN
                           V_CDENQLEGALIPI := C_ITEMPROIMPOS.CDENQLEGALIPI;
                        END IF;

                        IF V_CDCEST IS NULL THEN
                           V_CDCEST := C_ITEMPROIMPOS.CDCEST;
                        END IF;

                        DELETE INCITEMP
                         WHERE NRINCITEMP = V_INCITEMP;

                        /*VERIFICA CST POR IMPOSTO*/
                        V_IMPOICMS := NULL;
                        V_CDGRUPOFISCAUX := NULL;

                        SELECT MAX(G.CDGRUPOFISC)
                          INTO V_CDGRUPOFISCAUX
                          FROM GRUPOFISCIMPFIL G,
                               (SELECT CDFILIEMIT AS CDFILIAL
                                  FROM NOTAFISCAL
                                 WHERE CDFILIAL = P_FILIAL
                                       AND NRLANCTONF = P_LANCTONF) F
                         WHERE G.CDFILIAL = F.CDFILIAL
                           AND NOT G.CDGRUPOFISC IS NULL
                           AND G.CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO;

                        IF V_IDORIGDESTNF = 'C' THEN
                           SELECT NVL(MAX(G.CDGRUPOFISC), V_CDGRUPOFISCAUX)
                             INTO V_CDGRUPOFISCAUX
                             FROM GRFISIMPIECLIE G,
                                  (SELECT CDCLIENTE
                                     FROM NOTAFISCAL
                                    WHERE CDFILIAL = P_FILIAL
                                      AND NRLANCTONF = P_LANCTONF) N
                            WHERE G.CDCLIENTE = N.CDCLIENTE
                              AND G.CDEMPRESA = P_EMPRESA
                              AND G.CDINSCESTA = P_INSCESTA
                              AND NOT G.CDGRUPOFISC IS NULL
                              AND G.CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO;
                        ELSE
                           SELECT NVL(MAX(G.CDGRUPOFISC), V_CDGRUPOFISCAUX)
                             INTO V_CDGRUPOFISCAUX
                             FROM GRFISIMPIEFORN G,
                                 (SELECT CDFORNECED
                                    FROM NOTAFISCAL
                                   WHERE CDFILIAL = P_FILIAL
                                     AND NRLANCTONF = P_LANCTONF) N
                            WHERE G.CDFORNECED = N.CDFORNECED
                              AND G.CDEMPRESA = P_EMPRESA
                              AND G.CDINSCESTA = P_INSCESTA
                              AND NOT G.CDGRUPOFISC IS NULL
                              AND G.CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO;
                        END IF;
                        IF V_CDGRUPOFISCAUX IS NULL THEN
                           IF (C_ITEMPROD.IDPRODBONIF = 'N') OR (V_CDTIPOOPERBONIF = 'N') THEN
                              CONSULTA_CST_NFE(w_S, P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, P_TIPOOPER, V_CDGRUPOFISC,C_ITEMPROIMPOS.CDIMPOSTO, V_IDINTEREST, V_IDINTERNA, P_FILIAL, P_LANCTONF, '', V_CDSITTRIBTMP, V_IDMODBCNFE, V_IDMODBCSTNFE, V_CDTPCRPICOSTNFE, V_CDNATUBCPCSTNFE, V_IDMOTIDESSTNFE, C_ITEMPROD.IDORIGEMPROD);
                           ELSE
                              CONSULTA_CST_NFE(w_S, P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, V_CDTIPOOPERBONIF, V_CDGRUPOFISC,C_ITEMPROIMPOS.CDIMPOSTO, V_IDINTEREST, V_IDINTERNA, P_FILIAL, P_LANCTONF, '', V_CDSITTRIBTMP, V_IDMODBCNFE, V_IDMODBCSTNFE, V_CDTPCRPICOSTNFE, V_CDNATUBCPCSTNFE, V_IDMOTIDESSTNFE, C_ITEMPROD.IDORIGEMPROD);
                           END IF;
                        ELSE
                           IF (C_ITEMPROD.IDPRODBONIF = 'N') OR (V_CDTIPOOPERBONIF = 'N') THEN
                              CONSULTA_CST_NFE(w_S, P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, P_TIPOOPER, V_CDGRUPOFISCAUX,C_ITEMPROIMPOS.CDIMPOSTO, V_IDINTEREST, V_IDINTERNA, P_FILIAL, P_LANCTONF, '', V_CDSITTRIBTMP, V_IDMODBCNFE, V_IDMODBCSTNFE, V_CDTPCRPICOSTNFE, V_CDNATUBCPCSTNFE, V_IDMOTIDESSTNFE, C_ITEMPROD.IDORIGEMPROD);
                           ELSE
                              CONSULTA_CST_NFE(w_S, P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, V_CDTIPOOPERBONIF, V_CDGRUPOFISCAUX,C_ITEMPROIMPOS.CDIMPOSTO, V_IDINTEREST, V_IDINTERNA, P_FILIAL, P_LANCTONF, '', V_CDSITTRIBTMP, V_IDMODBCNFE, V_IDMODBCSTNFE, V_CDTPCRPICOSTNFE, V_CDNATUBCPCSTNFE, V_IDMOTIDESSTNFE, C_ITEMPROD.IDORIGEMPROD);
                           END IF;
                        END IF;

                        IF (V_CDSITTRIBTMP IS NULL) THEN
                           V_CDSITUTRIBNFE := C_ITEMPROIMPOS.CDSITUTRIBNFE;
                        ELSE
                           V_CDSITUTRIBNFE := V_CDSITTRIBTMP;
                        END IF;
                        IF (V_IDMODBCNFE IS NULL) THEN
                           V_IDMODBCNFEIT := C_ITEMPROIMPOS.IDMODBCNFE;
                        ELSE
                           V_IDMODBCNFEIT := V_IDMODBCNFE;
                        END IF;
                        IF (V_IDMODBCSTNFE IS NULL) THEN
                           V_IDMODBCSTNFEIT := C_ITEMPROIMPOS.IDMODBCSTNFE;
                        ELSE
                           V_IDMODBCSTNFEIT := V_IDMODBCSTNFE;
                        END IF;
                       -- IF (C_ITEMPROIMPOS.CDTPCREDPICOITE IS NULL) THEN
                           V_CDTPCRPICOSTNFEIT := V_CDTPCRPICOSTNFE;
                       -- ELSE
                       --    V_CDTPCRPICOSTNFEIT := C_ITEMPROIMPOS.CDTPCREDPICOITE;
                       -- END IF;

                       -- IF (C_ITEMPROIMPOS.CDNATUBCALPCIT IS NULL) THEN
                           V_CDNATUBCPCSTNFEIT := V_CDNATUBCPCSTNFE;
                       -- ELSE
                       --    V_CDNATUBCPCSTNFEIT := C_ITEMPROIMPOS.CDNATUBCALPCIT;
                       -- END IF;

                        IF (V_IDMOTIDESSTNFE IS NULL) THEN
                           V_IDMOTIDESSTNFE := C_ITEMPROIMPOS.IDMOTDESONERAIT;
                        ELSE
                           V_IDMOTIDESSTNFE := V_IDMOTIDESSTNFE;
                        END IF;

                        SELECT NVL(MAX(IDUTMUNIORIG),'N')
                          INTO V_IDUTMUNIORIG
                          FROM IMPOSTO
                         WHERE CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO;

                        IF (C_ITEMPROIMPOS.IDUTVRPAUTAPROD = 'S') AND (C_ITEMPROIMPOS.IDUTVRPAUTA = 'S') THEN
                           V_LIQUIITEM := (C_ITEMPROD.QTITEMPROD * C_ITEMPROIMPOS.VRPAUTAMINPROD) / C_ITEMPROIMPOS.QTITEMPROD;
                        ELSE
                           V_LIQUIITEM := C_ITEMPROD.VRTOTAITEM - C_ITEMPROD.VRDESCITEM;
                        END IF;

                        IF ((V_IDUTMUNIORIG = 'O') OR (V_IDUTMUNIORIG = 'N')) THEN
                           IF (C_ITEMPROD.IDPRODBONIF = 'N') OR (V_CDTIPOOPERBONIF = 'N') THEN
                              CONSULTA_ALIQUOTA(C_ITEMPROIMPOS.CDIMPOSTO, w_S, P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIORIG, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_TIPOOPER,
                                                NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPROD.IDORIGEMPROD);
                           ELSE
                              CONSULTA_ALIQUOTA(C_ITEMPROIMPOS.CDIMPOSTO, w_S, P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIORIG, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, V_CDTIPOOPERBONIF,
                                                NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPROD.IDORIGEMPROD);
                           END IF;
                        ELSE
                           IF (C_ITEMPROD.IDPRODBONIF = 'N') OR (V_CDTIPOOPERBONIF = 'N') THEN
                              CONSULTA_ALIQUOTA(C_ITEMPROIMPOS.CDIMPOSTO, w_S, P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_TIPOOPER,
                                                NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPROD.IDORIGEMPROD);
                           ELSE
                              CONSULTA_ALIQUOTA(C_ITEMPROIMPOS.CDIMPOSTO, w_S, P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, V_CDTIPOOPERBONIF,
                                                NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPROD.IDORIGEMPROD);
                           END IF;
                        END IF;

                        V_NRALIQTEMP := 0;
                        V_PARDEDTMP  := 0;
                        V_PREDBCTMP  := 0;
                        V_ALIQUTMP   := 0;
                        V_IMPOSTOIT  := 0;
                        V_CDTIPOOPER    := NULL;
                        V_CDREGRAITALIQ := NULL;
                        V_VRADICFECP     := NULL;
                        V_VRADICALIQFECP := NULL;
                        V_IDIMPODESONERA  := w_N;
                        V_IDCONSDESONVRNF := w_N;
                        V_VRALIQICMSCBSP := 0;

                        SELECT NVL(MAX(NRALIQTEMP),0),
                               NVL(MAX(VRPARDEDTMP),0),
                               NVL(MAX(VRPREDBCTMP),0),
                               NVL(MAX(VRALIQUTMP),0),
                               NVL(MAX(IDTRIMPSTTMP), w_0),
                               NVL(MAX(VRPBCSTTMP),0),
                               NVL(MAX(IDPMCBSCALTMP), w_N),
                               MAX(CDTIPOOPERTMP),
                               MAX(CDREGRATMP),
                               MAX(CDFISCOPER),
                               MAX(IDDIFEALIQ),
                               MAX(IDDIFALIQCUSPR),
                               MAX(CDBENEFFISCAL),
                               NVL(MAX(IDIMPODESONERA), 'N'),
                               NVL(MAX(IDCONSDESONVRNF), 'N'),
                               NVL(MAX(IDCONSMVAPMC), '3'),
                               NVL(MAX(IDCONSCOMPBCPMC), '3'),
                               NVL(MAX(VRADICALIQFECP),0)
                          INTO V_NRALIQTEMP,
                               V_PARDEDTMP,
                               V_PREDBCTMP,
                               V_ALIQUTMP,
                               V_TRATIMPST,
                               V_PBCSUBTRIB,
                               V_IDPMCBASECAL,
                               V_CDTIPOOPER,
                               V_CDREGRAITALIQ,
                               V_CDFISCOPERREGRA,
                               V_IDDIFEALIQREGRA,
                               V_IDDIFALIQCUSPRREGRA,
                               V_CDBENEFFISCAL,
                               V_IDIMPODESONERA,
                               V_IDCONSDESONVRNF,
                               V_IDCONSMVAPMC,
                               V_IDCONSCOMPBCPMC,
                               V_VRADICALIQFECP
                          FROM ALIQTEMP
                         WHERE (NRALIQTEMP = V_ALIQTEMP);


                        IF V_CDBENEFFISCAL IS NULL THEN
                           V_CDBENEFFISCAL := C_ITEMPROIMPOS.CDBENEFFISCAL;
                        END IF;

                        IF V_PAISORIG = V_PAISCFOP THEN
                           IF V_ESTAORIG = V_ESTACFOP THEN
                              V_CFOP1DIGT := '5';
                           ELSE
                              V_CFOP1DIGT := '6';
                           END IF;
                        ELSE
                           V_CFOP1DIGT := '7';
                        END IF;

                        IF V_CDFISCOPERREGRA IS NOT NULL THEN
                           IF (LENGTH(V_CDFISCOPERREGRA) < 4) THEN
                              V_CDFISCOPERREGRA := V_CFOP1DIGT||V_CDFISCOPERREGRA;
                           END IF;
                        ELSE
                           V_CDFISCOPERREGRA :=  V_FISOPEITEM;
                        END IF;

                        V_ICMS := 'N';
                        FOR C_ICMS IN (SELECT CDIMPOSTO
                                         FROM IMPOSTONFE N, IMPOSTO I
                                        WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                                          AND N.CDIMPOSTONFE = '00'
                                          AND I.CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO)
                        LOOP
                           V_ICMS := 'S';
                        END LOOP;

                        IF (V_ICMS = 'S') THEN
                           IF (NVL(V_CFOPINFUSU, 'N') <> 'S') AND (V_CDFISCOPERREGRA IS NOT NULL) THEN
                              V_FISOPEITEM        := NVL(V_CDFISCOPERREGRA, V_FISOPEITEM);
                              V_DSCDFISOPEITREGRA := SUBSTR(DESCRICAO_CFOP(V_CDFISCOPERREGRA),1,45);
                           END IF;

                           UPDATE NOTAFISCAL
                              SET DSCDFISOPENF = NVL(V_DSCDFISOPEITREGRA, (SELECT MAX(DSCFOPTMP)
                                                                               FROM CFOPTEMP
                                                                              WHERE NRCFOPTEMP = V_CFOPTEMP))
                            WHERE CDFILIAL   = P_FILIAL   AND
                                  NRLANCTONF = P_LANCTONF;


                           SELECT MAX(CDFISOPETMP), MAX(CDSUFCFOPTMP), SUBSTR(MAX(DSCFOPTMP),1,50)
                             INTO V_FISOPEITEM    , V_SUFXCFOPPR, V_DSCDFISOPEIT
                             FROM CFOPTEMP
                            WHERE NRCFOPTEMP = V_CFOPTEMP;

                           IF (NVL(V_CFOPINFUSU, 'N') <> 'S') AND (V_CDFISCOPERREGRA IS NOT NULL) THEN
                              V_FISOPEITEM        := NVL(V_CDFISCOPERREGRA, V_FISOPEITEM);
                              V_DSCDFISOPEITREGRA := SUBSTR(DESCRICAO_CFOP(V_CDFISCOPERREGRA),1,45);
                           END IF;

                           UPDATE ITEMPRODUTO
                              SET CDFISOPEITEM  = V_FISOPEITEM,
                                  CDSUFXCFOPPR  = V_SUFXCFOPPR,
                                  DSCDFISOPEIT  = V_DSCDFISOPEIT
                            WHERE CDFILIAL    = P_FILIAL AND
                                  NRLANCTONF  = P_LANCTONF AND
                                  NRSEQITPROD = C_ITEMPROD.NRSEQITPROD;
                        END IF;



                        /*Verifica alíquota parametrizada por tipo de operação desde que não seja nota de estorno de cancelamento*/
                        V_TAXABASECALC := (100 - V_PREDBCTMP)/100;
                        V_CONTABCALC  := V_LIQUIITEM - (V_LIQUIITEM * V_TAXABASECALC);

                        IF ((V_NRALIQTEMP IS NOT NULL) AND (V_CDTIPOOPER IS NOT NULL) AND (V_ESTORNOCANC <> w_S)) THEN
                           V_CDIMPOSRECALC := V_CDIMPOSRECALC||C_ITEMPROIMPOS.CDIMPOSTO||'_';
                           IF (C_ITEMPROIMPOS.NRITPROIMPOS = w_2) THEN
                              V_CDIMPOSTRIB  := null;
                              V_IDVRIMPSTRIB := null;

                           ELSE
                              V_CDIMPOSTRIB  := null;
                              V_IDVRIMPSTRIB := null;

                              /*IMPOSTO DE SUBSTITUICAO TRIBUTARIA*/
                              FOR C_ICMSST IN (SELECT CDIMPOSTO
                                                 FROM IMPOSTO
                                                WHERE CDIMPOSTRIB = C_ITEMPROIMPOS.CDIMPOSTO)
                              LOOP
                                 V_CDIMPOSTRIB := V_CDIMPOSTRIB||C_ICMSST.CDIMPOSTO||'_';
                              END LOOP;

                              V_TAXABASECALC := (100 - V_PREDBCTMP)/100;
                              V_TAXAALIQUOTA := (V_ALIQUTMP/100);
                              V_TAXABCSUBSTR := 1 + (V_PBCSUBTRIB/100);
                              V_BASECALCIT   := V_LIQUIITEM * V_TAXABASECALC;

                              IF V_CDIMPOSTRIB IS NULL THEN
                                 V_IDTRIMPSTII := '';
                                 IF NVL(V_IDPMCBASECAL, W_N) = W_S THEN
                                    CALCULA_BC_PMC(P_FILIAL,
                                                   P_LANCTONF,
                                                   C_ITEMPROD.NRSEQITPROD,
                                                   C_ITEMPROIMPOS.CDIMPOSTO,
                                                   V_IDCONSMVAPMC,
                                                   V_IDCONSCOMPBCPMC,
                                                   V_PAISDEST,
                                                   V_ESTADEST,
                                                   C_ITEMPROD.CDPRODUTO,
                                                   C_ITEMPROD.QTITEMPROD,
                                                   C_ITEMPROD.VRUNITITEM,
                                                   C_ITEMPROD.VRDESCITEM,
                                                   V_PBCSUBTRIB,
                                                   V_PREDBCTMP,
                                                   V_VRALIQICMSCBSP,
                                                   NULL,
                                                   NULL,
                                                   NULL,
                                                   NULL,
                                                   NULL,
                                                   NULL,
                                                   'N',
                                                   V_BASECALCTO);

                                    V_IMPOSTOIT  := (V_BASECALCTO * V_TAXAALIQUOTA) - V_PARDEDTMP;
                                    V_BASECALCIT := V_BASECALCTO * V_TAXABASECALC;
                                 END IF;
                              ELSE
                                 IF V_CDSITUCRT = '1' THEN
                                    IF SUBSTR(V_CDFISCOPERSN, 2, 3) = '500' THEN
                                       V_IDTRIMPSTII := w_2;
                                    ELSE
                                       V_IDTRIMPSTII := V_TRATIMPST;
                                    END IF;
                                 ELSE
                                    IF SUBSTR(V_SITUTRIBPR, 2, 2) = '60' THEN
                                       V_IDTRIMPSTII := 2;
                                    ELSE
                                       V_IDTRIMPSTII := V_TRATIMPST;
                                    END IF;
                                 END IF;

                                 IF NVL(V_IDPMCBASECAL, W_N) = W_S THEN
                                    CALCULA_BC_PMC(P_FILIAL,
                                                   P_LANCTONF,
                                                   C_ITEMPROD.NRSEQITPROD,
                                                   C_ITEMPROIMPOS.CDIMPOSTO,
                                                   V_IDCONSMVAPMC,
                                                   V_IDCONSCOMPBCPMC,
                                                   V_PAISDEST,
                                                   V_ESTADEST,
                                                   C_ITEMPROD.CDPRODUTO,
                                                   C_ITEMPROD.QTITEMPROD,
                                                   C_ITEMPROD.VRUNITITEM,
                                                   C_ITEMPROD.VRDESCITEM,
                                                   V_PBCSUBTRIB,
                                                   V_PREDBCTMP,
                                                   V_VRALIQICMSCBSP,
                                                   NULL,
                                                   NULL,
                                                   NULL,
                                                   NULL,
                                                   NULL,
                                                   NULL,
                                                   'N',
                                                   V_BASECALCTO);

                                    V_IMPOSTOIT := (V_BASECALCTO * V_TAXAALIQUOTA) - V_PARDEDTMP;
                                 ELSE
                                    V_BASECALCTO  := V_BASECALCIT;
                                    V_IMPOSTOIT   := (V_BASECALCIT * V_TAXAALIQUOTA) - V_PARDEDTMP;
                                 END IF;

                                 SELECT NVL(MAX(IDVRIMPSTRIB), 'N')
                                   INTO V_IDVRIMPSTRIB
                                   FROM ITEMPROIMPOS I, IMPOSTO II
                                  WHERE (CDFILIAL = P_FILIAL)
                                    AND (NRLANCTONF = P_LANCTONF)
                                    AND (NRSEQITPROD = C_ITEMPROD.NRSEQITPROD)
                                    AND (INSTR(V_CDIMPOSTRIB,II.CDIMPOSTO||'_') > 0)
                                    AND (I.CDIMPOSTO = II.CDIMPOSTO);

                                 IF (V_TRATIMPST = W_1) OR (NVL(V_IDVRIMPSTRIB, W_N) = W_N) THEN
                                    V_VRIMPOSTOST := 0;
                                    V_VRBASEICMS := 0;
                                 ELSE
                                    BEGIN
                                       SELECT NVL(MAX(VRIMPOSTOIT),0), NVL(ROUND(MAX(VRBASECALCIT), 2),0)
                                         INTO V_VRIMPOSTOST, V_VRBASEICMS
                                         FROM ITEMPROIMPOS I
                                        WHERE (CDFILIAL = P_FILIAL)
                                          AND (NRLANCTONF = P_LANCTONF)
                                          AND (NRSEQITPROD = C_ITEMPROD.NRSEQITPROD)
                                          AND (INSTR(V_CDIMPOSTRIB,CDIMPOSTO||'_') > 0)
                                          AND (NRITPROIMPOS = w_1);
                                    EXCEPTION
                                       WHEN NO_DATA_FOUND THEN BEGIN
                                          V_VRIMPOSTOST := 0;
                                          V_VRBASEICMS := 0;
                                       END;
                                    END;
                                 END IF;

                                 /*198639, 200299*/
                                 IF V_VRBASEICMS > 0 THEN
                                    DELETE ALIQTEMP
                                     WHERE NRALIQTEMP = V_ALIQTEMP;

                                    /* Verifica grupo fiscal */
                                    SELECT MAX(IDGRUPFISSRV)
                                      INTO V_UTGRUPFISCS
                                      FROM IMPOSTO
                                     WHERE CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO;

                                    IF V_UTGRUPFISCS = 'S' THEN
                                       V_CDGRPFISCSV := NULL;
                                       SELECT MAX(CDGRUPOFISC)
                                         INTO V_CDGRPFISCSV
                                         FROM SERVCLIE SC, SERVICO S
                                        WHERE SC.CDFILIAL   = V_CDFILIEMIT AND
                                             SC.CDCLIENTE  = P_CLIENTE    AND
                                             SC.CDFILIAL   = S.CDFILIAL   AND
                                             SC.CDSERVFILI = S.CDSERVFILI AND
                                             S.CDPRODUTO   = C_ITEMPROD.CDPRODUTO;

                                       IF V_CDGRPFISCSV IS NULL THEN
                                          SELECT MAX(CDGRUPOFISC)
                                            INTO V_CDGRPFISCSV
                                            FROM CLIENFILIAL
                                          WHERE CDFILIAL   = V_CDFILIEMIT AND
                                               CDCLIENTE  = P_CLIENTE;
                                       END IF;

                                       CONSULTA_ALIQUOTA(C_ITEMPROIMPOS.CDIMPOSTO, w_S, P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                         V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_VRBASEICMS, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRPFISCSV, P_TIPOOPER,
                                                         NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPROD.IDORIGEMPROD);

                                    ELSE
                                       CONSULTA_ALIQUOTA(C_ITEMPROIMPOS.CDIMPOSTO, w_S, P_EMPRESA, C_ITEMPROD.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                         V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_VRBASEICMS, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_TIPOOPER,
                                                         NULL, NULL, NULL, NULL, NULL, NULL, C_ITEMPROD.IDORIGEMPROD);

                                    END IF;

                                    BEGIN
                                       SELECT NVL(MAX(VRALIQICMSCBSP),0)
                                         INTO V_VRALIQICMSCBSP
                                         FROM ALIQTEMP
                                        WHERE (NRALIQTEMP = V_ALIQTEMP);
                                    EXCEPTION
                                       WHEN NO_DATA_FOUND THEN
                                          V_VRALIQICMSCBSP := 0;
                                    END;

                                    IF V_VRALIQICMSCBSP > 0 THEN
                                       V_VRIMPOSTOST := V_VRBASEICMS * (V_VRALIQICMSCBSP/100);
                                    END IF;

                                    DELETE ALIQTEMP
                                     WHERE NRALIQTEMP = V_ALIQTEMP;
                                 END IF;
                                 /*198639, 200299*/

                                 V_IMPOSTOIT := V_IMPOSTOIT - V_VRIMPOSTOST;

                                 IF V_IMPOSTOIT < 0 THEN
                                    V_IMPOSTOIT := 0;
                                 END IF;

                                 IF (V_IDCONTCONFORIG = 'N') THEN
                                    IF NVL(V_IDPMCBASECAL, W_N) = W_S THEN
                                       UPDATE ITEMPRODUTO
                                          SET VRBRUTITEM = VRBRUTITEM + V_IMPOSTOIT,
                                              VRCONTITEM = VRCONTITEM + V_IMPOSTOIT
                                        WHERE CDFILIAL = P_FILIAL
                                          AND NRLANCTONF = P_LANCTONF
                                          AND NRSEQITPROD = C_ITEMPROD.NRSEQITPROD;
                                     END IF;
                                 END IF;
                              END IF;

                              IF NVL(V_IDPMCBASECAL, W_N) = W_N THEN
                                 V_PERDBCALC    := 100 - V_PREDBCTMP;

                                 IF V_PBCSUBTRIB > 0 THEN
                                    V_BASECALCIT := (V_BASECALCIT * V_TAXABCSUBSTR);
                                    V_PREDBCSTIT := V_PREDBCTMP;
                                    V_PREDBCTMP  := V_PBCSUBTRIB;
                                    V_PERDBCALC  := 0;
                                 ELSE
                                    V_PREDBCSTIT := V_PREDBCTMP;
                                 END IF;

                                 SELECT NVL(MAX(IDUTVLRQTDEIMPO), 'N')
                                   INTO V_IDUTVLRQTDEIMPO
                                   FROM IMPOSTO
                                  WHERE CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO;

                                 IF (V_IDUTVLRQTDEIMPO = 'S') THEN
                                    SELECT NVL(MAX(VRFATOCONVES), 1)
                                      INTO V_VRFATOCONVES
                                      FROM CONVPRODUTO
                                     WHERE CDPRODUTO = C_ITEMPROD.CDPRODUTO;

                                    V_BASECALCTO  := (C_ITEMPROD.QTITEMPROD * V_VRFATOCONVES);
                                    V_IMPOSTOIT   := ((C_ITEMPROD.QTITEMPROD * V_VRFATOCONVES) * V_ALIQUTMP) - V_PARDEDTMP;
                                 ELSE
                                    V_BASECALCTO  := V_BASECALCIT;
                                    V_IMPOSTOIT   := (V_BASECALCIT * V_TAXAALIQUOTA) - V_PARDEDTMP;
                                 END IF;
                              END IF;

                              /*Impostos importados do arquivo XML, na devolução sempre vai gravar de acordo com a origem*/
                              IF (C_ITEMPROIMPOS.IDVALORINFIT = W_S) AND (V_IDNFGERADAVIAXML = 'S') THEN
                                 V_BASECALCIT := ROUND((C_ITEMPROIMPOS.VRBASECALCIT * V_VRFATOCONV), 2);
                                 V_BASECALCTO := V_BASECALCIT;

                                 V_ALIQUTMP := C_ITEMPROIMPOS.VRALIQITEM;

                                 V_TAXAALIQUOTA := (V_ALIQUTMP/100);
                                 V_IMPOSTOIT := ROUND((C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV), 2);
                              ELSE
                                 V_BASECALCTO := V_BASECALCIT;
                                 V_IMPOSTOIT   := (V_BASECALCIT * V_TAXAALIQUOTA) - V_PARDEDTMP;
                              END IF;

                              V_CONTABCALC  := V_LIQUIITEM - (V_LIQUIITEM * V_TAXABASECALC);

                              IF (V_ALIQUTMP = 0) AND (V_IMPOSTOIT = 0) THEN
                                 V_BASECALCTO := 0;
                              END IF;

                              IF V_BASECALCTO IS NULL THEN        /*utiliza pmc mas não tem impostrib então não entra na parte do calcula pmc, desta forma, a variável de bC fica vazia*/
                                 V_BASECALCTO  := V_BASECALCIT;
                                 V_IMPOSTOIT   := (V_BASECALCIT * V_TAXAALIQUOTA) - V_PARDEDTMP;
                              END IF;

                              -- ALTERAR O VALOR CONTÁBIL CASO O PARÂMETRO "CONTABILIZA CONFORME NF DE ORIGEM" ESTEJA DESMARCADO

                              IF (V_IDCONTCONFORIG = 'N') THEN

                                 V_IMPOCONTAB  := 0;
                                 V_IDIMPORECUP := NULL;
                                 V_CDCCTBLATIV := NULL;
                                 V_IDTRATIMPO  := NULL;

                                 SELECT NVL(IDIMPORECUP, 'N'), IDTRATIMPO, CDCCTBLATIV
                                   INTO V_IDIMPORECUP, V_IDTRATIMPO, V_CDCCTBLATIV
                                   FROM IMPOSTO
                                  WHERE CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO;

                                 IF (V_IDIMPORECUP = W_S) THEN
                                    IF (V_CDFISCTEMP = W_1) THEN
                                       IF (V_CDCCTBLATIV IS NOT NULL) THEN
                                          IF V_IDTRATIMPO = W_V THEN
                                             V_IMPOCONTAB := - V_IMPOSTOIT;
                                          END IF;
                                       END IF;
                                    ELSE
                                       IF V_IDTRATIMPO = W_A THEN
                                          V_IMPOCONTAB := V_IMPOSTOIT;
                                       ELSIF V_IDTRATIMPO IN (W_D,W_R) THEN
                                          V_IMPOCONTAB := - V_IMPOSTOIT;
                                       END IF;
                                    END IF;
                                 END IF;

                                 IF (ABS(NVL(V_IMPOCONTAB, 0)) > 0) THEN
                                    UPDATE ITEMPRODUTO
                                       SET VRCONTITEMORIG = (VRCONTITEM) + NVL(V_IMPOCONTAB, 0),
                                           VRCONTITEM     = (VRCONTITEM) + NVL(V_IMPOCONTAB, 0)
                                     WHERE CDFILIAL       = P_FILIAL
                                       AND NRLANCTONF     = P_LANCTONF
                                       AND NRSEQITPROD    = C_ITEMPROD.NRSEQITPROD;
                                 END IF;
                              END IF;
                              -- Alterar o valor contábil caso o parâmetro "Contabiliza conforme NF de origem" esteja desmarcado

                              Begin
                                 SELECT CDFILIAL
                                 INTO   V_CHAVE
                                 FROM ITEMPROIMPOS
                                 WHERE CDFILIAL     = P_FILIAL                 AND
                                       NRLANCTONF   = P_LANCTONF               AND
                                       NRSEQITPROD  = C_ITEMPROD.NRSEQITPROD   AND
                                       CDIMPOSTO    = C_ITEMPROIMPOS.CDIMPOSTO AND
                                       NRITPROIMPOS = C_ITEMPROIMPOS.NRITPROIMPOS;
                              Exception
                                 When No_Data_Found Then
                                    V_CHAVE := Null;
                              End;

                              IF V_IDPERVISIMPSCRE = 'S' THEN
                                 V_VRIMPOSTOVISUIT := V_IMPOSTOIT;
                              ELSE
                                 IF (V_CDFISCTEMP = '1') THEN
                                    V_VRIMPOSTOVISUIT := V_IMPOSTOIT;
                                 ELSE
                                    V_VRIMPOSTOVISUIT := 0;
                                 END IF;
                              END IF;

                              /* ROTINA PARA CALCULAR O DIFERIMENTO DO IMPOSTO */
                              V_PERDIFERE    := NULL;
                              V_IMPOSTOOPERA := NULL;
                              V_IMPOSTODIFER := NULL;
                              IF C_ITEMPROIMPOS.CDIMPOSTONFE = '00' THEN
                                 IF V_CDSITTRIBTMP = '51' THEN
                                    BEGIN
                                       SELECT PD.VRPERDIFERE, 'S'
                                         INTO V_VRPERDIFERE, V_IDDIFECLI
                                         FROM PRODDIFEREIMPCLI PD, PRODUTO PR
                                        WHERE PD.CDPRODUTO = PR.CDPRODUTO
                                          AND PD.CDPAIS = V_PAISORIG
                                          AND PD.SGESTADO = V_ESTAORIG
                                          AND PD.CDCLIENTE = P_CLIENTE
                                          AND PR.CDARVPROD IN (SELECT MAX(PR.CDARVPROD) AS CDARVPROD
                                                                 FROM PRODDIFEREIMPCLI PD, PRODUTO PR
                                                                WHERE PD.CDPRODUTO = PR.CDPRODUTO
                                                                  AND PD.CDPAIS = V_PAISORIG
                                                                  AND PD.SGESTADO = V_ESTAORIG
                                                                  AND PD.CDCLIENTE = P_CLIENTE
                                                                  AND INSTR(NVL(RTRIM(C_ITEMPROD.CDARVPROD), PR.CDARVPROD), PR.CDARVPROD) = 1);
                                    EXCEPTION
                                       WHEN NO_DATA_FOUND THEN
                                          V_VRPERDIFERE := NULL; V_IDDIFECLI := 'N';
                                    END;

                                    IF V_IDDIFECLI = 'N' THEN
                                       BEGIN
                                          SELECT PD.VRPERDIFERE
                                            INTO V_VRPERDIFERE
                                            FROM PRODDIFEREIMPOS PD, PRODUTO PR
                                           WHERE PD.CDPRODUTO = PR.CDPRODUTO
                                             AND PD.CDPAIS = V_PAISORIG
                                             AND PD.SGESTADO = V_ESTAORIG
                                             AND PR.CDARVPROD IN (SELECT MAX(PR.CDARVPROD) AS CDARVPROD
                                                                    FROM PRODDIFEREIMPOS PD, PRODUTO PR
                                                                   WHERE PD.CDPRODUTO = PR.CDPRODUTO
                                                                     AND PD.CDPAIS = V_PAISORIG
                                                                     AND PD.SGESTADO = V_ESTAORIG
                                                                     AND INSTR(NVL(RTRIM(C_ITEMPROD.CDARVPROD), PR.CDARVPROD), PR.CDARVPROD) = 1);
                                       EXCEPTION
                                          WHEN NO_DATA_FOUND THEN
                                             V_VRPERDIFERE := NULL;
                                       END;
                                    END IF;

                                    IF V_VRPERDIFERE IS NOT NULL THEN
                                       V_PERDIFERE    := V_VRPERDIFERE;
                                    IF V_PREDBCTMP > 0 THEN
                                       V_IMPOSTOOPERA := (V_BASECALCIT * V_TAXABASECALC) * V_TAXAALIQUOTA;
                                    ELSE
                                       V_IMPOSTOOPERA := V_BASECALCIT * V_TAXAALIQUOTA;
                                    END IF;
                                       V_IMPOSTODIFER := V_IMPOSTOOPERA * (V_VRPERDIFERE/100);
                                       V_IMPOSTOIT    := V_IMPOSTOOPERA - V_IMPOSTODIFER;
                                    END IF;
                                 END IF;
                              END IF;

                              IF V_CHAVE IS NULL THEN
                                 V_ICMS := 'N';
                                 FOR C_ICMS IN (SELECT CDIMPOSTO
                                                  FROM IMPOSTONFE N, IMPOSTO I
                                                 WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                                                   AND N.CDIMPOSTONFE = '00'
                                                   AND I.CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO)
                                 LOOP
                                    V_ICMS := 'S';
                                 END LOOP;

                                 IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
                                    INSERT INTO ITEMPROIMPOS(
                                       CDFILIAL,        NRLANCTONF,   NRSEQITPROD,    CDIMPOSTO,       NRITPROIMPOS,   CDFISCALIT,
                                       CDSITUTRIBIT,    CDFISCOPERIT, CDSUFXCFOPIT,   VRALIQITEM,      VRPERREDBCIT,   VRPARDEDIT,
                                       VRCONTITIMP,     VRBASECALCIT, VRIMPOSTOIT,    IDERROSIMPIT,    IDAVISIMPIT,    IDTRIMPSTII,
                                       CDSITUTRIBITNFE, IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT,
                                       CDDETALHEPROD,   VRIMPOSTOVISUIT,   CDREGRAIT, VRPERDIFEREIT, VRIMPOSTOOPERAIT, VRIMPOSTODIFERIT,
                                       CDENQLEGALIPI,   CDCEST,            CDBENEFFISCAL, IDDESONERAREGRA, IDCONSDESONVRNF, IDVALORINFIT, VRPERREDBCSTIT, VRIMPOSTOREP)
                                    VALUES(
                                       P_FILIAL,                P_LANCTONF,     C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, w_1,                 V_CDFISCTEMP,
                                       NVL(V_SITUTRIBPR, C_ITEMPROD.CDSITUTRIBPR), V_FISOPEITEM,   V_SUFXCFOPPR,           V_ALIQUTMP,               V_PREDBCTMP,         V_PARDEDTMP,
                                       ROUND(V_BASECALCTO,2),   V_BASECALCTO,   TRUNC(V_IMPOSTOIT,2),   w_00000,                  w_00000,             V_IDTRIMPSTII,
                                       V_CDSITUTRIBNFE,         V_IDMODBCNFEIT, V_IDMODBCSTNFEIT,       V_CDTPCRPICOSTNFEIT,      V_CDNATUBCPCSTNFEIT, V_IDMOTIDESSTNFE,
                                       V_CDDETALHEPRODTEMP, TRUNC(V_VRIMPOSTOVISUIT,2), V_CDREGRAITALIQ, V_PERDIFERE, V_IMPOSTOOPERA, V_IMPOSTODIFER,
                                       V_CDENQLEGALIPI, V_CDCEST, V_CDBENEFFISCAL, NVL(V_IDIMPODESONERA, 'N'), NVL(V_IDCONSDESONVRNF, 'N'), C_ITEMPROIMPOS.IDVALORINFIT, V_PREDBCSTIT, V_VRIMPOSTOREP);
                                 ELSE
                                    IF (C_ITEMPROIMPOS.NRITPROIMPOS = w_3)  THEN

                                       /*Inserir a linha de diferencial de alíquota*/

                                       V_DIFALIQ := 0;

                                       SELECT MAX(VRALIQITEM)
                                         INTO V_DIFALIQ
                                         FROM ITEMPROIMPOS IT, ITEMPRODUTO I
                                        WHERE IT.CDFILIAL     = C_ITEMNOTAFISC.CDFILIALIT
                                          AND IT.NRLANCTONF   = C_ITEMNOTAFISC.NRLANCTONFIT
                                          AND I.CDFILIAL      = C_ITEMNOTAFISC.CDFILIALIT
                                          AND I.NRLANCTONF    = C_ITEMNOTAFISC.NRLANCTONFIT
                                          AND IT.NRSEQITPROD  = I.NRSEQITPROD
                                          AND I.CDPRODUTO     = C_ITEMPROD.CDPRODUTO
                                          AND ROUND(I.VRUNITITEM, V_NRDECITOTANF) = ROUND(C_ITEMPROD.VRUNITITEM, V_NRDECITOTANF)
                                          AND (NVL(NRLOTEESTQ, ' ') = (NVL(C_ITEMPROD.NRLOTEESTQ, ' ')))
                                          AND (NVL(NRSUBLOTE, ' ')  = (NVL(C_ITEMPROD.NRSUBLOTE , ' ')))
                                          AND IT.CDIMPOSTO    = C_ITEMPROIMPOS.CDIMPOSTO
                                          AND IT.NRITPROIMPOS = w_1;

                                       IF  (V_ALIQUTMP = V_DIFALIQ) THEN
                                          INSERT INTO ITEMPROIMPOS(
                                             CDFILIAL,        NRLANCTONF,   NRSEQITPROD,    CDIMPOSTO,       NRITPROIMPOS,   CDFISCALIT,
                                             CDSITUTRIBIT,    CDFISCOPERIT, CDSUFXCFOPIT,   VRALIQITEM,      VRPERREDBCIT,   VRPARDEDIT,
                                             VRCONTITIMP,     VRBASECALCIT, VRIMPOSTOIT,    IDERROSIMPIT,    IDAVISIMPIT,    IDTRIMPSTII,
                                             CDSITUTRIBITNFE, IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT,
                                             CDDETALHEPROD,   VRIMPOSTOVISUIT, CDREGRAIT, IDDIFALIQCUSPRI,
                                             CDENQLEGALIPI,   CDCEST,          CDBENEFFISCAL, IDDESONERAREGRA, IDCONSDESONVRNF, IDVALORINFIT)
                                          VALUES(
                                             P_FILIAL, P_LANCTONF, C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, C_ITEMPROIMPOS.NRITPROIMPOS, C_ITEMPROIMPOS.CDFISCALIT,
                                             C_ITEMPROD.CDSITUTRIBPR, V_FISOPEITEM, V_SUFXCFOPPR, C_ITEMPROIMPOS.VRALIQITEM, C_ITEMPROIMPOS.VRPERREDBCIT, (C_ITEMPROIMPOS.VRPARDEDIT * V_VRFATOCONV),
                                             ROUND((C_ITEMPROIMPOS.VRCONTITIMP * V_VRFATOCONV),2), (C_ITEMPROIMPOS.VRBASECALCIT * V_VRFATOCONV),
                                             (C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV), w_00000, w_00000, C_ITEMPROIMPOS.IDTRIMPSTII, C_ITEMPROIMPOS.CDSITUTRIBNFE,
                                             C_ITEMPROIMPOS.IDMODBCNFE, C_ITEMPROIMPOS.IDMODBCSTNFE, C_ITEMPROIMPOS.CDTPCREDPICOITE, C_ITEMPROIMPOS.CDNATUBCALPCIT, NVL(C_ITEMPROIMPOS.IDMOTDESONERAIT,'9'),
                                             V_CDDETALHEPRODTEMP, (C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV), V_CDREGRAITALIQ, C_ITEMPROIMPOS.IDDIFALIQCUSPRI,
                                             V_CDENQLEGALIPI, V_CDCEST, V_CDBENEFFISCAL, NVL(V_IDIMPODESONERA, 'N'), NVL(V_IDCONSDESONVRNF, 'N'), C_ITEMPROIMPOS.IDVALORINFIT);
                                       /*Inserir a linha de diferencial de alíquota*/
                                       END IF;
                                    ELSE
                                       INSERT INTO ITEMPROIMPOS(
                                          CDFILIAL,        NRLANCTONF,   NRSEQITPROD,    CDIMPOSTO,       NRITPROIMPOS,   CDFISCALIT,
                                          CDSITUTRIBIT,    CDFISCOPERIT, CDSUFXCFOPIT,   VRALIQITEM,      VRPERREDBCIT,   VRPARDEDIT,
                                          VRCONTITIMP,     VRBASECALCIT, VRIMPOSTOIT,    IDERROSIMPIT,    IDAVISIMPIT,    IDTRIMPSTII,
                                          CDSITUTRIBITNFE, IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT,
                                          CDDETALHEPROD,   VRIMPOSTOVISUIT,   CDREGRAIT, IDDIFALIQCUSPRI, VRPERDIFEREIT, VRIMPOSTOOPERAIT,
                                          VRIMPOSTODIFERIT, CDENQLEGALIPI, CDCEST, VRADICFECP, VRADICALIQFECP,
                                          CDBENEFFISCAL, IDDESONERAREGRA, IDCONSDESONVRNF, IDVALORINFIT, VRPERREDBCSTIT, VRIMPOSTOREP)
                                       VALUES(
                                          P_FILIAL,                P_LANCTONF,     C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, w_1,               V_CDFISCTEMP,
                                          NVL(V_SITUTRIBPR, C_ITEMPROD.CDSITUTRIBPR), V_FISOPEITEM,   V_SUFXCFOPPR,           V_ALIQUTMP,               V_PREDBCTMP,         V_PARDEDTMP,
                                          ROUND(V_BASECALCTO,2),   V_BASECALCTO,   ROUND(V_IMPOSTOIT,2),   w_00000,                  w_00000,             V_IDTRIMPSTII,
                                          V_CDSITUTRIBNFE,         V_IDMODBCNFEIT, V_IDMODBCSTNFEIT,       V_CDTPCRPICOSTNFEIT,      V_CDNATUBCPCSTNFEIT, V_IDMOTIDESSTNFE,
                                          V_CDDETALHEPRODTEMP,     ROUND(V_VRIMPOSTOVISUIT,2),     V_CDREGRAITALIQ, C_ITEMPROIMPOS.IDDIFALIQCUSPRI, V_PERDIFERE, V_IMPOSTOOPERA,
                                          V_IMPOSTODIFER, V_CDENQLEGALIPI, V_CDCEST, ROUND((C_ITEMPROIMPOS.VRADICFECP * V_VRFATOCONV), 2), C_ITEMPROIMPOS.VRADICALIQFECP,
                                          V_CDBENEFFISCAL, NVL(V_IDIMPODESONERA, 'N'), NVL(V_IDCONSDESONVRNF, 'N'), C_ITEMPROIMPOS.IDVALORINFIT, V_PREDBCSTIT, V_VRIMPOSTOREP);
                                    END IF;
                                 END IF;

                                 IF (C_ITEMPROIMPOS.NRITPROIMPOS = w_1) THEN
                                    IF (V_PREDBCTMP > 0) AND (V_PBCSUBTRIB = 0) THEN
                                       IF C_ITEMPROD.CDSITUTRIBPR = '060' THEN
                                          INSERT INTO ITEMPROIMPOS(
                                             CDFILIAL,        NRLANCTONF,     NRSEQITPROD,    CDIMPOSTO,       NRITPROIMPOS,   CDFISCALIT,
                                             CDSITUTRIBIT,    CDFISCOPERIT,   CDSUFXCFOPIT,   VRALIQITEM,      VRPERREDBCIT,   VRPARDEDIT,
                                             VRCONTITIMP,     VRBASECALCIT,   VRIMPOSTOIT,    IDERROSIMPIT,    IDAVISIMPIT,    IDTRIMPSTII,
                                             CDSITUTRIBITNFE, IDMODBCITNFE,   IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT,
                                             CDDETALHEPROD,   VRIMPOSTOVISUIT,   CDREGRAIT, CDENQLEGALIPI, CDCEST, VRADICFECP, VRADICALIQFECP,
                                             CDBENEFFISCAL,   IDDESONERAREGRA, IDCONSDESONVRNF, IDVALORINFIT)
                                          VALUES(
                                             P_FILIAL,                P_LANCTONF,     C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, w_2,                 w_2,
                                             NVL(V_SITUTRIBPR, C_ITEMPROD.CDSITUTRIBPR), V_FISOPEITEM,   V_SUFXCFOPPR,           0,                        V_PERDBCALC,         V_PARDEDTMP,
                                             V_CONTABCALC,            0,              0,                      w_00000,                  w_00000,             V_IDTRIMPSTII,
                                             V_CDSITUTRIBNFE,         V_IDMODBCNFEIT, V_IDMODBCSTNFEIT,       V_CDTPCRPICOSTNFEIT,      V_CDNATUBCPCSTNFEIT, V_IDMOTIDESSTNFE,
                                             V_CDDETALHEPRODTEMP, 0,     V_CDREGRAITALIQ, V_CDENQLEGALIPI, V_CDCEST, 0, 0,
                                             V_CDBENEFFISCAL, NVL(V_IDIMPODESONERA, 'N'), NVL(V_IDCONSDESONVRNF, 'N'), C_ITEMPROIMPOS.IDVALORINFIT);
                                       ELSE
                                          INSERT INTO ITEMPROIMPOS(
                                             CDFILIAL,        NRLANCTONF,     NRSEQITPROD,     CDIMPOSTO,       NRITPROIMPOS,   CDFISCALIT,
                                             CDSITUTRIBIT,    CDFISCOPERIT,   CDSUFXCFOPIT,    VRALIQITEM,      VRPERREDBCIT,   VRPARDEDIT,
                                             VRCONTITIMP,     VRBASECALCIT,   VRIMPOSTOIT,     IDERROSIMPIT,    IDAVISIMPIT,    IDTRIMPSTII,
                                             CDSITUTRIBITNFE, IDMODBCITNFE,   IDMODBCSTITNFE,  CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT,
                                             CDDETALHEPROD,   VRIMPOSTOVISUIT,   CDREGRAIT, CDENQLEGALIPI, CDCEST, VRADICFECP, VRADICALIQFECP,
                                             CDBENEFFISCAL,   IDDESONERAREGRA, IDCONSDESONVRNF, IDVALORINFIT, VRPERREDBCSTIT)
                                          VALUES(
                                             P_FILIAL,                P_LANCTONF,     C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, w_2,                 w_2,
                                             NVL(V_SITUTRIBPR, C_ITEMPROD.CDSITUTRIBPR), V_FISOPEITEM,   V_SUFXCFOPPR,           0,                        V_PERDBCALC,         V_PARDEDTMP,
                                             V_CONTABCALC,            0,              0,                      w_00000,                  w_00000,             V_IDTRIMPSTII,
                                             V_CDSITUTRIBNFE,         V_IDMODBCNFEIT, V_IDMODBCSTNFEIT,       V_CDTPCRPICOSTNFEIT,      V_CDNATUBCPCSTNFEIT, V_IDMOTIDESSTNFE,
                                             V_CDDETALHEPRODTEMP,     0,     V_CDREGRAITALIQ, V_CDENQLEGALIPI, V_CDCEST, 0, 0,
                                             V_CDBENEFFISCAL, NVL(V_IDIMPODESONERA, 'N'), NVL(V_IDCONSDESONVRNF, 'N'), C_ITEMPROIMPOS.IDVALORINFIT, V_PREDBCSTIT);
                                       END IF;
                                    END IF;
                                 END IF;
                                 IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
                                    INSERT INTO ITEMPROIMPOSORIG(CDFILIAL,     NRLANCTONF,     NRSEQITPROD,     CDIMPOSTO,      NRITPROIMPOS,    CDFISCALIT,
                                                             CDSITUTRIBIT, CDFISCOPERIT,   CDSUFXCFOPIT,    VRALIQITEM,     VRPERREDBCIT,    VRPARDEDIT,
                                                             VRCONTITIMP,  VRBASECALCIT,   VRIMPOSTOIT,     IDERROSIMPIT,   IDAVISIMPIT,     CDSITUTRIBITNFE,
                                                             IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT, IDTRIMPSTII,
                                                             CDDETALHEPROD, CDENQLEGALIPI, CDCEST, CDBENEFFISCAL)
                                    VALUES(P_FILIAL, P_LANCTONF, C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, C_ITEMPROIMPOS.NRITPROIMPOS, C_ITEMPROIMPOS.CDFISCALIT,
                                           C_ITEMPROD.CDSITUTRIBPR, V_FISOPEITEM, V_SUFXCFOPPR, C_ITEMPROIMPOS.VRALIQITEM, C_ITEMPROIMPOS.VRPERREDBCIT, TRUNC((C_ITEMPROIMPOS.VRPARDEDIT * V_VRFATOCONV),2),
                                           TRUNC((C_ITEMPROIMPOS.VRCONTITIMP * V_VRFATOCONV),2), TRUNC((C_ITEMPROIMPOS.VRBASECALCIT * V_VRFATOCONV),2),
                                           TRUNC((C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV),2), w_00000, w_00000, C_ITEMPROIMPOS.CDSITUTRIBNFE,
                                           C_ITEMPROIMPOS.IDMODBCNFE, C_ITEMPROIMPOS.IDMODBCSTNFE, C_ITEMPROIMPOS.CDTPCREDPICOITE, C_ITEMPROIMPOS.CDNATUBCALPCIT, NVL(C_ITEMPROIMPOS.IDMOTDESONERAIT,'9'), C_ITEMPROIMPOS.IDTRIMPSTII,
                                           V_CDDETALHEPRODTEMP, V_CDENQLEGALIPI, V_CDCEST, V_CDBENEFFISCAL);
                                 ELSE
                                    INSERT INTO ITEMPROIMPOSORIG(CDFILIAL,     NRLANCTONF,     NRSEQITPROD,     CDIMPOSTO,      NRITPROIMPOS,    CDFISCALIT,
                                                             CDSITUTRIBIT, CDFISCOPERIT,   CDSUFXCFOPIT,    VRALIQITEM,     VRPERREDBCIT,    VRPARDEDIT,
                                                             VRCONTITIMP,  VRBASECALCIT,   VRIMPOSTOIT,     IDERROSIMPIT,   IDAVISIMPIT,     CDSITUTRIBITNFE,
                                                             IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT, IDTRIMPSTII,
                                                             CDDETALHEPROD, CDENQLEGALIPI, CDCEST, CDBENEFFISCAL)
                                    VALUES(P_FILIAL, P_LANCTONF, C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, C_ITEMPROIMPOS.NRITPROIMPOS, C_ITEMPROIMPOS.CDFISCALIT,
                                           C_ITEMPROD.CDSITUTRIBPR, V_FISOPEITEM, V_SUFXCFOPPR, C_ITEMPROIMPOS.VRALIQITEM, C_ITEMPROIMPOS.VRPERREDBCIT, (C_ITEMPROIMPOS.VRPARDEDIT * V_VRFATOCONV),
                                           ROUND((C_ITEMPROIMPOS.VRCONTITIMP * V_VRFATOCONV),2), (C_ITEMPROIMPOS.VRBASECALCIT * V_VRFATOCONV),
                                           (C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV), w_00000, w_00000, C_ITEMPROIMPOS.CDSITUTRIBNFE,
                                           C_ITEMPROIMPOS.IDMODBCNFE, C_ITEMPROIMPOS.IDMODBCSTNFE, C_ITEMPROIMPOS.CDTPCREDPICOITE, C_ITEMPROIMPOS.CDNATUBCALPCIT, NVL(C_ITEMPROIMPOS.IDMOTDESONERAIT,'9'), C_ITEMPROIMPOS.IDTRIMPSTII,
                                           V_CDDETALHEPRODTEMP, V_CDENQLEGALIPI, V_CDCEST, V_CDBENEFFISCAL);
                                 END IF;
                              END IF;
                           END IF;
                           /*199382*/
                           V_CDIMPOSTRIB := NULL;
                           FOR C_ICMSST IN (SELECT CDIMPOSTO
                                              FROM IMPOSTO
                                             WHERE CDIMPOSTRIB = C_ITEMPROIMPOS.CDIMPOSTO)
                           LOOP
                              V_CDIMPOSTRIB := V_CDIMPOSTRIB||C_ICMSST.CDIMPOSTO||'_';
                           END LOOP;
                           V_VRADICFECPSTAUX := 0;
                           V_VRADICFECPST := 0;
                           V_VRIMPOSTOST := 0;
                           IF (V_CDIMPOSTRIB IS NOT NULL) THEN
                              FOR C_SUBSTRIB IN (SELECT NVL(IDVRIMPSTRIB, 'N') IDVRIMPSTRIB, I.CDIMPOSTO
                                                   FROM ITEMPROIMPOS I, IMPOSTO II
                                                  WHERE (CDFILIAL     = P_FILIAL)
                                                    AND (NRLANCTONF   = P_LANCTONF)
                                                    AND (NRSEQITPROD  = C_ITEMPROD.NRSEQITPROD)
                                                    AND (NRITPROIMPOS = '1')
                                                    AND (INSTR(V_CDIMPOSTRIB,II.CDIMPOSTO||'_') > 0)
                                                    AND (I.CDIMPOSTO = II.CDIMPOSTO))
                              LOOP
                                 IF C_SUBSTRIB.IDVRIMPSTRIB = 'S' THEN
                                    Begin
                                       SELECT NVL(ROUND(MAX(VRADICFECP), 2),0), NVL(ROUND(MAX(VRIMPOSTOIT), 2),0)
                                         INTO V_VRADICFECPSTAUX, V_VRIMPOSST
                                         FROM ITEMPROIMPOS I
                                        WHERE (CDFILIAL     = P_FILIAL)                   AND
                                              (NRLANCTONF   = P_LANCTONF)                 AND
                                              (NRSEQITPROD  = C_ITEMPROD.NRSEQITPROD)  AND
                                              (CDIMPOSTO    = C_SUBSTRIB.CDIMPOSTO)       AND
                                              (INSTR(V_CDIMPOSTRIB,CDIMPOSTO||'_') > 0)   AND
                                              (NRITPROIMPOS = w_1);
                                    Exception
                                       When No_Data_Found Then
                                          V_VRADICFECPSTAUX := 0;
                                          V_VRIMPOSST := 0;
                                    End;
                                    V_VRADICFECPST := V_VRADICFECPST + V_VRADICFECPSTAUX;

                                    IF (C_ITEMPROIMPOS.IDVALORINFIT = W_S) AND (V_IDNFGERADAVIAXML = 'S') THEN
                                       V_VRIMPOSTOST := 0;
                                    ELSE
                                       V_VRIMPOSTOST := V_VRIMPOSTOST + V_VRIMPOSST;
                                    END IF;
                                 ELSE
                                    V_VRADICFECPST := 0;
                                    V_VRIMPOSTOST := 0;
                                 END IF;
                              END LOOP;
                           END IF;

                           IF (V_VRADICALIQFECP > 0) AND (V_VRADICALIQFECP IS NOT NULL) THEN
                              V_VRADICFECP := V_BASECALCTO * (V_VRADICALIQFECP/100);
                              IF V_VRADICFECPST > 0 THEN
                                 V_VRADICFECP := V_VRADICFECP - V_VRADICFECPST;
                              END IF;
                              IF V_VRADICFECP < 0 THEN
                                 V_VRADICFECP := 0;
                              END IF;
                              UPDATE ITEMPROIMPOS
                                 SET VRADICFECP = ROUND(V_VRADICFECP, 2),
                                     VRADICALIQFECP = V_VRADICALIQFECP,
                                     VRIMPOSTOIT = VRIMPOSTOIT - V_VRIMPOSTOST
                               WHERE CDFILIAL     = P_FILIAL
                                 AND NRLANCTONF   = P_LANCTONF
                                 AND NRSEQITPROD  = C_ITEMPROD.NRSEQITPROD
                                 AND CDIMPOSTO    = C_ITEMPROIMPOS.CDIMPOSTO
                                 AND NRITPROIMPOS = C_ITEMPROIMPOS.NRITPROIMPOS;
                           END IF;
                           UPDATE ITEMPROIMPOS
                              SET VRIMPOSTOIT = 0,
                                  VRIMPOSTOVISUIT = 0
                            WHERE (NRLANCTONF  = P_LANCTONF) AND
                                  (CDFILIAL    = P_FILIAL)   AND
                                  (VRIMPOSTOIT < 0);

                           UPDATE ITEMPROIMPOS
                              SET VRBASECALCIT = 0
                            WHERE (NRLANCTONF  = P_LANCTONF) AND
                                  (CDFILIAL    = P_FILIAL)   AND
                                  (VRBASECALCIT < 0);

                          UPDATE ITEMPROIMPOS
                             SET VRADICFECP = 0
                           WHERE (NRLANCTONF  = P_LANCTONF) AND
                                 (CDFILIAL    = P_FILIAL)   AND
                                 (VRADICFECP < 0);

                        ELSE
                           BEGIN
                              SELECT CDFILIAL
                                INTO V_CHAVE
                                FROM ITEMPROIMPOS
                               WHERE CDFILIAL     = P_FILIAL
                                 AND NRLANCTONF   = P_LANCTONF
                                 AND NRSEQITPROD  = C_ITEMPROD.NRSEQITPROD
                                 AND CDIMPOSTO    = C_ITEMPROIMPOS.CDIMPOSTO
                                 AND NRITPROIMPOS = C_ITEMPROIMPOS.NRITPROIMPOS;
                           EXCEPTION
                              WHEN NO_DATA_FOUND THEN BEGIN
                                 V_CHAVE := NULL;
                              END;
                           END;

                           IF V_IDPERVISIMPSCRE = 'S' THEN
                              V_VRIMPOSTOVISUIT := (C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV);
                           ELSE
                              IF (V_CDFISCTEMP = '1') THEN
                                V_VRIMPOSTOVISUIT := (C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV);
                              ELSE
                                V_VRIMPOSTOVISUIT := 0;
                              END IF;
                           END IF;

                           -- ALTERAR O VALOR CONTÁBIL CASO O PARÂMETRO "CONTABILIZA CONFORME NF DE ORIGEM" ESTEJA DESMARCADO
                           IF (V_IDCONTCONFORIG =  'N') THEN

                              V_IMPOCONTAB  := 0;
                              V_IDIMPORECUP := NULL;
                              V_CDCCTBLATIV := NULL;
                              V_IDTRATIMPO  := NULL;
                              V_IMPORIG     := C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV;

                              SELECT NVL(IDIMPORECUP, 'N'), IDTRATIMPO, CDCCTBLATIV
                                INTO V_IDIMPORECUP, V_IDTRATIMPO, V_CDCCTBLATIV
                                FROM IMPOSTO
                               WHERE CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO;

                              IF (V_IDIMPORECUP = W_S) THEN
                                 IF (V_CDFISCTEMP = W_1) THEN
                                    IF (V_CDCCTBLATIV IS NOT NULL) THEN
                                       IF V_IDTRATIMPO = W_V THEN
                                          V_IMPOCONTAB := - V_IMPORIG;
                                       END IF;
                                    END IF;
                                 ELSE
                                    IF V_IDTRATIMPO = W_A THEN
                                       V_IMPOCONTAB := V_IMPOSTOIT;
                                    ELSIF V_IDTRATIMPO IN (W_D,W_R) THEN
                                       V_IMPOCONTAB := - V_IMPORIG;
                                    END IF;
                                 END IF;
                              END IF;

                              V_ENCARGO := 0;
                              FOR C_ENCARGO IN (SELECT IT.CDENCARGO, VRITEMENCA, IDENCARGO
                                                  FROM ITEMENCARGO IT, ENCARGO E
                                                 WHERE IT.CDENCARGO = E.CDENCARGO
                                                   AND VRITEMENCA > 0
                                                   AND NRLANCTONF = C_ITEMNOTAFISC.NRLANCTONFIT
                                                   AND CDFILIAL = C_ITEMNOTAFISC.CDFILIALIT) LOOP
                                 IF C_ENCARGO.IDENCARGO = 'A' THEN
                                    V_ENCARGO := V_ENCARGO + C_ENCARGO.VRITEMENCA;
                                 ELSIF C_ENCARGO.IDENCARGO = 'D' THEN
                                    V_ENCARGO := V_ENCARGO - C_ENCARGO.VRITEMENCA;
                                 END IF;
                              END LOOP;
                              V_ENCARGO := V_ENCARGO * V_VRFATOCONV;

                              IF (ABS(NVL(V_IMPOCONTAB, 0)) > 0) THEN
                                 UPDATE ITEMPRODUTO
                                    SET VRCONTITEMORIG = (VRCONTITEM) + NVL((V_IMPOCONTAB + V_ENCARGO), 0),
                                        VRCONTITEM     = (VRCONTITEM) + NVL((V_IMPOCONTAB + V_ENCARGO), 0)
                                  WHERE CDFILIAL       = P_FILIAL
                                    AND NRLANCTONF     = P_LANCTONF
                                    AND NRSEQITPROD    = C_ITEMPROD.NRSEQITPROD;
                              END IF;

                           END IF;
                           -- Alterar o valor contábil caso o parâmetro "Contabiliza conforme NF de origem" esteja desmarcado
                           IF V_CHAVE IS NULL THEN
                              V_ICMS := 'N';
                              FOR C_ICMS IN (SELECT CDIMPOSTO
                                               FROM IMPOSTONFE N, IMPOSTO I
                                              WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                                                AND N.CDIMPOSTONFE = '00'
                                                AND I.CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO)
                              LOOP
                                 V_ICMS := 'S';
                              END LOOP;

                              IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
                                 INSERT INTO ITEMPROIMPOS(CDFILIAL,     NRLANCTONF,     NRSEQITPROD,     CDIMPOSTO,      NRITPROIMPOS,    CDFISCALIT,
                                                          CDSITUTRIBIT, CDFISCOPERIT,   CDSUFXCFOPIT,    VRALIQITEM,     VRPERREDBCIT,    VRPARDEDIT,
                                                          VRCONTITIMP,  VRBASECALCIT,   VRIMPOSTOIT,     IDERROSIMPIT,   IDAVISIMPIT,     CDSITUTRIBITNFE,
                                                          IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT, IDTRIMPSTII,
                                                          CDDETALHEPROD, VRIMPOSTOVISUIT, CDENQLEGALIPI, CDCEST, CDBENEFFISCAL, IDDESONERAREGRA,
                                                          IDCONSDESONVRNF, IDVALORINFIT)
                                 VALUES(P_FILIAL, P_LANCTONF, C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, C_ITEMPROIMPOS.NRITPROIMPOS, V_CDFISCTEMP,
                                        NVL(V_SITUTRIBPR, C_ITEMPROD.CDSITUTRIBPR), V_FISOPEITEM, V_SUFXCFOPPR, C_ITEMPROIMPOS.VRALIQITEM, C_ITEMPROIMPOS.VRPERREDBCIT, TRUNC((C_ITEMPROIMPOS.VRPARDEDIT * V_VRFATOCONV),2),
                                        TRUNC((C_ITEMPROIMPOS.VRCONTITIMP * V_VRFATOCONV),2), TRUNC((C_ITEMPROIMPOS.VRBASECALCIT * V_VRFATOCONV),2),
                                        TRUNC((C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV),2), w_00000, w_00000, V_CDSITUTRIBNFE,
                                        V_IDMODBCNFEIT, V_IDMODBCSTNFEIT, V_CDTPCRPICOSTNFEIT, V_CDNATUBCPCSTNFEIT, V_IDMOTIDESSTNFE, C_ITEMPROIMPOS.IDTRIMPSTII,
                                        V_CDDETALHEPRODTEMP, TRUNC(V_VRIMPOSTOVISUIT,2), V_CDENQLEGALIPI, V_CDCEST, V_CDBENEFFISCAL, NVL(V_IDIMPODESONERA, 'N'),
                                        NVL(V_IDCONSDESONVRNF, 'N'), C_ITEMPROIMPOS.IDVALORINFIT);
                              ELSE
                                 INSERT INTO ITEMPROIMPOS(CDFILIAL,     NRLANCTONF,     NRSEQITPROD,     CDIMPOSTO,      NRITPROIMPOS,    CDFISCALIT,
                                                          CDSITUTRIBIT, CDFISCOPERIT,   CDSUFXCFOPIT,    VRALIQITEM,     VRPERREDBCIT,    VRPARDEDIT,
                                                          VRCONTITIMP,  VRBASECALCIT,   VRIMPOSTOIT,     IDERROSIMPIT,   IDAVISIMPIT,     CDSITUTRIBITNFE,
                                                          IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT, IDTRIMPSTII,
                                                          CDDETALHEPROD, VRIMPOSTOVISUIT, CDENQLEGALIPI, CDCEST, VRADICFECP, VRADICALIQFECP,
                                                          CDBENEFFISCAL, IDDESONERAREGRA, IDCONSDESONVRNF, IDVALORINFIT)
                                 VALUES(P_FILIAL, P_LANCTONF, C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, C_ITEMPROIMPOS.NRITPROIMPOS, V_CDFISCTEMP,
                                        NVL(V_SITUTRIBPR, C_ITEMPROD.CDSITUTRIBPR), V_FISOPEITEM, V_SUFXCFOPPR, C_ITEMPROIMPOS.VRALIQITEM, C_ITEMPROIMPOS.VRPERREDBCIT, (C_ITEMPROIMPOS.VRPARDEDIT * V_VRFATOCONV),
                                        ROUND((C_ITEMPROIMPOS.VRCONTITIMP * V_VRFATOCONV),2), (C_ITEMPROIMPOS.VRBASECALCIT * V_VRFATOCONV),
                                        (C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV), w_00000, w_00000, V_CDSITUTRIBNFE,
                                        V_IDMODBCNFEIT, V_IDMODBCSTNFEIT, V_CDTPCRPICOSTNFEIT, V_CDNATUBCPCSTNFEIT, V_IDMOTIDESSTNFE, C_ITEMPROIMPOS.IDTRIMPSTII,
                                        V_CDDETALHEPRODTEMP, ROUND(V_VRIMPOSTOVISUIT,2), V_CDENQLEGALIPI, V_CDCEST, ROUND((C_ITEMPROIMPOS.VRADICFECP * V_VRFATOCONV), 2), C_ITEMPROIMPOS.VRADICALIQFECP,
                                        V_CDBENEFFISCAL, NVL(V_IDIMPODESONERA, 'N'), NVL(V_IDCONSDESONVRNF, 'N'), C_ITEMPROIMPOS.IDVALORINFIT);
                              END IF;

                              IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
                                 INSERT INTO ITEMPROIMPOSORIG(CDFILIAL,     NRLANCTONF,     NRSEQITPROD,     CDIMPOSTO,      NRITPROIMPOS,    CDFISCALIT,
                                                          CDSITUTRIBIT, CDFISCOPERIT,   CDSUFXCFOPIT,    VRALIQITEM,     VRPERREDBCIT,    VRPARDEDIT,
                                                          VRCONTITIMP,  VRBASECALCIT,   VRIMPOSTOIT,     IDERROSIMPIT,   IDAVISIMPIT,     CDSITUTRIBITNFE,
                                                          IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT, IDTRIMPSTII,
                                                          CDDETALHEPROD, CDENQLEGALIPI, CDCEST, CDBENEFFISCAL)
                                 VALUES(P_FILIAL, P_LANCTONF, C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, C_ITEMPROIMPOS.NRITPROIMPOS, C_ITEMPROIMPOS.CDFISCALIT,
                                        C_ITEMPROD.CDSITUTRIBPR, V_FISOPEITEM, V_SUFXCFOPPR, C_ITEMPROIMPOS.VRALIQITEM, C_ITEMPROIMPOS.VRPERREDBCIT, TRUNC((C_ITEMPROIMPOS.VRPARDEDIT * V_VRFATOCONV),2),
                                        TRUNC((C_ITEMPROIMPOS.VRCONTITIMP * V_VRFATOCONV),2), TRUNC((C_ITEMPROIMPOS.VRBASECALCIT * V_VRFATOCONV),2),
                                        TRUNC((C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV),2), w_00000, w_00000, C_ITEMPROIMPOS.CDSITUTRIBNFE,
                                        C_ITEMPROIMPOS.IDMODBCNFE, C_ITEMPROIMPOS.IDMODBCSTNFE, C_ITEMPROIMPOS.CDTPCREDPICOITE, C_ITEMPROIMPOS.CDNATUBCALPCIT, NVL(C_ITEMPROIMPOS.IDMOTDESONERAIT,'9'), C_ITEMPROIMPOS.IDTRIMPSTII,
                                        V_CDDETALHEPRODTEMP, C_ITEMPROIMPOS.CDENQLEGALIPI, C_ITEMPROIMPOS.CDCEST, V_CDBENEFFISCAL);
                              ELSE
                                 INSERT INTO ITEMPROIMPOSORIG(CDFILIAL,     NRLANCTONF,     NRSEQITPROD,     CDIMPOSTO,      NRITPROIMPOS,    CDFISCALIT,
                                                          CDSITUTRIBIT, CDFISCOPERIT,   CDSUFXCFOPIT,    VRALIQITEM,     VRPERREDBCIT,    VRPARDEDIT,
                                                          VRCONTITIMP,  VRBASECALCIT,   VRIMPOSTOIT,     IDERROSIMPIT,   IDAVISIMPIT,     CDSITUTRIBITNFE,
                                                          IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT, IDTRIMPSTII,
                                                          CDDETALHEPROD, CDENQLEGALIPI, CDCEST, CDBENEFFISCAL)
                                 VALUES(P_FILIAL, P_LANCTONF, C_ITEMPROD.NRSEQITPROD, C_ITEMPROIMPOS.CDIMPOSTO, C_ITEMPROIMPOS.NRITPROIMPOS, C_ITEMPROIMPOS.CDFISCALIT,
                                        C_ITEMPROD.CDSITUTRIBPR, V_FISOPEITEM, V_SUFXCFOPPR, C_ITEMPROIMPOS.VRALIQITEM, C_ITEMPROIMPOS.VRPERREDBCIT, (C_ITEMPROIMPOS.VRPARDEDIT * V_VRFATOCONV),
                                        ROUND((C_ITEMPROIMPOS.VRCONTITIMP * V_VRFATOCONV),2), (C_ITEMPROIMPOS.VRBASECALCIT * V_VRFATOCONV),
                                        (C_ITEMPROIMPOS.VRIMPOSTOIT * V_VRFATOCONV), w_00000, w_00000, C_ITEMPROIMPOS.CDSITUTRIBNFE,
                                        C_ITEMPROIMPOS.IDMODBCNFE, C_ITEMPROIMPOS.IDMODBCSTNFE, C_ITEMPROIMPOS.CDTPCREDPICOITE, C_ITEMPROIMPOS.CDNATUBCALPCIT, NVL(C_ITEMPROIMPOS.IDMOTDESONERAIT,'9'), C_ITEMPROIMPOS.IDTRIMPSTII,
                                        V_CDDETALHEPRODTEMP, C_ITEMPROIMPOS.CDENQLEGALIPI, C_ITEMPROIMPOS.CDCEST, V_CDBENEFFISCAL);
                              END IF;
                           END IF;
                        END IF;
                     END IF;

                     DELETE ALIQTEMP
                      WHERE NRALIQTEMP = V_ALIQTEMP;
                  END LOOP;
               END IF;
               /*Imposto gerado como encargo na importaçdo de xml */
               BEGIN
                  SELECT NVL(IDNFGERADAVIAXML, 'N')
                    INTO V_IDNFORIGVIAXML
                    FROM NOTAFISCAL N, ITEMPRODUTO IP
                   WHERE N.CDFILIAL   = C_ITEMNOTAFISC.CDFILIALIT
                     AND N.NRLANCTONF = C_ITEMNOTAFISC.NRLANCTONFIT
                     AND N.CDFILIAL   = IP.CDFILIAL
                     AND N.NRLANCTONF = IP.NRLANCTONF
                     AND IP.VRENCARGOIMPXML > 0
                     AND ROWNUM = 1;
               EXCEPTION
                  WHEN NO_DATA_FOUND THEN
                     V_IDNFORIGVIAXML := 'N';
               END;
               /*Imposto gerado como encargo na importaçdo de xml*/
               IF (V_IDNFORIGVIAXML = 'S') AND (V_UPDENCIMPXML = 'N') THEN
                  FOR C_ENCARGO IN (SELECT IMP.CDENCARGOIMPXML
                                      FROM IMPOSTONFE NFE, IMPOSTO IMP
                                     WHERE IMP.CDIMPOSTOXML(+) = NFE.CDIMPOSTONFE
                                       AND IMP.CDENCARGOIMPXML IS NOT NULL
                                      ORDER BY NFE.CDIMPOSTONFE) LOOP
                     UPDATE ITEMENCARGO
                        SET VRITEMENCA = 0
                      WHERE CDFILIAL   = P_FILIAL
                        AND NRLANCTONF = P_LANCTONF
                        AND CDENCARGO  = C_ENCARGO.CDENCARGOIMPXML
                        AND IDALTERADO = 'N';
                  END LOOP;
                  V_UPDENCIMPXML := 'S';
               END IF;
               IF (V_IDNFORIGVIAXML = 'S') THEN
                  BEGIN
                     SELECT SUM(I.VRENCARGOIMPXML), SUM(VRTOTAITEM - VRDESCITEM) AS VRLIQUORIG, I.NRSEQITPROD, N.NRACESSONFE
                       INTO V_VRENCARGOIMPXML, V_VRLIQUORIG, V_NRSEQITORIG, V_NRACESSONFORIG
                       FROM ITEMPRODUTO I, NOTAFISCAL N
                      WHERE I.CDFILIAL    = C_ITEMNOTAFISC.CDFILIALIT
                        AND I.NRLANCTONF  = C_ITEMNOTAFISC.NRLANCTONFIT
                        AND I.CDPRODUTO   = C_ITEMPROD.CDPRODUTO
                        AND I.CDFILIAL    = N.CDFILIAL
                        AND I.NRLANCTONF  = N.NRLANCTONF
                        AND ROUND(I.VRUNITITEM, V_NRDECITOTANF) = ROUND(C_ITEMPROD.VRUNITITEM, V_NRDECITOTANF)
                        AND (NVL(I.NRLOTEESTQ, ' ')  = (NVL(C_ITEMPROD.NRLOTEESTQ, ' ')))
                        AND (NVL(I.NRSUBLOTE , ' ')  = (NVL(C_ITEMPROD.NRSUBLOTE , ' ')))
                        AND  I.VRENCARGOIMPXML > 0
                        AND ROWNUM = 1
                      GROUP BY I.NRSEQITPROD, N.NRACESSONFE;
                  EXCEPTION
                     WHEN NO_DATA_FOUND THEN
                        V_VRENCARGOIMPXML := 0; V_VRLIQUORIG := 0; V_NRSEQITORIG := NULL; V_NRACESSONFORIG := NULL;
                  END;
                  IF (V_VRENCARGOIMPXML > 0) THEN
                     V_VRFATOCONV :=  (C_ITEMPROD.VRTOTAITEM - C_ITEMPROD.VRDESCITEM)/ V_VRLIQUORIG;
                     FOR C_ENCARGOXML IN (SELECT IMP.CDENCARGOIMPXML, IMP.CDIMPOSTO
                                            FROM IMPOSTONFE NFE, IMPOSTO IMP
                                           WHERE IMP.CDIMPOSTOXML(+) = NFE.CDIMPOSTONFE
                                             AND IMP.CDENCARGOIMPXML IS NOT NULL) LOOP
                        BEGIN
                           SELECT IT.VRIMPOSTOIT + (NVL(VRADICFECP, 0))
                             INTO V_VRIMPENCXMLORIG
                             FROM INTG_TRABITPROIMPOS IT, IMPOSTO I
                            WHERE IT.NRACESSONFE  = V_NRACESSONFORIG
                              AND IT.CDIMPOSTOIT  = I.CDIMPOSTO
                              AND LPAD(IT.NRSEQIMPOIT, 4, '0') = V_NRSEQITORIG
                              AND IT.CDIMPOSTOIT = C_ENCARGOXML.CDIMPOSTO;
                        EXCEPTION
                           WHEN NO_DATA_FOUND THEN
                              V_VRIMPENCXMLORIG := 0;
                        END;
                        IF V_VRIMPENCXMLORIG > 0 THEN
                           UPDATE ITEMENCARGO
                              SET VRITEMENCA = VRITEMENCA + (V_VRIMPENCXMLORIG * V_VRFATOCONV)
                            WHERE CDFILIAL   = P_FILIAL
                              AND NRLANCTONF = P_LANCTONF
                              AND CDENCARGO  = C_ENCARGOXML.CDENCARGOIMPXML;
                        END IF;
                     END LOOP;
                  END IF;
               END IF; -- Pegar o valor proporcional do imposto
            END LOOP;
         END IF;

         DELETE CFOPTEMP
          WHERE NRCFOPTEMP = V_CFOPTEMP;

         IF (V_IDOPERDEVONF <> w_S) THEN
            IF V_IDDOCREPLIC IS NOT NULL THEN
               IF LENGTH(V_SITUTRIBPR) = 3 THEN
                  V_SITUTRIBPR := SUBSTR(V_SITUTRIBPR,1,1) || w_90;
               ELSE
                  V_SITUTRIBPR := w_90;
               END IF;
            END IF;

            UPDATE ITEMPRODUTO
            SET CDSITUTRIBPR  = V_SITUTRIBPR
            WHERE CDFILIAL    = P_FILIAL   AND
                  NRLANCTONF  = P_LANCTONF AND
                  NRSEQITPROD = C_ITEMPROD.NRSEQITPROD;
         END IF;

         DELETE CSTTEMP
         WHERE NRCSTTEMP = V_CSTTEMP;

         V_IMPOCONTAB := 0;
      END LOOP;


      SELECT MAX(IDUTCTRLFISSAID)
        INTO V_IDUTCTRLFISSAID
        FROM PARAMGERAL;

      SELECT MAX(IDUTCTRLFISSAID)
        INTO V_IDUTCTRLFISFIL
        FROM PARAMFILIAL
       WHERE CDFILIAL = V_CDFILIEMIT;

      IF V_IDUTCTRLFISSAID = 'S' THEN
         V_IDUTCTRLFIS := 'S';
      ELSE
         IF V_IDUTCTRLFISFIL = 'S' THEN
            V_IDUTCTRLFIS := 'S';
         ELSE
            V_IDUTCTRLFIS := 'N';
         END IF;
      END IF;

      SELECT NVL(MAX(IDGERICMSTDESPA), 'N'), MAX(CDENCARGOICMST), NVL(MAX(IDPEINFICMSTDEME), 'N'), NVL(MAX(IDGERIPIDESPA), 'N')
        INTO V_IDGERICMSTDESPA, V_CDENCARGOICMST, V_IDPEINFICMSTDEME, V_IDGERIPIDESPA
        FROM TIPOOPERAC
       WHERE IDENTRSAIDOP = 'S'
         AND CDTIPOOPER = P_TIPOOPER;

      IF ((V_IDGERICMSTDESPA = 'S') OR (V_IDGERIPIDESPA = 'S')) AND (V_IDUTCTRLFIS = 'S') AND (V_IDNFORIGVIAXML = 'N') THEN
         UPDATE ITEMENCARGO
            SET VRITEMENCA = 0
          WHERE CDFILIAL = P_FILIAL
            AND NRLANCTONF = P_LANCTONF
            AND IDALTERADO = 'N';
      END IF;

      V_VRENCAICMSSTIT := 0;
      FOR C_ITEMNOTAFISC IN (SELECT CDFILIALIT, NRLANCTONFIT
                             FROM ITEMNOTAFISC
                             WHERE CDFILIAL   = P_FILIAL AND
                                   NRLANCTONF = P_LANCTONF) LOOP

         SELECT SUM(VRTOTAITEM - VRDESCITEM) AS VRLIQUORIG
         INTO   V_VRLIQUORIG
         FROM ITEMPRODUTO I
         WHERE CDFILIAL    = C_ITEMNOTAFISC.CDFILIALIT AND
               NRLANCTONF  = C_ITEMNOTAFISC.NRLANCTONFIT;

         IF V_VRLIQUORIG = 0 THEN
            V_VRFATOCONV := 0;
         ELSE
            V_VRFATOCONV := V_LIQUIDO / V_VRLIQUORIG;
         END IF;

         IF (V_IDNFORIGVIAXML = 'N') THEN
            SELECT SUM(VRITEMENCA)
              INTO V_VRENCAICMSSTIT
              FROM ITEMENCARGO
             WHERE CDFILIAL = C_ITEMNOTAFISC.CDFILIALIT
               AND NRLANCTONF = C_ITEMNOTAFISC.NRLANCTONFIT
               AND CDENCARGO = V_CDENCARGOICMST;

            FOR C_ITEMENCARGO IN (SELECT CDENCARGO, SUM(VRITEMENCA) AS VRITEMENCA
                                  FROM ITEMENCARGO
                                  WHERE CDFILIAL   = C_ITEMNOTAFISC.CDFILIALIT   AND
                                        NRLANCTONF = C_ITEMNOTAFISC.NRLANCTONFIT AND
                                        VRITEMENCA > 0
                                  GROUP BY CDENCARGO) LOOP

                SELECT NVL(MAX(IDALTERADO), 'N')
                  INTO V_IDALTERADO_ENCA
                  FROM ITEMENCARGO
                WHERE CDFILIAL   = P_FILIAL
                  AND NRLANCTONF = P_LANCTONF
                  AND CDENCARGO = C_ITEMENCARGO.CDENCARGO;
                IF V_IDALTERADO_ENCA = 'N' THEN
                   UPDATE ITEMENCARGO
                   SET VRITEMENCA = (C_ITEMENCARGO.VRITEMENCA * V_VRFATOCONV)
                   WHERE CDFILIAL   = P_FILIAL   AND
                         NRLANCTONF = P_LANCTONF AND
                         CDENCARGO  = C_ITEMENCARGO.CDENCARGO;
                END IF;
            END LOOP;
         END IF;   
      END LOOP;

      /*CALCULA DESCONTO DE BONIFICAÇÃO NA DEVOLUÇÃO DE NOTAS */
      SELECT MAX(CDENCDESCBONDEV)
        INTO V_CDENCDESCBONDEV
        FROM PARAMGERAL;

      IF V_CDENCDESCBONDEV IS NOT NULL THEN
         SELECT NVL(MAX(IDCONDESBONFORN), 'S') INTO V_IDCONDESBONFORN
           FROM PARAMFILIAL
          WHERE CDFILIAL = V_CDFILIEMIT;

         SELECT MAX(F.CDAJUCTPAG), MAX(F.VRPEDESCFORN), TO_DATE(NVL(MAX(DTINIVRPDESC), '01/01/0100'))
           INTO V_CDAJUCTPAG, V_VRPEDESCFORN, V_DTINIVRPDESC
           FROM FORNECEDOR F
          WHERE (F.CDFORNECED   = P_CLIENTE)
            AND (NOT F.VRPEDESCFORN IS NULL)
            AND (F.IDTPDESCFORN = 'B');

         IF (V_VRPEDESCFORN IS NOT NULL) AND (V_VRPEDESCFORN <> 0) AND (V_IDCONDESBONFORN = 'S') THEN

            IF (P_INIVALID >= V_DTINIVRPDESC) THEN
               V_VRENCARBONI := ROUND(V_LIQUIDO * (V_VRPEDESCFORN/100),2);

               UPDATE ITEMENCARGO
               SET VRITEMENCA = V_VRENCARBONI
               WHERE CDFILIAL = P_FILIAL
                 AND NRLANCTONF = P_LANCTONF
                 AND CDENCARGO = V_CDENCDESCBONDEV;
            END IF;
         END IF;
      END IF;

      DELETE FROM DADOSADIC
       WHERE CDFILIAL   = P_FILIAL
         AND NRLANCTONF = P_LANCTONF
         AND DSDADOADIC LIKE 'Base de Cálculo do ICMS ST%';
      DELETE FROM DADOSADIC
       WHERE CDFILIAL   = P_FILIAL
         AND NRLANCTONF = P_LANCTONF
         AND DSDADOADIC LIKE 'ICMS ST: R$%';
      DELETE FROM DADOSADIC
       WHERE CDFILIAL   = P_FILIAL
         AND NRLANCTONF = P_LANCTONF
         AND DSDADOADIC LIKE 'Valor de IPI: R$%';

      IF (V_IDUTCTRLFIS = 'S') THEN
         IF V_IDGERICMSTDESPA = 'S' THEN
            IF V_CDENCARGOICMST IS NOT NULL THEN
               SELECT NVL(MAX(IDALTERADO), 'N')
                 INTO V_IDALTERADO_ENCA
                 FROM ITEMENCARGO
               WHERE CDFILIAL   = P_FILIAL
                 AND NRLANCTONF = P_LANCTONF
                 AND CDENCARGO = V_CDENCARGOICMST;

               IF V_IDALTERADO_ENCA = 'N' THEN
                  UPDATE ITEMENCARGO
                     SET VRITEMENCA = 0
                   WHERE CDFILIAL = P_FILIAL
                     AND NRLANCTONF = P_LANCTONF
                     AND CDENCARGO = V_CDENCARGOICMST;
               END IF;

               SELECT MAX(CDENCARGO)
                 INTO V_CDENCARGOOD
                 FROM ENCARGO
                WHERE CDENCARGONFE = '04';

               IF V_CDENCARGOOD IS NOT NULL THEN
                  SELECT NVL(MAX(IDALTERADO), 'N')
                    INTO V_IDALTERADO_ENCA
                    FROM ITEMENCARGO
                   WHERE CDFILIAL = P_FILIAL
                     AND NRLANCTONF = P_LANCTONF
                     AND CDENCARGO = V_CDENCARGOOD;

                  IF V_IDALTERADO_ENCA = 'N' THEN
                     IF (V_VRENCAICMSSTIT > 0) OR (V_VRTOTALICMSST > 0) THEN
                        IF V_IDPEINFICMSTDEME = 'S' THEN
                           SELECT NVL(SUM(VRICMSST),0), NVL(SUM(VRBASECALC),0)
                             INTO V_VRICMSST, V_VRBASECALC
                             FROM INFICMSST
                            WHERE CDFILIAL = P_FILIAL
                              AND NRLANCTONF = P_LANCTONF;

                           IF V_VRICMSST > 0 THEN

                              UPDATE ITEMENCARGO
                                 SET VRITEMENCA = ROUND(VRITEMENCA + V_VRICMSST,2)
                               WHERE CDFILIAL = P_FILIAL
                                 AND NRLANCTONF = P_LANCTONF
                                 AND CDENCARGO = V_CDENCARGOOD;

                              IF V_VRBASECALC > 0 THEN
                                 SELECT COUNT(*)
                                   INTO V_EXISTDSDADOSADIC
                                   FROM DADOSADIC
                                  WHERE CDFILIAL = P_FILIAL
                                    AND NRLANCTONF = P_LANCTONF
                                    AND DSDADOADIC LIKE 'Base de Cálculo do ICMS ST%';

                                 IF V_EXISTDSDADOSADIC = 0 THEN

                                    INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
                                                   VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, 'Base de Cálculo do ICMS ST: R$'||DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_VRBASECALC , 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_VRBASECALC , 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_VRBASECALC , 2), '9999999999999.99')))|| ' ICMS ST: R$'|| DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_VRICMSST, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_VRICMSST, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_VRICMSST, 2), '9999999999999.99'))));

                                    V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
                                 ELSE
                                    UPDATE DADOSADIC
                                       SET DSDADOADIC = 'Base de Cálculo do ICMS ST: R$'||DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_VRBASECALC, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_VRBASECALC, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_VRBASECALC, 2), '9999999999999.99')))|| ' ICMS ST: R$'|| DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_VRICMSST, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_VRICMSST, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_VRICMSST, 2), '9999999999999.99')))
                                      WHERE CDFILIAL = P_FILIAL
                                        AND NRLANCTONF = P_LANCTONF
                                        AND DSDADOADIC LIKE 'Base de Cálculo do ICMS ST%';
                                 END IF;
                              ELSE
                                 SELECT COUNT(*)
                                   INTO V_EXISTDSDADOSADIC
                                   FROM DADOSADIC
                                  WHERE CDFILIAL = P_FILIAL
                                    AND NRLANCTONF = P_LANCTONF
                                    AND DSDADOADIC LIKE 'ICMS ST: R$%';

                                 IF V_EXISTDSDADOSADIC = 0 THEN
                                    INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
                                                   VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, 'ICMS ST: R$ '||DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_VRICMSST, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_VRICMSST, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_VRICMSST, 2), '9999999999999.99'))));

                                    V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
                                 ELSE
                                    UPDATE DADOSADIC
                                       SET DSDADOADIC = 'ICMS ST: R$ '||DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_VRICMSST, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_VRICMSST, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_VRICMSST, 2), '9999999999999.99')))
                                      WHERE CDFILIAL = P_FILIAL
                                        AND NRLANCTONF = P_LANCTONF
                                        AND DSDADOADIC LIKE 'ICMS ST: R$%';
                                 END IF;
                              END IF;
                           END IF;
                        ELSE
                           UPDATE ITEMENCARGO
                              SET VRITEMENCA = ROUND(VRITEMENCA + (V_VRENCAICMSSTIT * V_VRFATOCONV) + V_VRTOTALICMSST,2)
                            WHERE CDFILIAL = P_FILIAL
                              AND NRLANCTONF = P_LANCTONF
                              AND CDENCARGO = V_CDENCARGOOD;

                           SELECT COUNT(*)
                             INTO V_EXISTDSDADOSADIC
                             FROM DADOSADIC
                            WHERE CDFILIAL = P_FILIAL
                              AND NRLANCTONF = P_LANCTONF
                              AND DSDADOADIC LIKE 'ICMS ST: R$%';

                           IF V_EXISTDSDADOSADIC = 0 THEN
                              INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
                                             VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, 'ICMS ST: R$ '||DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_VRTOTALICMSST + (V_VRENCAICMSSTIT * V_VRFATOCONV), 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_VRTOTALICMSST + (V_VRENCAICMSSTIT * V_VRFATOCONV), 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_VRTOTALICMSST + (V_VRENCAICMSSTIT * V_VRFATOCONV), 2), '9999999999999.99'))));

                              V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
                           ELSE
                              UPDATE DADOSADIC
                                 SET DSDADOADIC = 'ICMS ST: R$ '||DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_VRTOTALICMSST + (V_VRENCAICMSSTIT * V_VRFATOCONV), 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_VRTOTALICMSST + (V_VRENCAICMSSTIT * V_VRFATOCONV), 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_VRTOTALICMSST + (V_VRENCAICMSSTIT * V_VRFATOCONV), 2), '9999999999999.99')))
                                WHERE CDFILIAL = P_FILIAL
                                  AND NRLANCTONF = P_LANCTONF
                                  AND DSDADOADIC LIKE 'ICMS ST: R$%';
                           END IF;
                        END IF;
                     END IF;
                  END IF;
               END IF;
            END IF;
         END IF;
         IF (V_IDGERIPIDESPA = 'S') THEN
            SELECT MAX(CDENCARGO)
              INTO V_CDENCARGOOD
              FROM ENCARGO
             WHERE CDENCARGONFE = '04';

            IF V_CDENCARGOOD IS NOT NULL THEN
               SELECT NVL(MAX(IDALTERADO), 'N')
                 INTO V_IDALTERADO_ENCA
                 FROM ITEMENCARGO
                WHERE CDFILIAL   = P_FILIAL
                  AND NRLANCTONF = P_LANCTONF
                  AND CDENCARGO  = V_CDENCARGOOD;
               IF V_IDALTERADO_ENCA = 'N' THEN
                  IF (V_VRTOTALIPI > 0) THEN
                     UPDATE ITEMENCARGO
                        SET VRITEMENCA = ROUND(VRITEMENCA + V_VRTOTALIPI, 2)
                      WHERE CDFILIAL = P_FILIAL
                        AND NRLANCTONF = P_LANCTONF
                        AND CDENCARGO = V_CDENCARGOOD;

                     SELECT COUNT(*)
                       INTO V_EXISTDSDADOSADIC
                       FROM DADOSADIC
                      WHERE CDFILIAL = P_FILIAL
                        AND NRLANCTONF = P_LANCTONF
                        AND DSDADOADIC LIKE 'Valor de IPI: R$%';

                     IF (V_EXISTDSDADOSADIC = 0) THEN

                        INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
                                       VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, 'Valor de IPI: R$ '||DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_VRTOTALIPI, 2),'9999999999999.99')),1, 1),'.','0'||LTRIM(TO_CHAR(ROUND(V_VRTOTALIPI, 2),'9999999999999.99')),LTRIM(TO_CHAR(ROUND(V_VRTOTALIPI, 2),'9999999999999.99'))));

                        V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
                     ELSE
                        UPDATE DADOSADIC
                           SET DSDADOADIC = 'Valor de IPI: R$ '||DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_VRTOTALIPI, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_VRTOTALIPI, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_VRTOTALIPI, 2), '9999999999999.99')))
                          WHERE CDFILIAL = P_FILIAL
                            AND NRLANCTONF = P_LANCTONF
                            AND DSDADOADIC LIKE 'Valor de IPI: R$%';
                     END IF;
                  END IF;
               END IF;
            END IF;
         END IF;
      END IF;

      --RATEIO DOS ENCARGOS--------------------------------------------------------------------------------------------------------
      /* VERIFICAR SE EXISTE ENCARGO COM VALOR SOMENTE SE TIVER ALGUM ENCARGO PARAMETRIZADO PARA RATEAR PELO PESO LÍQUIDO */
      IF NOT(V_ENCARGOLIQUIDO = 'N') THEN
         V_EXISTEENCARGO := 0;
         BEGIN
            SELECT COUNT(CDENCARGO)
              INTO V_EXISTEENCARGO
              FROM ITEMENCARGO
             WHERE VRITEMENCA > 0
               AND CDFILIAL   = P_FILIAL
               AND NRLANCTONF = P_LANCTONF;
         EXCEPTION
            WHEN NO_DATA_FOUND THEN
               V_EXISTEENCARGO := 0;
         END;

         IF (V_EXISTEENCARGO = 0) THEN
            V_ENCARGOLIQUIDO := 'N';
         END IF;

         /* VERIFICAR SE ALGUM ENCARGO QUE TEM VALOR ESTÁ PARAMETRIZADO PARA SER RATEADO POR PESO LÍQUIDO CASO SEJA OPÇÃO LISTA */
         IF (V_EXISTEENCARGO > 0) THEN
            IF NOT(V_ENCARGOLIQUIDO = 'T') THEN
               BEGIN
                  SELECT COUNT(CDENCARGO)
                    INTO V_EXISTEENCARGO
                    FROM ITEMENCARGO
                   WHERE VRITEMENCA > 0
                     AND CDFILIAL   = P_FILIAL
                     AND NRLANCTONF = P_LANCTONF
                     AND INSTR(V_ENCARGOLIQUIDO, CDENCARGO) > 0;
               EXCEPTION
                  WHEN NO_DATA_FOUND THEN
                     V_EXISTEENCARGO := 0;
               END;
               /* SE HOUVER ENCARGO COM VALOR MAS NENHUM ESTEJA PARAMETRIZADO NA LISTA PARA RATEAR POR PESO LÍQUIDO, A VARIÁVEL V_ENCARGOLIQUIDO É PASSADA PARA 'N' PARA QUE OS ENCARGOS QUE TENHAM
                  VALOR SEJAM RATEADOS DE FORMA PROPORCIONAL AO VALOR DOS PRODUTOS */
               IF (V_EXISTEENCARGO = 0) THEN
                  V_ENCARGOLIQUIDO := 'N';
               END IF;
            END IF;
         END IF;
      END IF;

      /* RATEIO DOS ENCARGOS QUE NÃO SÃO REFERENTES A IMPOSTOS GERADOS COMO ENCARGO NA ENTRADA */
      FOR C_ITEMENCARGO IN (SELECT IE.CDENCARGO AS CDENCARGO, VRITEMENCA, IDENCARGO,
                                   EN.CDCTBLENTREN, EN.CDCTBLSAIDEN
                              FROM ITEMENCARGO IE, ENCARGO EN
                             WHERE (IE.CDFILIAL   = P_FILIAL)     AND
                                   (IE.NRLANCTONF = P_LANCTONF)   AND
                                   (IE.VRITEMENCA > 0)            AND
                                   (EN.CDENCARGO  = IE.CDENCARGO) AND
                                   (V_ENCARGOLIQUIDO <> 'T')      AND
                                   (NOT(INSTR(V_ENCARGOLIQUIDO, IE.CDENCARGO) > 0)) AND
                              (NOT EXISTS (SELECT CDENCARGOIMPXML
                                             FROM IMPOSTO
                                            WHERE IMPOSTO.CDENCARGOIMPXML = IE.CDENCARGO) OR (NVL(V_IDNFORIGVIAXML, 'N') = 'N')
                              )
                           ) LOOP
         V_TOTAPRODENCA := 0;

         FOR C_VRLIQRATEIO IN (SELECT DISTINCT(IP.NRSEQITPROD) AS NRSEQITPROD, (VRTOTAITEM - VRDESCITEM) AS VRLIQUIDO
                                 FROM ITEMPRODUTO IP, ITEMPROIMPOS II
                                WHERE (IP.CDFILIAL    = P_FILIAL)       AND
                                      (IP.NRLANCTONF  = P_LANCTONF)     AND
                                      (II.CDFILIAL    = IP.CDFILIAL)    AND
                                      (II.NRLANCTONF  = IP.NRLANCTONF)  AND
                                      (II.NRSEQITPROD = IP.NRSEQITPROD) AND
                                      (EXISTS(SELECT BC.CDIMPOSTO
                                                FROM BASECALC BC
                                               WHERE (BC.CDENCARGO = C_ITEMENCARGO.CDENCARGO) AND
                                                     (BC.CDIMPOSTO = II.CDIMPOSTO)            AND
                                                     (BC.CDIMPOSTO IN (SELECT B.CDIMPOSTO
                                                                        FROM BASECALC B
                                                                       WHERE B.CDENCARGO = C_ITEMENCARGO.CDENCARGO))))) LOOP

            IF NOT (C_VRLIQRATEIO.VRLIQUIDO IS NULL) THEN
               V_TOTAPRODENCA := V_TOTAPRODENCA + C_VRLIQRATEIO.VRLIQUIDO;
            END IF;
         END LOOP;

         IF V_TOTAPRODENCA = 0 THEN
            IF (V_IDCONTCONFORIG = 'N') THEN
               SELECT SUM(VRTOTAITEM - VRDESCITEM)
               INTO   V_TOTAPRODENCA
               FROM ITEMPRODUTO IP
               WHERE (IP.CDFILIAL   = P_FILIAL)   AND
                     (IP.NRLANCTONF = P_LANCTONF);

               IF NOT V_TOTAPRODENCA IS NULL THEN
                  FOR C_ATUAVRCONT IN (SELECT IP.NRSEQITPROD, (VRTOTAITEM - VRDESCITEM) AS VRLIQUIDO
                                       FROM ITEMPRODUTO IP
                                       WHERE (IP.CDFILIAL    = P_FILIAL) AND
                                             (IP.NRLANCTONF  = P_LANCTONF)) LOOP

                     IF (C_ITEMENCARGO.IDENCARGO = w_A) THEN
                        V_VRBRUTO  := (C_ITEMENCARGO.VRITEMENCA/V_TOTAPRODENCA);
                     ELSIF (C_ITEMENCARGO.IDENCARGO = w_D) THEN
                        V_VRBRUTO  := - (C_ITEMENCARGO.VRITEMENCA/V_TOTAPRODENCA);
                     ELSE
                        V_VRBRUTO := 0;
                     END IF;

                     IF (C_ITEMENCARGO.CDCTBLSAIDEN IS NULL) THEN
                        V_VRCONTAB := V_VRBRUTO;
                     ELSE
                        V_VRCONTAB := 0;
                     END IF;

                     IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                        UPDATE ITEMPRODUTO
                        SET VRBRUTITEM = TRUNC(VRBRUTITEM + (V_VRBRUTO  * (VRTOTAITEM - VRDESCITEM)),2),
                            VRCONTITEM = TRUNC(VRCONTITEM + (V_VRCONTAB * (VRTOTAITEM - VRDESCITEM)),2)
                        WHERE CDFILIAL    = P_FILIAL   AND
                              NRLANCTONF  = P_LANCTONF AND
                              NRSEQITPROD = C_ATUAVRCONT.NRSEQITPROD;
                     ELSE
                        UPDATE ITEMPRODUTO
                        SET VRBRUTITEM = ROUND(VRBRUTITEM + (V_VRBRUTO  * (VRTOTAITEM - VRDESCITEM)),5),
                            VRCONTITEM = ROUND(VRCONTITEM + (V_VRCONTAB * (VRTOTAITEM - VRDESCITEM)),5)
                        WHERE CDFILIAL    = P_FILIAL   AND
                              NRLANCTONF  = P_LANCTONF AND
                              NRSEQITPROD = C_ATUAVRCONT.NRSEQITPROD;
                     END IF;
                  END LOOP;
               END IF;
            END IF;
         ELSE
            IF (V_IDCONTCONFORIG = 'N') THEN
               FOR C_ATUAVRCONT IN (SELECT DISTINCT(IP.NRSEQITPROD) AS NRSEQITPROD, (VRTOTAITEM - VRDESCITEM) AS VRLIQUIDO
                                    FROM ITEMPRODUTO IP, ITEMPROIMPOS II
                                    WHERE (IP.CDFILIAL    = P_FILIAL)       AND
                                          (IP.NRLANCTONF  = P_LANCTONF)     AND
                                          (II.CDFILIAL    = IP.CDFILIAL)    AND
                                          (II.NRLANCTONF  = IP.NRLANCTONF)  AND
                                          (II.NRSEQITPROD = IP.NRSEQITPROD) AND
                                          (EXISTS(SELECT BC.CDIMPOSTO
                                                  FROM BASECALC BC
                                                  WHERE (BC.CDENCARGO = C_ITEMENCARGO.CDENCARGO) AND
                                                        (BC.CDIMPOSTO = II.CDIMPOSTO)            AND
                                                        (BC.CDIMPOSTO IN (SELECT B.CDIMPOSTO
                                                                          FROM BASECALC B
                                                                          WHERE B.CDENCARGO = C_ITEMENCARGO.CDENCARGO))))) LOOP

                  IF (C_ITEMENCARGO.IDENCARGO = w_A) THEN
                     V_VRBRUTO  := (C_ITEMENCARGO.VRITEMENCA/V_TOTAPRODENCA);
                  ELSIF (C_ITEMENCARGO.IDENCARGO = w_D) THEN
                     V_VRBRUTO  := - (C_ITEMENCARGO.VRITEMENCA/V_TOTAPRODENCA);
                  ELSE
                     V_VRBRUTO := 0;
                  END IF;

                  IF (C_ITEMENCARGO.CDCTBLSAIDEN IS NULL) THEN
                     V_VRCONTAB := V_VRBRUTO;
                  ELSE
                     V_VRCONTAB := 0;
                  END IF;

                  IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                     UPDATE ITEMPRODUTO
                     SET VRBRUTITEM = TRUNC(VRBRUTITEM + (V_VRBRUTO  * (VRTOTAITEM - VRDESCITEM)),2),
                         VRCONTITEM = TRUNC(VRCONTITEM + (V_VRCONTAB * (VRTOTAITEM - VRDESCITEM)),2)
                     WHERE CDFILIAL    = P_FILIAL   AND
                           NRLANCTONF  = P_LANCTONF AND
                           NRSEQITPROD = C_ATUAVRCONT.NRSEQITPROD;
                  ELSE
                     UPDATE ITEMPRODUTO
                     SET VRBRUTITEM = ROUND(VRBRUTITEM + (V_VRBRUTO  * (VRTOTAITEM - VRDESCITEM)),5),
                         VRCONTITEM = ROUND(VRCONTITEM + (V_VRCONTAB * (VRTOTAITEM - VRDESCITEM)),5)
                     WHERE CDFILIAL    = P_FILIAL   AND
                           NRLANCTONF  = P_LANCTONF AND
                           NRSEQITPROD = C_ATUAVRCONT.NRSEQITPROD;
                  END IF;
               END LOOP;
            END IF;
            FOR C_ITEMPROIMPOS IN (SELECT II.NRSEQITPROD, 
                                          II.NRITPROIMPOS, 
                                          II.CDIMPOSTO, 
                                          II.VRPERREDBCIT,
                                          II.VRALIQITEM,  
                                          II.VRPARDEDIT, 
                                          II.IDTRIMPSTII,
                                          (VRTOTAITEM - VRDESCITEM) AS VRLIQUIDO,
                                          NVL(II.IDVALORINFIT, W_N) AS IDVALORINFIT, 
                                          NVL(II.VRALIQINTEDEST, 0) AS VRALIQINTEDEST, 
                                          NVL(II.VRALIQFCP, 0) AS VRALIQFCP, 
                                          NVL(IP.IDUTILBCPMC, 'N') AS IDUTILBCPMC,
                                          I.CDIMPOSTONFE,
                                          II.VRPERREDBCSTIT,
                                          BC.IDTRATIMPOBCENC
                                     FROM ITEMPROIMPOS II, ITEMPRODUTO IP, BASECALC BC, IMPOSTO I
                                    WHERE (II.CDFILIAL = P_FILIAL)
                                      AND (II.NRLANCTONF = P_LANCTONF)
                                      AND (IP.CDFILIAL = P_FILIAL)
                                      AND (IP.NRLANCTONF = P_LANCTONF)
                                      AND (IP.NRSEQITPROD = II.NRSEQITPROD)
                                      AND (BC.CDIMPOSTO = II.CDIMPOSTO)
                                      AND (II.CDIMPOSTO = I.CDIMPOSTO)
                                      AND (BC.CDENCARGO = C_ITEMENCARGO.CDENCARGO)
                                    ORDER BY II.NRSEQITPROD, 
                                          II.NRITPROIMPOS,
                                          II.CDIMPOSTO) LOOP

               /*IMPOSTOS QUE NÃO FORAM GRAVADOS DE ACORDO COM A ORIGEM NÃO DEVEM EFETUAR O CÁLCULO*/
               IF C_ITEMPROIMPOS.IDVALORINFIT <> W_S THEN
                  IF NOT((C_ITEMPROIMPOS.IDUTILBCPMC = W_S) AND (C_ITEMPROIMPOS.CDIMPOSTONFE = '80')) OR (C_ITEMPROIMPOS.IDUTILBCPMC <> W_S) THEN

                     SELECT SUM(VRTOTAITEM - VRDESCITEM)
                       INTO V_TOTAPRENIMPO
                       FROM ITEMPRODUTO IP
                      WHERE IP.CDFILIAL   = P_FILIAL
                        AND IP.NRLANCTONF = P_LANCTONF;

                     IF (V_TOTAPRODENCA <> 0) THEN
                        IF (NVL(C_ITEMPROIMPOS.IDTRATIMPOBCENC, C_ITEMENCARGO.IDENCARGO) = w_A) THEN
                           V_PRODUENCARGO := + (C_ITEMENCARGO.VRITEMENCA/V_TOTAPRENIMPO)*C_ITEMPROIMPOS.VRLIQUIDO;
                        ELSIF (NVL(C_ITEMPROIMPOS.IDTRATIMPOBCENC, C_ITEMENCARGO.IDENCARGO) = w_D) THEN
                           V_PRODUENCARGO := - (C_ITEMENCARGO.VRITEMENCA/V_TOTAPRENIMPO)*C_ITEMPROIMPOS.VRLIQUIDO;
                        ELSE
                           V_PRODUENCARGO := 0;
                        END IF;
                     END IF;

                     V_IDVRIMPSTRIB := NULL;
                     BEGIN
                        SELECT CASE COUNT(*) WHEN 0 THEN 'M' ELSE 'R' END
                          INTO V_MAJORAOUREDUZ
                          FROM ITEMPROIMPOS
                         WHERE CDFILIAL = P_FILIAL 
                           AND NRLANCTONF = P_LANCTONF
                           AND NRSEQITPROD = C_ITEMPROIMPOS.NRSEQITPROD
                           AND CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO
                           AND NRITPROIMPOS = w_2;
                     EXCEPTION
                        WHEN NO_DATA_FOUND THEN
                           V_MAJORAOUREDUZ := 'M';
                     END;

                     V_VRIMPOSTOST := 0;
                     IF V_MAJORAOUREDUZ = 'R' THEN
                        V_TAXABASECALC := (100 - C_ITEMPROIMPOS.VRPERREDBCIT)/100;
                        V_TAXAALIQUOTA := (C_ITEMPROIMPOS.VRALIQITEM/100);
                     ELSE
                        V_TAXABASECALC :=(100 - NVL(C_ITEMPROIMPOS.VRPERREDBCSTIT, 0))/100; 
                        V_PRODUENCARGO :=  (V_PRODUENCARGO * V_TAXABASECALC); /*Calcular o valor do encargo retirando redução da base para no update abaixo utilize o valor adicionando a majoração*/
                        V_TAXABASECALC := 1 + (C_ITEMPROIMPOS.VRPERREDBCIT)/100;
                        V_TAXAALIQUOTA := (C_ITEMPROIMPOS.VRALIQITEM/100);

                        SELECT NVL(MAX(IDVRIMPSTRIB), 'N')
                          INTO V_IDVRIMPSTRIB
                          FROM ITEMPROIMPOS I, IMPOSTO II
                         WHERE (CDFILIAL     = P_FILIAL)
                           AND (NRLANCTONF   = P_LANCTONF)
                           AND (NRSEQITPROD  = C_ITEMPROIMPOS.NRSEQITPROD)
                           AND (INSTR(V_CDIMPOSTRIB,II.CDIMPOSTO||'_') > 0)
                           AND (I.CDIMPOSTO = II.CDIMPOSTO);

                        IF (C_ITEMPROIMPOS.IDTRIMPSTII <> w_1) AND (NVL(V_IDVRIMPSTRIB,w_N) = w_S) THEN
                           Begin
                              SELECT NVL(MAX(VRIMPOSTOIT),0)
                              INTO   V_VRIMPOSTOST
                              FROM ITEMPROIMPOS I
                              WHERE (CDFILIAL     = P_FILIAL)                   AND
                                    (NRLANCTONF   = P_LANCTONF)                 AND
                                    (INSTR(V_CDIMPOSTRIB,CDIMPOSTO||'_') > 0)   AND
                                    (NRITPROIMPOS = C_ITEMPROIMPOS.NRITPROIMPOS) AND
                                    (NRSEQITPROD  = C_ITEMPROIMPOS.NRSEQITPROD);
                           Exception
                              When No_Data_Found Then
                                 V_VRIMPOSTOST := 0;
                           End;
                        END IF;
                     END IF;

                     V_ICMS := 'N';
                     FOR C_ICMS IN (SELECT CDIMPOSTO
                                      FROM IMPOSTONFE N, IMPOSTO I
                                     WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                                       AND N.CDIMPOSTONFE = '00'
                                       AND I.CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO)
                     LOOP
                        V_ICMS := 'S';
                     END LOOP;

                     UPDATE ITEMPROIMPOS
                        SET VRCONTITIMP  = VRCONTITIMP  + (V_PRODUENCARGO * V_TAXABASECALC),
                            VRBASECALCIT = VRBASECALCIT + ((V_PRODUENCARGO * V_TAXABASECALC) / (1 - ((C_ITEMPROIMPOS.VRALIQINTEDEST + C_ITEMPROIMPOS.VRALIQFCP) / 100))),
                            VRIMPOSTOIT  = (VRIMPOSTOIT  + (((V_PRODUENCARGO * V_TAXABASECALC) / (1 - ((C_ITEMPROIMPOS.VRALIQINTEDEST + C_ITEMPROIMPOS.VRALIQFCP) / 100))) * V_TAXAALIQUOTA)) - (((V_VRIMPOSTOST * V_TAXABASECALC) / (1 - ((C_ITEMPROIMPOS.VRALIQINTEDEST + C_ITEMPROIMPOS.VRALIQFCP) / 100))) * V_TAXAALIQUOTA),
                            VRIMPOSTOVISUIT = DECODE(V_IDPERVISIMPSCRE, 'S', (VRIMPOSTOIT  + ((V_PRODUENCARGO * V_TAXABASECALC) * V_TAXAALIQUOTA)) - ((V_VRIMPOSTOST * V_TAXABASECALC) * V_TAXAALIQUOTA),  DECODE(CDFISCALIT , '1', (VRIMPOSTOIT  + ((V_PRODUENCARGO * V_TAXABASECALC) * V_TAXAALIQUOTA)) - ((V_VRIMPOSTOST * V_TAXABASECALC) * V_TAXAALIQUOTA),0)),
                            VRADICFECP  = VRADICFECP  + ROUND((V_PRODUENCARGO * (VRADICALIQFECP / 100) * V_TAXABASECALC),2)
                      WHERE (CDFILIAL     = P_FILIAL)                   AND
                            (NRLANCTONF   = P_LANCTONF)                 AND
                            (NRSEQITPROD  = C_ITEMPROIMPOS.NRSEQITPROD) AND
                            (CDIMPOSTO    = C_ITEMPROIMPOS.CDIMPOSTO)   AND
                            (NRITPROIMPOS = C_ITEMPROIMPOS.NRITPROIMPOS);
                  END IF;

                  /* ROTINA PARA RECALCULAR O DIFERIMENTO DO IMPOSTO */
                  BEGIN
                     SELECT MAX(VRIMPOSTOOPERAIT), MAX(VRPERDIFEREIT)
                       INTO V_VRIMPOSTOOPERAIT, V_VRPERDIFEREIT
                       FROM ITEMPROIMPOS
                      WHERE (CDFILIAL     = P_FILIAL)                    AND
                            (NRLANCTONF   = P_LANCTONF)                  AND
                            (NRSEQITPROD  = C_ITEMPROIMPOS.NRSEQITPROD)  AND
                            (CDIMPOSTO    = C_ITEMPROIMPOS.CDIMPOSTO)    AND
                            (NRITPROIMPOS = C_ITEMPROIMPOS.NRITPROIMPOS) AND
                            (VRPERDIFEREIT <> 0);
                  EXCEPTION
                     When No_Data_Found Then
                        V_VRIMPOSTOOPERAIT := 0; V_VRPERDIFEREIT := 0;
                  END;

                  IF V_VRPERDIFEREIT <> 0 THEN
                     V_VRIMPOSTOOPERAIT := ROUND((V_VRIMPOSTOOPERAIT + ((ROUND(V_PRODUENCARGO, 2) * V_TAXABASECALC) * V_TAXAALIQUOTA)) - ((V_VRIMPOSTOST * V_TAXABASECALC) * V_TAXAALIQUOTA),2);
                     V_VRIMPOSTODIFERIT := ROUND((V_VRIMPOSTOOPERAIT * V_VRPERDIFEREIT/100), 2);

                     UPDATE ITEMPROIMPOS
                        SET VRIMPOSTOOPERAIT = V_VRIMPOSTOOPERAIT,
                            VRIMPOSTODIFERIT = V_VRIMPOSTODIFERIT,
                            VRIMPOSTOIT = (V_VRIMPOSTOOPERAIT - V_VRIMPOSTODIFERIT),
                            VRIMPOSTOVISUIT = (V_VRIMPOSTOOPERAIT - V_VRIMPOSTODIFERIT)
                      WHERE (CDFILIAL     = P_FILIAL)                    AND
                            (NRLANCTONF   = P_LANCTONF)                  AND
                            (NRSEQITPROD  = C_ITEMPROIMPOS.NRSEQITPROD)  AND
                            (CDIMPOSTO    = C_ITEMPROIMPOS.CDIMPOSTO)    AND
                            (NRITPROIMPOS = C_ITEMPROIMPOS.NRITPROIMPOS) AND
                            (VRPERDIFEREIT <> 0);
                  END IF;
               END IF;
            END LOOP;
         END IF;
      END LOOP;

      /* ROTINA PARA REALIZAR RATEIO DOS ENCARGOS PARAMETRIZADOS POR PESO LÍQUIDO DOS PRODUTOS*/
      IF NOT (V_ENCARGOLIQUIDO = 'N') THEN
         FOR C_ITEMENCARGO IN (SELECT IE.CDENCARGO AS CDENCARGO, VRITEMENCA, IDENCARGO,
                                      EN.CDCTBLENTREN, EN.CDCTBLSAIDEN
                                 FROM ITEMENCARGO IE, ENCARGO EN
                                WHERE (IE.CDFILIAL   = P_FILIAL)     AND
                                      (IE.NRLANCTONF = P_LANCTONF)   AND
                                      (IE.VRITEMENCA > 0)            AND
                                      (EN.CDENCARGO  = IE.CDENCARGO) AND
                                      ((V_ENCARGOLIQUIDO = 'T') OR (INSTR(V_ENCARGOLIQUIDO, IE.CDENCARGO) > 0 )) AND
                                 (NOT EXISTS (SELECT CDENCARGOIMPXML
                                                FROM IMPOSTO
                                               WHERE IMPOSTO.CDENCARGOIMPXML = IE.CDENCARGO) OR (NVL(V_IDNFORIGVIAXML, 'N') = 'N')
                                 )
                              ) LOOP
            V_TOTAPRODENCA := 0;

            FOR C_VRLIQRATEIO IN (SELECT DISTINCT(IP.NRSEQITPROD) AS NRSEQITPROD, (VRTOTAITEM - VRDESCITEM) AS VRLIQUIDOPROD,
                                         (PR.VRPESOLIQUPR * IP.QTITEMPROD) AS VRLIQUIDO
                                    FROM ITEMPRODUTO IP, ITEMPROIMPOS II, PRODUTO PR
                                   WHERE (IP.CDFILIAL    = P_FILIAL)       AND
                                         (IP.NRLANCTONF  = P_LANCTONF)     AND
                                         (II.CDFILIAL    = IP.CDFILIAL)    AND
                                         (II.NRLANCTONF  = IP.NRLANCTONF)  AND
                                         (II.NRSEQITPROD = IP.NRSEQITPROD) AND
                                         (IP.CDPRODUTO   = PR.CDPRODUTO)   AND
                                         (NVL(PR.VRPESOLIQUPR, 0) > 0)     AND
                                         (EXISTS(SELECT BC.CDIMPOSTO
                                                   FROM BASECALC BC
                                                  WHERE (BC.CDENCARGO = C_ITEMENCARGO.CDENCARGO) AND
                                                        (BC.CDIMPOSTO = II.CDIMPOSTO)            AND
                                                        (BC.CDIMPOSTO IN (SELECT B.CDIMPOSTO
                                                                           FROM BASECALC B
                                                                          WHERE B.CDENCARGO = C_ITEMENCARGO.CDENCARGO))))) LOOP

               IF NOT (C_VRLIQRATEIO.VRLIQUIDO IS NULL) THEN
                  V_TOTAPRODENCA := V_TOTAPRODENCA + C_VRLIQRATEIO.VRLIQUIDO;
               END IF;
            END LOOP;

            IF V_TOTAPRODENCA = 0 THEN
               IF (V_IDCONTCONFORIG = 'N') THEN
                  SELECT SUM(QTITEMPROD * VRPESOLIQUPR)
                    INTO V_TOTAPRODENCA
                    FROM ITEMPRODUTO IP, PRODUTO PR
                   WHERE (IP.CDFILIAL   = P_FILIAL)
                     AND (IP.NRLANCTONF = P_LANCTONF)
                     AND (IP.CDPRODUTO    = PR.CDPRODUTO)
                     AND (NVL(PR.VRPESOLIQUPR, 0) > 0);

                  IF NOT V_TOTAPRODENCA IS NULL THEN
                     FOR C_ATUAVRCONT IN (SELECT IP.NRSEQITPROD, (VRTOTAITEM - VRDESCITEM) AS VRLIQUIDO,
                                                 (PR.VRPESOLIQUPR * IP.QTITEMPROD) AS PESOTOTALPROD
                                            FROM ITEMPRODUTO IP, PRODUTO PR
                                           WHERE (IP.CDFILIAL    = P_FILIAL)
                                             AND (IP.NRLANCTONF  = P_LANCTONF)
                                             AND (IP.CDPRODUTO    = PR.CDPRODUTO)
                                             AND (NVL(PR.VRPESOLIQUPR, 0) > 0)) LOOP

                        IF (C_ITEMENCARGO.IDENCARGO = w_A) THEN
                           V_VRBRUTO  := (C_ITEMENCARGO.VRITEMENCA/V_TOTAPRODENCA);
                        ELSIF (C_ITEMENCARGO.IDENCARGO = w_D) THEN
                           V_VRBRUTO  := - (C_ITEMENCARGO.VRITEMENCA/V_TOTAPRODENCA);
                        ELSE
                           V_VRBRUTO := 0;
                        END IF;

                        IF (C_ITEMENCARGO.CDCTBLSAIDEN IS NULL) THEN
                           V_VRCONTAB := V_VRBRUTO;
                        ELSE
                           V_VRCONTAB := 0;
                        END IF;

                        IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                           UPDATE ITEMPRODUTO
                           SET VRBRUTITEM = TRUNC(VRBRUTITEM + (V_VRBRUTO  * C_ATUAVRCONT.PESOTOTALPROD),2),
                               VRCONTITEM = TRUNC(VRCONTITEM + (V_VRCONTAB * C_ATUAVRCONT.PESOTOTALPROD),2)
                           WHERE CDFILIAL    = P_FILIAL   AND
                                 NRLANCTONF  = P_LANCTONF AND
                                 NRSEQITPROD = C_ATUAVRCONT.NRSEQITPROD;
                        ELSE
                           UPDATE ITEMPRODUTO
                           SET VRBRUTITEM = ROUND(VRBRUTITEM + (V_VRBRUTO  * C_ATUAVRCONT.PESOTOTALPROD),5),
                               VRCONTITEM = ROUND(VRCONTITEM + (V_VRCONTAB * C_ATUAVRCONT.PESOTOTALPROD),5)
                           WHERE CDFILIAL    = P_FILIAL   AND
                                 NRLANCTONF  = P_LANCTONF AND
                                 NRSEQITPROD = C_ATUAVRCONT.NRSEQITPROD;
                        END IF;
                     END LOOP;
                  END IF;
               END IF;
            ELSE
               IF (V_IDCONTCONFORIG = 'N') THEN
                  FOR C_ATUAVRCONT IN (SELECT DISTINCT(IP.NRSEQITPROD) AS NRSEQITPROD, (VRTOTAITEM - VRDESCITEM) AS VRLIQUIDO,
                                                      (PR.VRPESOLIQUPR * IP.QTITEMPROD) AS PESOTOTALPROD
                                       FROM ITEMPRODUTO IP, ITEMPROIMPOS II, PRODUTO PR
                                       WHERE (IP.CDFILIAL    = P_FILIAL)       AND
                                             (IP.NRLANCTONF  = P_LANCTONF)     AND
                                             (II.CDFILIAL    = IP.CDFILIAL)    AND
                                             (II.NRLANCTONF  = IP.NRLANCTONF)  AND
                                             (II.NRSEQITPROD = IP.NRSEQITPROD) AND
                                             (IP.CDPRODUTO   = PR.CDPRODUTO)   AND
                                             (NVL(PR.VRPESOLIQUPR, 0) > 0)     AND
                                             (EXISTS(SELECT BC.CDIMPOSTO
                                                     FROM BASECALC BC
                                                     WHERE (BC.CDENCARGO = C_ITEMENCARGO.CDENCARGO) AND
                                                           (BC.CDIMPOSTO = II.CDIMPOSTO)            AND
                                                           (BC.CDIMPOSTO IN (SELECT B.CDIMPOSTO
                                                                             FROM BASECALC B
                                                                             WHERE B.CDENCARGO = C_ITEMENCARGO.CDENCARGO))))) LOOP

                     IF (C_ITEMENCARGO.IDENCARGO = w_A) THEN
                        V_VRBRUTO  := (C_ITEMENCARGO.VRITEMENCA/V_TOTAPRODENCA);
                     ELSIF (C_ITEMENCARGO.IDENCARGO = w_D) THEN
                        V_VRBRUTO  := - (C_ITEMENCARGO.VRITEMENCA/V_TOTAPRODENCA);
                     ELSE
                        V_VRBRUTO := 0;
                     END IF;

                     IF (C_ITEMENCARGO.CDCTBLSAIDEN IS NULL) THEN
                        V_VRCONTAB := V_VRBRUTO;
                     ELSE
                        V_VRCONTAB := 0;
                     END IF;

                     IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                        UPDATE ITEMPRODUTO
                        SET VRBRUTITEM = TRUNC(VRBRUTITEM + (V_VRBRUTO  * C_ATUAVRCONT.PESOTOTALPROD),2),
                            VRCONTITEM = TRUNC(VRCONTITEM + (V_VRCONTAB * C_ATUAVRCONT.PESOTOTALPROD),2)
                        WHERE CDFILIAL    = P_FILIAL   AND
                              NRLANCTONF  = P_LANCTONF AND
                              NRSEQITPROD = C_ATUAVRCONT.NRSEQITPROD;
                     ELSE
                        UPDATE ITEMPRODUTO
                        SET VRBRUTITEM = ROUND(VRBRUTITEM + (V_VRBRUTO  * C_ATUAVRCONT.PESOTOTALPROD),5),
                            VRCONTITEM = ROUND(VRCONTITEM + (V_VRCONTAB * C_ATUAVRCONT.PESOTOTALPROD),5)
                        WHERE CDFILIAL    = P_FILIAL   AND
                              NRLANCTONF  = P_LANCTONF AND
                              NRSEQITPROD = C_ATUAVRCONT.NRSEQITPROD;
                     END IF;
                  END LOOP;
               END IF;
               FOR C_ITEMPROIMPOS IN (SELECT II.NRSEQITPROD,
                                             II.NRITPROIMPOS,
                                             II.CDIMPOSTO,
                                             II.VRPERREDBCIT,
                                             II.VRALIQITEM,
                                             II.VRPARDEDIT,
                                             II.IDTRIMPSTII,
                                             (VRTOTAITEM - VRDESCITEM) AS VRLIQUIDO,
                                             NVL(II.IDVALORINFIT, W_N) AS IDVALORINFIT,
                                             NVL(II.VRALIQINTEDEST, 0) AS VRALIQINTEDEST,
                                             NVL(II.VRALIQFCP, 0) AS VRALIQFCP,
                                             NVL(IP.IDUTILBCPMC, 'N') AS IDUTILBCPMC,
                                             I.CDIMPOSTONFE,
                                             II.VRPERREDBCSTIT,
                                             (PR.VRPESOLIQUPR * IP.QTITEMPROD) AS PESOTOTALPROD,
                                             BC.IDTRATIMPOBCENC
                                        FROM ITEMPROIMPOS II, ITEMPRODUTO IP, BASECALC BC, IMPOSTO I, PRODUTO PR
                                       WHERE (II.CDFILIAL = P_FILIAL)
                                         AND (II.NRLANCTONF = P_LANCTONF)
                                         AND (IP.CDFILIAL = P_FILIAL)
                                         AND (IP.NRLANCTONF = P_LANCTONF)
                                         AND (IP.NRSEQITPROD = II.NRSEQITPROD)
                                         AND (PR.CDPRODUTO    = IP.CDPRODUTO)            
                                         AND (NVL(PR.VRPESOLIQUPR, 0) > 0)
                                         AND (BC.CDIMPOSTO = II.CDIMPOSTO)
                                         AND (II.CDIMPOSTO = I.CDIMPOSTO)
                                         AND (BC.CDENCARGO = C_ITEMENCARGO.CDENCARGO)
                                       ORDER BY II.NRSEQITPROD,
                                             II.NRITPROIMPOS,
                                             II.CDIMPOSTO) LOOP

                  /*IMPOSTOS QUE NÃO FORAM GRAVADOS DE ACORDO COM A ORIGEM NÃO DEVEM EFETUAR O CÁLCULO*/
                  IF C_ITEMPROIMPOS.IDVALORINFIT <> W_S THEN
                     IF NOT((C_ITEMPROIMPOS.IDUTILBCPMC = W_S) AND (C_ITEMPROIMPOS.CDIMPOSTONFE = '80')) OR (C_ITEMPROIMPOS.IDUTILBCPMC <> W_S) THEN

                        SELECT SUM(QTITEMPROD * VRPESOLIQUPR)
                          INTO V_TOTAPRENIMPO
                          FROM ITEMPRODUTO IP, PRODUTO PR
                         WHERE IP.CDFILIAL   = P_FILIAL
                           AND IP.NRLANCTONF = P_LANCTONF
                           AND IP.CDPRODUTO  = PR.CDPRODUTO
                           AND (NVL(PR.VRPESOLIQUPR, 0) > 0);

                        IF (V_TOTAPRODENCA <> 0) THEN
                           IF (NVL(C_ITEMPROIMPOS.IDTRATIMPOBCENC, C_ITEMENCARGO.IDENCARGO) = w_A) THEN
                              V_PRODUENCARGO := + (C_ITEMENCARGO.VRITEMENCA/V_TOTAPRENIMPO)*C_ITEMPROIMPOS.PESOTOTALPROD;
                           ELSIF (NVL(C_ITEMPROIMPOS.IDTRATIMPOBCENC, C_ITEMENCARGO.IDENCARGO) = w_D) THEN
                              V_PRODUENCARGO := - (C_ITEMENCARGO.VRITEMENCA/V_TOTAPRENIMPO)*C_ITEMPROIMPOS.PESOTOTALPROD;
                           ELSE
                              V_PRODUENCARGO := 0;
                           END IF;
                        END IF;

                        V_IDVRIMPSTRIB := NULL;
                        BEGIN
                           SELECT CASE COUNT(*) WHEN 0 THEN 'M' ELSE 'R' END
                             INTO V_MAJORAOUREDUZ
                             FROM ITEMPROIMPOS
                            WHERE CDFILIAL = P_FILIAL
                              AND NRLANCTONF = P_LANCTONF
                              AND NRSEQITPROD = C_ITEMPROIMPOS.NRSEQITPROD
                              AND CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO
                              AND NRITPROIMPOS = w_2;
                        EXCEPTION
                           WHEN NO_DATA_FOUND THEN
                              V_MAJORAOUREDUZ := 'M';
                        END;

                        V_VRIMPOSTOST := 0;
                        IF V_MAJORAOUREDUZ = 'R' THEN
                           V_TAXABASECALC := (100 - C_ITEMPROIMPOS.VRPERREDBCIT)/100;
                           V_TAXAALIQUOTA := (C_ITEMPROIMPOS.VRALIQITEM/100);
                        ELSE
                           V_TAXABASECALC :=(100 - NVL(C_ITEMPROIMPOS.VRPERREDBCSTIT, 0))/100; 
                           V_PRODUENCARGO :=  (V_PRODUENCARGO * V_TAXABASECALC); /*Calcular o valor do encargo retirando redução da base para no update abaixo utilize o valor adicionando a majoração*/
                           V_TAXABASECALC := 1 + (C_ITEMPROIMPOS.VRPERREDBCIT)/100;
                           V_TAXAALIQUOTA := (C_ITEMPROIMPOS.VRALIQITEM/100);

                           SELECT NVL(MAX(IDVRIMPSTRIB), 'N')
                             INTO V_IDVRIMPSTRIB
                             FROM ITEMPROIMPOS I, IMPOSTO II
                            WHERE (CDFILIAL     = P_FILIAL)
                              AND (NRLANCTONF   = P_LANCTONF)
                              AND (NRSEQITPROD  = C_ITEMPROIMPOS.NRSEQITPROD)
                              AND (INSTR(V_CDIMPOSTRIB,II.CDIMPOSTO||'_') > 0)
                              AND (I.CDIMPOSTO = II.CDIMPOSTO);

                           IF (C_ITEMPROIMPOS.IDTRIMPSTII <> w_1) AND (NVL(V_IDVRIMPSTRIB,w_N) = w_S) THEN
                              Begin
                                 SELECT NVL(MAX(VRIMPOSTOIT),0)
                                 INTO   V_VRIMPOSTOST
                                 FROM ITEMPROIMPOS I
                                 WHERE (CDFILIAL     = P_FILIAL)                    AND
                                       (NRLANCTONF   = P_LANCTONF)                  AND
                                       (INSTR(V_CDIMPOSTRIB,CDIMPOSTO||'_') > 0)    AND
                                       (NRITPROIMPOS = C_ITEMPROIMPOS.NRITPROIMPOS) AND
                                       (NRSEQITPROD  = C_ITEMPROIMPOS.NRSEQITPROD);
                              Exception
                                 When No_Data_Found Then
                                    V_VRIMPOSTOST := 0;
                              End;
                           END IF;
                        END IF;

                        V_ICMS := 'N';
                        FOR C_ICMS IN (SELECT CDIMPOSTO
                                         FROM IMPOSTONFE N, IMPOSTO I
                                        WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                                          AND N.CDIMPOSTONFE = '00'
                                          AND I.CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO)
                        LOOP
                           V_ICMS := 'S';
                        END LOOP;

                        UPDATE ITEMPROIMPOS
                           SET VRCONTITIMP  = VRCONTITIMP  + (V_PRODUENCARGO * V_TAXABASECALC),
                               VRBASECALCIT = VRBASECALCIT + ((V_PRODUENCARGO * V_TAXABASECALC) / (1 - ((C_ITEMPROIMPOS.VRALIQINTEDEST + C_ITEMPROIMPOS.VRALIQFCP) / 100))),
                               VRIMPOSTOIT  = (VRIMPOSTOIT  + (((V_PRODUENCARGO * V_TAXABASECALC) / (1 - ((C_ITEMPROIMPOS.VRALIQINTEDEST + C_ITEMPROIMPOS.VRALIQFCP) / 100))) * V_TAXAALIQUOTA)) - (((V_VRIMPOSTOST * V_TAXABASECALC) / (1 - ((C_ITEMPROIMPOS.VRALIQINTEDEST + C_ITEMPROIMPOS.VRALIQFCP) / 100))) * V_TAXAALIQUOTA),
                               VRIMPOSTOVISUIT = DECODE(V_IDPERVISIMPSCRE, 'S', (VRIMPOSTOIT  + ((V_PRODUENCARGO * V_TAXABASECALC) * V_TAXAALIQUOTA)) - ((V_VRIMPOSTOST * V_TAXABASECALC) * V_TAXAALIQUOTA),  DECODE(CDFISCALIT , '1', (VRIMPOSTOIT  + ((V_PRODUENCARGO * V_TAXABASECALC) * V_TAXAALIQUOTA)) - ((V_VRIMPOSTOST * V_TAXABASECALC) * V_TAXAALIQUOTA),0)),
                               VRADICFECP  = VRADICFECP  + ROUND((V_PRODUENCARGO * (VRADICALIQFECP / 100) * V_TAXABASECALC),2)
                         WHERE (CDFILIAL     = P_FILIAL)                   AND
                               (NRLANCTONF   = P_LANCTONF)                 AND
                               (NRSEQITPROD  = C_ITEMPROIMPOS.NRSEQITPROD) AND
                               (CDIMPOSTO    = C_ITEMPROIMPOS.CDIMPOSTO)   AND
                               (NRITPROIMPOS = C_ITEMPROIMPOS.NRITPROIMPOS);
                     END IF;

                     /* ROTINA PARA RECALCULAR O DIFERIMENTO DO IMPOSTO */
                     BEGIN
                        SELECT MAX(VRIMPOSTOOPERAIT), MAX(VRPERDIFEREIT)
                          INTO V_VRIMPOSTOOPERAIT, V_VRPERDIFEREIT
                          FROM ITEMPROIMPOS
                         WHERE (CDFILIAL     = P_FILIAL)                    AND
                               (NRLANCTONF   = P_LANCTONF)                  AND
                               (NRSEQITPROD  = C_ITEMPROIMPOS.NRSEQITPROD)  AND
                               (CDIMPOSTO    = C_ITEMPROIMPOS.CDIMPOSTO)    AND
                               (NRITPROIMPOS = C_ITEMPROIMPOS.NRITPROIMPOS) AND
                               (VRPERDIFEREIT <> 0);
                     EXCEPTION
                        When No_Data_Found Then
                           V_VRIMPOSTOOPERAIT := 0; V_VRPERDIFEREIT := 0;
                     END;

                     IF V_VRPERDIFEREIT <> 0 THEN
                        V_VRIMPOSTOOPERAIT := ROUND((V_VRIMPOSTOOPERAIT + ((ROUND(V_PRODUENCARGO, 2) * V_TAXABASECALC) * V_TAXAALIQUOTA)) - ((V_VRIMPOSTOST * V_TAXABASECALC) * V_TAXAALIQUOTA),2);
                        V_VRIMPOSTODIFERIT := ROUND((V_VRIMPOSTOOPERAIT * V_VRPERDIFEREIT/100), 2);

                        UPDATE ITEMPROIMPOS
                           SET VRIMPOSTOOPERAIT = V_VRIMPOSTOOPERAIT,
                               VRIMPOSTODIFERIT = V_VRIMPOSTODIFERIT,
                               VRIMPOSTOIT = (V_VRIMPOSTOOPERAIT - V_VRIMPOSTODIFERIT),
                               VRIMPOSTOVISUIT = (V_VRIMPOSTOOPERAIT - V_VRIMPOSTODIFERIT)
                         WHERE (CDFILIAL     = P_FILIAL)                    AND
                               (NRLANCTONF   = P_LANCTONF)                  AND
                               (NRSEQITPROD  = C_ITEMPROIMPOS.NRSEQITPROD)  AND
                               (CDIMPOSTO    = C_ITEMPROIMPOS.CDIMPOSTO)    AND
                               (NRITPROIMPOS = C_ITEMPROIMPOS.NRITPROIMPOS) AND
                               (VRPERDIFEREIT <> 0);
                     END IF;
                  END IF;
               END LOOP;
            END IF;
         END LOOP;
      END IF;
      /* ROTINA PARA REALIZAR RATEIO DOS ENCARGOS PARAMETRIZADOS POR PESO LÍQUIDO DOS PRODUTOS*/

      /* IMPOSTO GERADO COMO ENCARGO NA ENTRADA */
      IF (NVL(V_IDNFORIGVIAXML, 'N') = 'S') THEN
         FOR C_ITEMENCARGO IN (SELECT IE.CDENCARGO AS CDENCARGO, VRITEMENCA, IDENCARGO,
                                      EN.CDCTBLENTREN, EN.CDCTBLSAIDEN
                                 FROM ITEMENCARGO IE, ENCARGO EN
                                WHERE (IE.CDFILIAL   = P_FILIAL)     AND
                                      (IE.NRLANCTONF = P_LANCTONF)   AND
                                      (IE.VRITEMENCA > 0)            AND
                                      (EN.CDENCARGO  = IE.CDENCARGO) AND
                                      EXISTS (SELECT CDENCARGOIMPXML
                                                FROM IMPOSTO
                                               WHERE IMPOSTO.CDENCARGOIMPXML = IE.CDENCARGO)) LOOP
            V_TOTAPRODENCA := 0;
            FOR C_VRLIQRATEIO IN (SELECT DISTINCT(IP.NRSEQITPROD) AS NRSEQITPROD, (VRTOTAITEM - VRDESCITEM) AS VRLIQUIDO
                                    FROM ITEMPRODUTO IP, ITEMPROIMPOS II
                                    WHERE (IP.CDFILIAL    = P_FILIAL)       AND
                                          (IP.NRLANCTONF  = P_LANCTONF)     AND
                                          (II.CDFILIAL    = IP.CDFILIAL)    AND
                                          (II.NRLANCTONF  = IP.NRLANCTONF)  AND
                                          (II.NRSEQITPROD = IP.NRSEQITPROD) AND
                                          (IP.VRENCARGOIMPXML > 0)          AND
                                          (EXISTS(SELECT BC.CDIMPOSTO
                                                  FROM BASECALC BC
                                                  WHERE (BC.CDENCARGO = C_ITEMENCARGO.CDENCARGO) AND
                                                        (BC.CDIMPOSTO = II.CDIMPOSTO)            AND
                                                        (BC.CDIMPOSTO IN (SELECT B.CDIMPOSTO
                                                                         FROM BASECALC B
                                                                         WHERE B.CDENCARGO = C_ITEMENCARGO.CDENCARGO))))) LOOP

               IF NOT (C_VRLIQRATEIO.VRLIQUIDO IS NULL) THEN
                  V_TOTAPRODENCA := V_TOTAPRODENCA + C_VRLIQRATEIO.VRLIQUIDO;
               END IF;
            END LOOP;
            IF V_TOTAPRODENCA = 0 THEN
               IF (V_IDCONTCONFORIG = 'N') THEN
                  SELECT SUM(VRTOTAITEM - VRDESCITEM)
                  INTO   V_TOTAPRODENCA
                  FROM ITEMPRODUTO IP
                  WHERE (IP.CDFILIAL   = P_FILIAL)   AND
                        (IP.NRLANCTONF = P_LANCTONF) AND
                        (NVL(IP.VRENCARGOIMPXML, 0) > 0);

                  IF NOT V_TOTAPRODENCA IS NULL THEN
                     FOR C_ATUAVRCONT IN (SELECT IP.NRSEQITPROD, (VRTOTAITEM - VRDESCITEM) AS VRLIQUIDO
                                          FROM ITEMPRODUTO IP
                                          WHERE (IP.CDFILIAL    = P_FILIAL) AND
                                                (IP.NRLANCTONF  = P_LANCTONF) AND
                                                (NVL(IP.VRENCARGOIMPXML, 0) > 0)) LOOP

                        IF (C_ITEMENCARGO.IDENCARGO = w_A) THEN
                           V_VRBRUTO  := (C_ITEMENCARGO.VRITEMENCA/V_TOTAPRODENCA);
                        ELSIF (C_ITEMENCARGO.IDENCARGO = w_D) THEN
                           V_VRBRUTO  := - (C_ITEMENCARGO.VRITEMENCA/V_TOTAPRODENCA);
                        ELSE
                           V_VRBRUTO := 0;
                        END IF;

                        IF (C_ITEMENCARGO.CDCTBLSAIDEN IS NULL) THEN
                           V_VRCONTAB := V_VRBRUTO;
                        ELSE
                           V_VRCONTAB := 0;
                        END IF;

                        IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                           UPDATE ITEMPRODUTO
                           SET VRBRUTITEM = TRUNC(VRBRUTITEM + (V_VRBRUTO  * (VRTOTAITEM - VRDESCITEM)),2),
                               VRCONTITEM = TRUNC(VRCONTITEM + (V_VRCONTAB * (VRTOTAITEM - VRDESCITEM)),2)
                           WHERE CDFILIAL    = P_FILIAL   AND
                                 NRLANCTONF  = P_LANCTONF AND
                                 NRSEQITPROD = C_ATUAVRCONT.NRSEQITPROD;
                        ELSE
                           UPDATE ITEMPRODUTO
                           SET VRBRUTITEM = VRBRUTITEM + (V_VRBRUTO  * (VRTOTAITEM - VRDESCITEM)),
                               VRCONTITEM = VRCONTITEM + (V_VRCONTAB * (VRTOTAITEM - VRDESCITEM))
                           WHERE CDFILIAL    = P_FILIAL   AND
                                 NRLANCTONF  = P_LANCTONF AND
                                 NRSEQITPROD = C_ATUAVRCONT.NRSEQITPROD;
                        END IF;
                     END LOOP;
                  END IF;
               END IF;
            ELSE
               IF (V_IDCONTCONFORIG = 'N') THEN
                  FOR C_ATUAVRCONT IN (SELECT DISTINCT(IP.NRSEQITPROD) AS NRSEQITPROD, (VRTOTAITEM - VRDESCITEM) AS VRLIQUIDO
                                       FROM ITEMPRODUTO IP, ITEMPROIMPOS II
                                       WHERE (IP.CDFILIAL    = P_FILIAL)       AND
                                             (IP.NRLANCTONF  = P_LANCTONF)     AND
                                             (II.CDFILIAL    = IP.CDFILIAL)    AND
                                             (II.NRLANCTONF  = IP.NRLANCTONF)  AND
                                             (II.NRSEQITPROD = IP.NRSEQITPROD) AND
                                             (NVL(IP.VRENCARGOIMPXML, 0) > 0)  AND
                                             (EXISTS(SELECT BC.CDIMPOSTO
                                                     FROM BASECALC BC
                                                     WHERE (BC.CDENCARGO = C_ITEMENCARGO.CDENCARGO) AND
                                                           (BC.CDIMPOSTO = II.CDIMPOSTO)            AND
                                                           (BC.CDIMPOSTO IN (SELECT B.CDIMPOSTO
                                                                             FROM BASECALC B
                                                                             WHERE B.CDENCARGO = C_ITEMENCARGO.CDENCARGO))))) LOOP

                     IF (C_ITEMENCARGO.IDENCARGO = w_A) THEN
                        V_VRBRUTO  := (C_ITEMENCARGO.VRITEMENCA/V_TOTAPRODENCA);
                     ELSIF (C_ITEMENCARGO.IDENCARGO = w_D) THEN
                        V_VRBRUTO  := - (C_ITEMENCARGO.VRITEMENCA/V_TOTAPRODENCA);
                     ELSE
                        V_VRBRUTO := 0;
                     END IF;

                     IF (C_ITEMENCARGO.CDCTBLSAIDEN IS NULL) THEN
                        V_VRCONTAB := V_VRBRUTO;
                     ELSE
                        V_VRCONTAB := 0;
                     END IF;

                     IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                        UPDATE ITEMPRODUTO
                        SET VRBRUTITEM = TRUNC(VRBRUTITEM + (V_VRBRUTO  * (VRTOTAITEM - VRDESCITEM)),2),
                            VRCONTITEM = TRUNC(VRCONTITEM + (V_VRCONTAB * (VRTOTAITEM - VRDESCITEM)),2)
                        WHERE CDFILIAL    = P_FILIAL   AND
                              NRLANCTONF  = P_LANCTONF AND
                              NRSEQITPROD = C_ATUAVRCONT.NRSEQITPROD;
                     ELSE
                        UPDATE ITEMPRODUTO
                           SET VRBRUTITEM = VRBRUTITEM + (V_VRBRUTO  * (VRTOTAITEM - VRDESCITEM)),
                               VRCONTITEM = VRCONTITEM + (V_VRCONTAB * (VRTOTAITEM - VRDESCITEM))
                        WHERE CDFILIAL    = P_FILIAL   AND
                              NRLANCTONF  = P_LANCTONF AND
                              NRSEQITPROD = C_ATUAVRCONT.NRSEQITPROD;
                     END IF;
                  END LOOP;
               END IF;

               FOR C_ITEMPROIMPOS IN (SELECT II.NRSEQITPROD,
                                             II.NRITPROIMPOS,
                                             II.CDIMPOSTO,
                                             II.VRPERREDBCIT,
                                             II.VRALIQITEM,
                                             II.VRPARDEDIT,
                                             II.IDTRIMPSTII,
                                             (VRTOTAITEM - VRDESCITEM) AS VRLIQUIDO,
                                             NVL(II.VRALIQINTEDEST, 0) AS VRALIQINTEDEST,
                                             NVL(II.VRALIQFCP, 0) AS VRALIQFCP,
                                             NVL(IP.IDUTILBCPMC, 'N') AS IDUTILBCPMC,
                                             I.CDIMPOSTONFE,
                                             NVL(II.IDVALORINFIT, W_N) AS IDVALORINFIT,
                                             BC.IDTRATIMPOBCENC
                                        FROM ITEMPROIMPOS II, ITEMPRODUTO IP, BASECALC BC, IMPOSTO I
                                       WHERE (II.CDFILIAL = P_FILIAL)
                                         AND (II.NRLANCTONF = P_LANCTONF)
                                         AND (IP.CDFILIAL = P_FILIAL)
                                         AND (IP.NRLANCTONF = P_LANCTONF)
                                         AND (IP.NRSEQITPROD = II.NRSEQITPROD)
                                         AND (BC.CDIMPOSTO = II.CDIMPOSTO)
                                         AND (II.CDIMPOSTO = I.CDIMPOSTO)
                                         AND (BC.CDENCARGO = C_ITEMENCARGO.CDENCARGO)
                                         AND (NVL(IP.VRENCARGOIMPXML, 0) > 0)
                                       ORDER BY II.NRSEQITPROD,
                                             II.NRITPROIMPOS,
                                             II.CDIMPOSTO) LOOP

                  /*IMPOSTOS QUE NÃO FORAM GRAVADOS DE ACORDO COM A ORIGEM NÃO DEVEM EFETUAR O CÁLCULO*/
                  IF C_ITEMPROIMPOS.IDVALORINFIT <> W_S THEN
                     IF NOT((C_ITEMPROIMPOS.IDUTILBCPMC = W_S) AND (C_ITEMPROIMPOS.CDIMPOSTONFE = '80')) OR (C_ITEMPROIMPOS.IDUTILBCPMC <> W_S) THEN

                        SELECT SUM(VRTOTAITEM - VRDESCITEM)
                          INTO V_TOTAPRENIMPO
                          FROM ITEMPRODUTO IP
                         WHERE IP.CDFILIAL   = P_FILIAL
                           AND IP.NRLANCTONF = P_LANCTONF
                           AND (NVL(IP.VRENCARGOIMPXML, 0) > 0);

                        IF (V_TOTAPRODENCA <> 0) THEN
                           IF (NVL(C_ITEMPROIMPOS.IDTRATIMPOBCENC, C_ITEMENCARGO.IDENCARGO) = w_A) THEN
                              V_PRODUENCARGO := +(C_ITEMENCARGO.VRITEMENCA/V_TOTAPRENIMPO)*C_ITEMPROIMPOS.VRLIQUIDO;
                           ELSIF (NVL(C_ITEMPROIMPOS.IDTRATIMPOBCENC, C_ITEMENCARGO.IDENCARGO) = w_D) THEN
                              V_PRODUENCARGO := -(C_ITEMENCARGO.VRITEMENCA/V_TOTAPRENIMPO)*C_ITEMPROIMPOS.VRLIQUIDO;
                           ELSE
                              V_PRODUENCARGO := 0;
                           END IF;
                        END IF;

                        V_IDVRIMPSTRIB := null;
                        BEGIN
                           SELECT CASE COUNT(*) WHEN 0 THEN 'M' ELSE 'R' END
                             INTO V_MAJORAOUREDUZ
                             FROM ITEMPROIMPOS
                            WHERE CDFILIAL = P_FILIAL
                              AND NRLANCTONF = P_LANCTONF
                              AND NRSEQITPROD = C_ITEMPROIMPOS.NRSEQITPROD
                              AND CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO
                              AND NRITPROIMPOS = w_2;
                        EXCEPTION
                           WHEN NO_DATA_FOUND THEN
                              V_MAJORAOUREDUZ := 'M';
                        END;

                        V_VRIMPOSTOST := 0;
                        IF V_MAJORAOUREDUZ = 'R' THEN
                           V_TAXABASECALC := (100 - C_ITEMPROIMPOS.VRPERREDBCIT)/100;
                           V_TAXAALIQUOTA := (C_ITEMPROIMPOS.VRALIQITEM/100);
                        ELSE
                           V_TAXABASECALC := 1 + (C_ITEMPROIMPOS.VRPERREDBCIT)/100;
                           V_TAXAALIQUOTA := (C_ITEMPROIMPOS.VRALIQITEM/100);

                           SELECT NVL(MAX(IDVRIMPSTRIB), 'N')
                             INTO V_IDVRIMPSTRIB
                             FROM ITEMPROIMPOS I, IMPOSTO II
                            WHERE (CDFILIAL     = P_FILIAL)
                              AND (NRLANCTONF   = P_LANCTONF)
                              AND (NRSEQITPROD  = C_ITEMPROIMPOS.NRITPROIMPOS)
                              AND (INSTR(V_CDIMPOSTRIB,II.CDIMPOSTO||'_') > 0)
                              AND (I.CDIMPOSTO = II.CDIMPOSTO);

                           IF (C_ITEMPROIMPOS.IDTRIMPSTII <> w_1) AND (NVL(V_IDVRIMPSTRIB,w_N) = w_S) THEN
                              Begin
                                 SELECT NVL(MAX(VRIMPOSTOIT),0)
                                 INTO   V_VRIMPOSTOST
                                 FROM ITEMPROIMPOS I
                                 WHERE (CDFILIAL     = P_FILIAL)                   AND
                                       (NRLANCTONF   = P_LANCTONF)                 AND
                                       (INSTR(V_CDIMPOSTRIB,CDIMPOSTO||'_') > 0)   AND
                                       (NRITPROIMPOS = C_ITEMPROIMPOS.NRITPROIMPOS);
                              Exception
                                 When No_Data_Found Then
                                    V_VRIMPOSTOST := 0;
                              End;
                           END IF;
                        END IF;

                        V_ICMS := 'N';
                        FOR C_ICMS IN (SELECT CDIMPOSTO
                                         FROM IMPOSTONFE N, IMPOSTO I
                                        WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                                          AND N.CDIMPOSTONFE = '00'
                                          AND I.CDIMPOSTO = C_ITEMPROIMPOS.CDIMPOSTO)
                        LOOP
                           V_ICMS := 'S';
                        END LOOP;

                        UPDATE ITEMPROIMPOS
                           SET VRCONTITIMP  = VRCONTITIMP  + (V_PRODUENCARGO * V_TAXABASECALC),
                               VRBASECALCIT = VRBASECALCIT + ((V_PRODUENCARGO * V_TAXABASECALC) / (1 - ((C_ITEMPROIMPOS.VRALIQINTEDEST + C_ITEMPROIMPOS.VRALIQFCP) / 100))),
                               VRIMPOSTOIT  = (VRIMPOSTOIT  + (((V_PRODUENCARGO * V_TAXABASECALC) / (1 - ((C_ITEMPROIMPOS.VRALIQINTEDEST + C_ITEMPROIMPOS.VRALIQFCP) / 100))) * V_TAXAALIQUOTA)) - (((V_VRIMPOSTOST * V_TAXABASECALC) / (1 - ((C_ITEMPROIMPOS.VRALIQINTEDEST + C_ITEMPROIMPOS.VRALIQFCP) / 100))) * V_TAXAALIQUOTA),
                               VRIMPOSTOVISUIT = DECODE(V_IDPERVISIMPSCRE, 'S', (VRIMPOSTOIT  + ((V_PRODUENCARGO * V_TAXABASECALC) * V_TAXAALIQUOTA)) - ((V_VRIMPOSTOST * V_TAXABASECALC) * V_TAXAALIQUOTA),  DECODE(CDFISCALIT , '1', (VRIMPOSTOIT  + ((V_PRODUENCARGO * V_TAXABASECALC) * V_TAXAALIQUOTA)) - ((V_VRIMPOSTOST * V_TAXABASECALC) * V_TAXAALIQUOTA),0)),
                               VRADICFECP  = VRADICFECP  + ROUND((V_PRODUENCARGO * (VRADICALIQFECP / 100) * V_TAXABASECALC),2)
                         WHERE (CDFILIAL     = P_FILIAL)                   AND
                               (NRLANCTONF   = P_LANCTONF)                 AND
                               (NRSEQITPROD  = C_ITEMPROIMPOS.NRSEQITPROD) AND
                               (CDIMPOSTO    = C_ITEMPROIMPOS.CDIMPOSTO)   AND
                               (NRITPROIMPOS = C_ITEMPROIMPOS.NRITPROIMPOS);
                     END IF;

                     /* ROTINA PARA RECALCULAR O DIFERIMENTO DO IMPOSTO */
                     BEGIN
                        SELECT MAX(VRIMPOSTOOPERAIT), MAX(VRPERDIFEREIT)
                          INTO V_VRIMPOSTOOPERAIT, V_VRPERDIFEREIT
                          FROM ITEMPROIMPOS
                         WHERE (CDFILIAL     = P_FILIAL)                    AND
                               (NRLANCTONF   = P_LANCTONF)                  AND
                               (NRSEQITPROD  = C_ITEMPROIMPOS.NRSEQITPROD)  AND
                               (CDIMPOSTO    = C_ITEMPROIMPOS.CDIMPOSTO)    AND
                               (NRITPROIMPOS = C_ITEMPROIMPOS.NRITPROIMPOS) AND
                               (VRPERDIFEREIT <> 0);
                     EXCEPTION
                        When No_Data_Found Then
                           V_VRIMPOSTOOPERAIT := 0; V_VRPERDIFEREIT := 0;
                     END;

                     IF V_VRPERDIFEREIT <> 0 THEN
                        V_VRIMPOSTOOPERAIT := ROUND((V_VRIMPOSTOOPERAIT + ((ROUND(V_PRODUENCARGO, 2) * V_TAXABASECALC) * V_TAXAALIQUOTA)) - ((V_VRIMPOSTOST * V_TAXABASECALC) * V_TAXAALIQUOTA),2);
                        V_VRIMPOSTODIFERIT := ROUND((V_VRIMPOSTOOPERAIT * V_VRPERDIFEREIT/100), 2);

                        UPDATE ITEMPROIMPOS
                           SET VRIMPOSTOOPERAIT = V_VRIMPOSTOOPERAIT,
                               VRIMPOSTODIFERIT = V_VRIMPOSTODIFERIT,
                               VRIMPOSTOIT = (V_VRIMPOSTOOPERAIT - V_VRIMPOSTODIFERIT),
                               VRIMPOSTOVISUIT = (V_VRIMPOSTOOPERAIT - V_VRIMPOSTODIFERIT)
                         WHERE (CDFILIAL     = P_FILIAL)                    AND
                               (NRLANCTONF   = P_LANCTONF)                  AND
                               (NRSEQITPROD  = C_ITEMPROIMPOS.NRSEQITPROD)  AND
                               (CDIMPOSTO    = C_ITEMPROIMPOS.CDIMPOSTO)    AND
                               (NRITPROIMPOS = C_ITEMPROIMPOS.NRITPROIMPOS) AND
                               (VRPERDIFEREIT <> 0);
                     END IF;
                  END IF;
               END LOOP;
            END IF;

         END LOOP;
      END IF;

      /* IMPOSTO GERADO COMO ENCARGO NA ENTRADA */

      FOR C_PRODUTO IN (SELECT IP.NRSEQITPROD AS NRSEQITPROD,
                               II.CDIMPOSTO,
                               VRPERREDBCIT,
                               VRALIQITEM,
                               VRPARDEDIT,
                               CDFISCALIT,
                               VRIMPOSTOIT,
                               IDTRATIMPO,
                               IM.IDIMPORECUP,
                               IM.CDCCTBLPASS,
                               IM.CDCCTBLATIV,
                               NRITPROIMPOS,
                               IDTRIMPSTII,
                               IM.IDTIPCONTAB,
                               II.VRBASECALCIT,
                               NVL(II.IDVALORINFIT, W_N) AS IDVALORINFIT,
                               IP.IDUTILBCPMC,
                               IM.CDIMPOSTONFE,
                               IP.CDPRODUTO,
                               PR.CDARVPROD,
                               IP.IDORIGEMPROD,
                               II.VRADICALIQFECP
                          FROM ITEMPRODUTO IP, ITEMPROIMPOS II, IMPOSTO IM, PRODUTO PR
                         WHERE (IP.CDFILIAL = P_FILIAL)
                           AND (IP.NRLANCTONF = P_LANCTONF)
                           AND (II.CDFILIAL = IP.CDFILIAL)
                           AND (II.NRLANCTONF = IP.NRLANCTONF)
                           AND (IM.CDIMPOSTO = II.CDIMPOSTO)
                           AND (II.NRITPROIMPOS = w_1)
                           AND (IP.IDUTILBCPMC <> 'S')
                           AND (II.NRSEQITPROD = IP.NRSEQITPROD)
                           AND (IP.CDPRODUTO = PR.CDPRODUTO)
                         ORDER BY NRSEQITPROD,
                               CDIMPOSTO) LOOP

         IF (C_PRODUTO.IDVALORINFIT <> W_S) THEN
            IF NOT((C_PRODUTO.IDUTILBCPMC = W_S) AND (C_PRODUTO.CDIMPOSTONFE = '80')) OR (C_PRODUTO.IDUTILBCPMC <> W_S) THEN
               V_IDIMPOBCALTPOP := NULL;

               SELECT TO_CHAR(MAX('S')) , NVL(SUM(VRIMPOSTOIT),0) AS VRIMPOBCALC
                 INTO   V_IDIMPOBCALTPOP, V_TOTAIMPBCALC
                 FROM ITEMPRODUTO IP, ITEMPROIMPOS II, BASECALCTPOPER BC , IMPOSTO I
                WHERE (BC.CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)
                  AND (IP.CDFILIAL     = P_FILIAL)
                  AND (IP.NRLANCTONF   = P_LANCTONF)
                  AND (II.NRLANCTONF   = IP.NRLANCTONF)
                  AND (II.CDFILIAL     = IP.CDFILIAL)
                  AND (IP.NRSEQITPROD  = C_PRODUTO.NRSEQITPROD)
                  AND (II.NRSEQITPROD  = C_PRODUTO.NRSEQITPROD)
                  AND (II.NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS)
                  AND ((SUBSTR(IP.CDSITUTRIBPR,2,2) = BC.CDCSTIMPOTPOP)  OR (BC.CDCSTIMPOTPOP  IS NULL))
                  AND ((SUBSTR(IP.CDFISOPEITEM,2,4) = BC.CDCFOPIMPOTPOP) OR (BC.CDCFOPIMPOTPOP IS NULL))
                  AND ((C_PRODUTO.CDFISCALIT        = BC.CDFISCIMPOTPOP) OR (BC.CDFISCIMPOTPOP IS NULL))
                  AND (BC.IDENTRSAIDOP = 'S')
                  AND (BC.CDTIPOOPER = P_TIPOOPER)
                  AND (II.CDIMPOSTO = BC.CDIMPOBCALC)
                  AND (BC.CDIMPOBCALC = I.CDIMPOSTO)
                  AND (NVL(BC.IDTRATIMPOBCTPOP, I.IDTRATIMPO) <> 'D')
                  AND ((BC.CDEMPRESABCTP = P_EMPRESA) OR (BC.CDEMPRESABCTP IS NULL));

               IF V_IDIMPOBCALTPOP IS NULL THEN
                  SELECT NVL(SUM(VRIMPOSTOIT),0) AS VRIMPOBCALC
                    INTO   V_TOTAIMPBCALC
                    FROM ITEMPRODUTO IP, ITEMPROIMPOS II, BASECALC BC, IMPOSTO I
                   WHERE (BC.CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)    AND
                         (IP.CDFILIAL     = P_FILIAL)               AND
                         (IP.NRLANCTONF   = P_LANCTONF)             AND
                         (II.NRLANCTONF   = IP.NRLANCTONF)          AND
                         (II.CDFILIAL     = IP.CDFILIAL)            AND
                         (IP.NRSEQITPROD  = C_PRODUTO.NRSEQITPROD)  AND
                         (II.NRSEQITPROD  = C_PRODUTO.NRSEQITPROD)  AND
                         (II.NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS) AND
                         ((SUBSTR(IP.CDSITUTRIBPR,2,2) = BC.CDCSTIMPO)  OR (BC.CDCSTIMPO  IS NULL)) AND
                         ((SUBSTR(IP.CDFISOPEITEM,2,4) = BC.CDCFOPIMPO) OR (BC.CDCFOPIMPO IS NULL)) AND
                         ((C_PRODUTO.CDFISCALIT        = BC.CDFISCIMPO) OR (BC.CDFISCIMPO IS NULL)) AND
                         (II.CDIMPOSTO = BC.CDIMPOBCALC) AND
                         (BC.IDTIPOBCALC   = w_I)AND
                         (BC.CDIMPOBCALC = I.CDIMPOSTO)  AND
                         (NVL(BC.IDTRATIMPOBC, I.IDTRATIMPO) <> 'D') AND
                         ((BC.CDEMPRESABC = P_EMPRESA) OR (BC.CDEMPRESABC IS NULL));
               END IF;

               V_IDIMBCALTPOPDE := NULL;

               SELECT TO_CHAR(MAX('S')), (NVL(SUM(VRIMPOSTOIT),0)*-1) AS VRIMPOBCALC
                 INTO V_IDIMBCALTPOPDE, V_TOTAIMPBCDES
                 FROM ITEMPRODUTO IP, ITEMPROIMPOS II, BASECALCTPOPER BC, IMPOSTO I
                WHERE (BC.CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)
                  AND (IP.CDFILIAL     = P_FILIAL)
                  AND (IP.NRLANCTONF   = P_LANCTONF)
                  AND (II.NRLANCTONF   = IP.NRLANCTONF)
                  AND (II.CDFILIAL     = IP.CDFILIAL)
                  AND (IP.NRSEQITPROD  = C_PRODUTO.NRSEQITPROD)
                  AND (II.NRSEQITPROD  = C_PRODUTO.NRSEQITPROD)
                  AND (II.NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS)
                  AND ((SUBSTR(IP.CDSITUTRIBPR,2,2) = BC.CDCSTIMPOTPOP)  OR (BC.CDCSTIMPOTPOP  IS NULL))
                  AND ((SUBSTR(IP.CDFISOPEITEM,2,4) = BC.CDCFOPIMPOTPOP) OR (BC.CDCFOPIMPOTPOP IS NULL))
                  AND ((C_PRODUTO.CDFISCALIT        = BC.CDFISCIMPOTPOP) OR (BC.CDFISCIMPOTPOP IS NULL))
                  AND (BC.IDENTRSAIDOP = 'S')
                  AND (BC.CDTIPOOPER = P_TIPOOPER)
                  AND (II.CDIMPOSTO = BC.CDIMPOBCALC)
                  AND (BC.CDIMPOBCALC = I.CDIMPOSTO)
                  AND (NVL(BC.IDTRATIMPOBCTPOP, I.IDTRATIMPO) = 'D')
                  AND ((BC.CDEMPRESABCTP = P_EMPRESA) OR (BC.CDEMPRESABCTP IS NULL));

               IF V_IDIMBCALTPOPDE IS NULL THEN

                  SELECT (NVL(SUM(VRIMPOSTOIT),0)*-1) AS VRIMPOBCALC INTO V_TOTAIMPBCDES
                    FROM ITEMPRODUTO IP, ITEMPROIMPOS II, BASECALC BC, IMPOSTO I
                   WHERE (BC.CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)    AND
                         (IP.CDFILIAL     = P_FILIAL)               AND
                         (IP.NRLANCTONF   = P_LANCTONF)             AND
                         (II.NRLANCTONF   = IP.NRLANCTONF)          AND
                         (II.CDFILIAL     = IP.CDFILIAL)            AND
                         (IP.NRSEQITPROD  = C_PRODUTO.NRSEQITPROD)  AND
                         (II.NRSEQITPROD  = C_PRODUTO.NRSEQITPROD)  AND
                         (II.NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS) AND
                         ((SUBSTR(IP.CDSITUTRIBPR,2,2) = BC.CDCSTIMPO)  OR (BC.CDCSTIMPO  IS NULL)) AND
                         ((SUBSTR(IP.CDFISOPEITEM,2,4) = BC.CDCFOPIMPO) OR (BC.CDCFOPIMPO IS NULL)) AND
                         ((C_PRODUTO.CDFISCALIT        = BC.CDFISCIMPO) OR (BC.CDFISCIMPO IS NULL)) AND
                         (II.CDIMPOSTO = BC.CDIMPOBCALC) AND
                         (BC.IDTIPOBCALC   = 'I')        AND
                         (BC.CDIMPOBCALC = I.CDIMPOSTO)  AND
                         (NVL(BC.IDTRATIMPOBC, I.IDTRATIMPO) = 'D') AND
                         ((BC.CDEMPRESABC = P_EMPRESA) OR (BC.CDEMPRESABC IS NULL));
               END IF;

               V_VRIMPOSTO := C_PRODUTO.VRIMPOSTOIT;

               /*IMPOSTO PARA SUBSTITUIÇÃO TRIBUTARIA*/
               V_CDIMPOSTRIB  := null;
               V_IDVRIMPSTRIB := null;
               FOR C_ICMSST IN (SELECT CDIMPOSTO
                                  FROM IMPOSTO
                                 WHERE CDIMPOSTRIB = C_PRODUTO.CDIMPOSTO)
               LOOP
                  V_CDIMPOSTRIB := V_CDIMPOSTRIB||C_ICMSST.CDIMPOSTO||'_';
               END LOOP;

               V_VRIMPOSTOST := 0;
               /*Só irá fazer o cálculo de outro imposto compondo a base de cálculo,
                 se o valor do mesmo não estiver zerado OU
                 se for o imposto de st, pois o icms pode ter sido recalculado(por ter alguem compondo sua bc)
                 e o imposto st precisa retirar o valor final do st*/

               IF (NOT(V_TOTAIMPBCALC IS NULL) OR (V_TOTAIMPBCALC <> 0)) OR
                  (NOT(V_TOTAIMPBCDES IS NULL) OR (V_TOTAIMPBCDES <> 0)) OR
                  (V_CDIMPOSTRIB IS NOT NULL) THEN

                  IF V_CDIMPOSTRIB IS NULL THEN
                     V_TAXABASECALC := (100 - C_PRODUTO.VRPERREDBCIT)/100;
                     V_TAXAALIQUOTA := (C_PRODUTO.VRALIQITEM/100);
                     V_VRIMPOSTO    := V_VRIMPOSTO + (((V_TOTAIMPBCALC+V_TOTAIMPBCDES) * V_TAXABASECALC) * V_TAXAALIQUOTA);

                     UPDATE ITEMPROIMPOS
                        SET VRBASECALCIT = VRBASECALCIT + ((V_TOTAIMPBCALC+V_TOTAIMPBCDES) * V_TAXABASECALC),
                            VRIMPOSTOIT  = ((VRBASECALCIT + ((V_TOTAIMPBCALC+V_TOTAIMPBCDES) * V_TAXABASECALC)) * V_TAXAALIQUOTA),
                            --VRADICFECP   = ROUND(NVL(VRADICFECP,0)   + (((V_TOTAIMPBCALC+V_TOTAIMPBCDES) * V_TAXABASECALC) * (NVL(VRADICALIQFECP,0)/100)), 2),
                            VRIMPOSTOVISUIT = DECODE(V_IDPERVISIMPSCRE, 'S', ((VRBASECALCIT + ((V_TOTAIMPBCALC+V_TOTAIMPBCDES) * V_TAXABASECALC)) * V_TAXAALIQUOTA), DECODE(CDFISCALIT, '1', ((VRBASECALCIT + ((V_TOTAIMPBCALC+V_TOTAIMPBCDES) * V_TAXABASECALC)) * V_TAXAALIQUOTA), 0))
                      WHERE (CDFILIAL     = P_FILIAL)              AND
                            (NRLANCTONF   = P_LANCTONF)            AND
                            (NRSEQITPROD  = C_PRODUTO.NRSEQITPROD) AND
                            (CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)   AND
                            (NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS);

                     /*Calcular o fecp novamente caso algum imposto componha a base de cálculo*/
                     UPDATE ITEMPROIMPOS
                        SET VRADICFECP    = ROUND((VRBASECALCIT * (NVL(VRADICALIQFECP,0)/100)), 2)
                      WHERE (CDFILIAL     = P_FILIAL)              AND
                            (NRLANCTONF   = P_LANCTONF)            AND
                            (NRSEQITPROD  = C_PRODUTO.NRSEQITPROD) AND
                            (CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)   AND
                            (NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS);

                     /* ROTINA PARA RECALCULAR O DIFERIMENTO DO IMPOSTO */
                     BEGIN
                        SELECT MAX(VRIMPOSTOOPERAIT), MAX(VRPERDIFEREIT)
                          INTO V_VRIMPOSTOOPERAIT, V_VRPERDIFEREIT
                          FROM ITEMPROIMPOS
                         WHERE (CDFILIAL     = P_FILIAL)               AND
                               (NRLANCTONF   = P_LANCTONF)             AND
                               (NRSEQITPROD  = C_PRODUTO.NRSEQITPROD)  AND
                               (CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)    AND
                               (NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS) AND
                               (VRPERDIFEREIT <> 0);
                     EXCEPTION
                        When No_Data_Found Then
                           V_VRIMPOSTOOPERAIT := 0; V_VRPERDIFEREIT := 0;
                     END;

                     IF V_VRPERDIFEREIT <> 0 THEN
                        V_VRIMPOSTOOPERAIT := ROUND((V_VRIMPOSTOOPERAIT + ((ROUND((V_TOTAIMPBCALC+V_TOTAIMPBCDES), 2) * V_TAXABASECALC) * V_TAXAALIQUOTA)),2);
                        V_VRIMPOSTODIFERIT := ROUND((V_VRIMPOSTOOPERAIT * V_VRPERDIFEREIT/100), 2);

                        UPDATE ITEMPROIMPOS
                           SET VRIMPOSTOOPERAIT = V_VRIMPOSTOOPERAIT,
                               VRIMPOSTODIFERIT = V_VRIMPOSTODIFERIT,
                               VRIMPOSTOIT = (V_VRIMPOSTOOPERAIT - V_VRIMPOSTODIFERIT),
                               VRIMPOSTOVISUIT = (V_VRIMPOSTOOPERAIT - V_VRIMPOSTODIFERIT)
                         WHERE (CDFILIAL     = P_FILIAL)               AND
                               (NRLANCTONF   = P_LANCTONF)             AND
                               (NRSEQITPROD  = C_PRODUTO.NRSEQITPROD)  AND
                               (CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)    AND
                               (NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS) AND
                               (VRPERDIFEREIT <> 0);
                     END IF;
                  ELSE
                     V_VRIMPOSST   := 0;
                     V_VRIMPOSTOST := 0;
                     V_VRADICFECPSTAUX := 0;
                     V_VRADICFECPST    := 0;

                     FOR C_SUBSTRIB IN (SELECT NVL(IDVRIMPSTRIB, 'N') IDVRIMPSTRIB, I.CDIMPOSTO
                                          FROM ITEMPROIMPOS I, IMPOSTO II
                                         WHERE (CDFILIAL     = P_FILIAL)
                                           AND (NRLANCTONF   = P_LANCTONF)
                                           AND (NRSEQITPROD  = C_PRODUTO.NRSEQITPROD)
                                           AND (NRITPROIMPOS = '1')
                                           AND (INSTR(V_CDIMPOSTRIB,II.CDIMPOSTO||'_') > 0)
                                           AND (I.CDIMPOSTO = II.CDIMPOSTO))
                     LOOP
                        IF (C_SUBSTRIB.IDVRIMPSTRIB = w_S) THEN
                           Begin
                              SELECT NVL(ROUND(MAX(VRIMPOSTOIT), 2),0), NVL(ROUND(MAX(VRBASECALCIT), 2),0), NVL(ROUND(MAX(VRADICFECP), 2),0)
                              INTO   V_VRIMPOSST, V_VRBASEICMS, V_VRADICFECPSTAUX
                              FROM ITEMPROIMPOS I
                              WHERE (CDFILIAL     = P_FILIAL)                   AND
                                    (NRLANCTONF   = P_LANCTONF)                 AND
                                    (NRSEQITPROD  = C_PRODUTO.NRSEQITPROD)  AND
                                    (CDIMPOSTO    = C_SUBSTRIB.CDIMPOSTO)       AND
                                    (INSTR(V_CDIMPOSTRIB,CDIMPOSTO||'_') > 0)   AND
                                    (NRITPROIMPOS = w_1);
                           Exception
                              When No_Data_Found Then
                                 V_VRIMPOSST := 0;
                                 V_VRBASEICMS := 0;
                                 V_VRADICFECPSTAUX := 0;
                           End;
                        ELSE
                           V_VRIMPOSST := 0;
                           V_VRBASEICMS := 0;
                           V_VRADICFECPSTAUX := 0;
                        END IF;

                        /*198639, 200299*/
                        IF V_VRBASEICMS > 0 THEN
                           DELETE ALIQTEMP
                            WHERE NRALIQTEMP = V_ALIQTEMP;

                           /* Verifica grupo fiscal */
                           SELECT MAX(IDGRUPFISSRV)
                             INTO V_UTGRUPFISCS
                             FROM IMPOSTO
                            WHERE CDIMPOSTO = C_PRODUTO.CDIMPOSTO;

                           IF V_UTGRUPFISCS = 'S' THEN
                              V_CDGRPFISCSV := NULL;
                              SELECT MAX(CDGRUPOFISC)
                                INTO V_CDGRPFISCSV
                                FROM SERVCLIE SC, SERVICO S
                               WHERE SC.CDFILIAL   = V_CDFILIEMIT AND
                                    SC.CDCLIENTE  = P_CLIENTE    AND
                                    SC.CDFILIAL   = S.CDFILIAL   AND
                                    SC.CDSERVFILI = S.CDSERVFILI AND
                                    S.CDPRODUTO   = C_PRODUTO.CDPRODUTO;

                              IF V_CDGRPFISCSV IS NULL THEN
                                 SELECT MAX(CDGRUPOFISC)
                                   INTO V_CDGRPFISCSV
                                   FROM CLIENFILIAL
                                 WHERE CDFILIAL   = V_CDFILIEMIT AND
                                      CDCLIENTE  = P_CLIENTE;
                              END IF;

                              CONSULTA_ALIQUOTA(C_PRODUTO.CDIMPOSTO, w_S, P_EMPRESA, C_PRODUTO.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_VRBASEICMS, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRPFISCSV, P_TIPOOPER,
                                                NULL, NULL, NULL, NULL, NULL, NULL, C_PRODUTO.IDORIGEMPROD);

                           ELSE
                              CONSULTA_ALIQUOTA(C_PRODUTO.CDIMPOSTO, w_S, P_EMPRESA, C_PRODUTO.CDARVPROD, P_INSCESTA, V_PAISORIG,
                                                V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_VRBASEICMS, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_TIPOOPER,
                                                NULL, NULL, NULL, NULL, NULL, NULL, C_PRODUTO.IDORIGEMPROD);

                           END IF;

                           BEGIN
                              SELECT NVL(MAX(VRALIQICMSCBSP),0)
                                INTO V_VRALIQICMSCBSP
                                FROM ALIQTEMP
                               WHERE (NRALIQTEMP = V_ALIQTEMP);
                           EXCEPTION
                              WHEN NO_DATA_FOUND THEN
                                 V_VRALIQICMSCBSP := 0;
                           END;

                           IF V_VRALIQICMSCBSP > 0 THEN
                              V_VRIMPOSST := V_VRBASEICMS * (V_VRALIQICMSCBSP/100);
                           END IF;

                           DELETE ALIQTEMP
                            WHERE NRALIQTEMP = V_ALIQTEMP;
                        END IF;
                        /*198639, 200299*/
                        V_VRIMPOSTOST  := V_VRIMPOSTOST + V_VRIMPOSST;
                        V_VRADICFECPST := V_VRADICFECPST + V_VRADICFECPSTAUX;
                     END LOOP;

                     V_TAXABASECALC := 1 + (C_PRODUTO.VRPERREDBCIT)/100;
                     V_TAXAALIQUOTA := (C_PRODUTO.VRALIQITEM/100);
                     V_VRIMPOSTO := ((C_PRODUTO.VRBASECALCIT+ ((V_TOTAIMPBCALC+V_TOTAIMPBCDES) * V_TAXABASECALC)) * V_TAXAALIQUOTA);

                     IF V_VRIMPOSTOST > V_VRIMPOSTO THEN
                        UPDATE ITEMPROIMPOS
                        SET VRBASECALCIT = VRBASECALCIT + ((V_TOTAIMPBCALC+V_TOTAIMPBCDES) * V_TAXABASECALC),
                            VRIMPOSTOIT  = 0,
                            VRIMPOSTOVISUIT = 0
                        WHERE (CDFILIAL     = P_FILIAL)              AND
                              (NRLANCTONF   = P_LANCTONF)            AND
                              (NRSEQITPROD  = C_PRODUTO.NRSEQITPROD) AND
                              (CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)   AND
                              (NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS);
                        V_VRIMPOSTO := 0;
                     ELSE
                        UPDATE ITEMPROIMPOS
                           SET VRBASECALCIT = VRBASECALCIT + ((V_TOTAIMPBCALC+V_TOTAIMPBCDES) * V_TAXABASECALC),
                               VRIMPOSTOIT  = V_VRIMPOSTO - V_VRIMPOSTOST,
                               VRIMPOSTOVISUIT = DECODE(V_IDPERVISIMPSCRE, 'S', V_VRIMPOSTO - V_VRIMPOSTOST, DECODE(CDFISCALIT, '1', V_VRIMPOSTO - V_VRIMPOSTOST, 0))
                         WHERE (CDFILIAL     = P_FILIAL)              AND
                               (NRLANCTONF   = P_LANCTONF)            AND
                               (NRSEQITPROD  = C_PRODUTO.NRSEQITPROD) AND
                               (CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)   AND
                               (NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS);
                        V_VRIMPOSTO := V_VRIMPOSTO - V_VRIMPOSTOST;

                        IF (V_IDCONTCONFORIG = 'N') THEN
                           UPDATE ITEMPRODUTO
                              SET VRBRUTITEM = VRBRUTITEM + V_VRIMPOSTO,
                                  VRCONTITEM = VRCONTITEM + V_VRIMPOSTO
                            WHERE CDFILIAL = P_FILIAL
                              AND NRLANCTONF = P_LANCTONF
                              AND NRSEQITPROD = C_PRODUTO.NRSEQITPROD;
                        END IF;
                     END IF;
                     /*RECALCULAR O VALOR DO FECP DO ST CASO EXISTA PARA O ICMS ST*/
                     IF (C_PRODUTO.VRADICALIQFECP IS NOT NULL) AND (C_PRODUTO.VRADICALIQFECP > 0) THEN
                        V_VRADICFECP := ((C_PRODUTO.VRBASECALCIT + ((V_TOTAIMPBCALC+V_TOTAIMPBCDES) * V_TAXABASECALC)) * (C_PRODUTO.VRADICALIQFECP/100));
                        /*Se o valor do fecp do icms for maior que o valor do fecp do icms st, o valor do fecp st será zerado*/
                        IF V_VRADICFECPST > V_VRADICFECP THEN
                           UPDATE ITEMPROIMPOS
                              SET VRADICFECP = 0
                           WHERE (CDFILIAL     = P_FILIAL)              AND
                                 (NRLANCTONF   = P_LANCTONF)            AND
                                 (NRSEQITPROD  = C_PRODUTO.NRSEQITPROD) AND
                                 (CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)   AND
                                 (NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS);
                           V_VRADICFECP := 0;
                        ELSE
                         /*Se o valor do fecp do icms for menor ou igual o valor do fecp do icms st, o valor do fecp st será calculado abatendo o valor do fecp do icms*/
                           UPDATE ITEMPROIMPOS
                              SET VRADICFECP  = V_VRADICFECP - V_VRADICFECPST
                            WHERE (CDFILIAL     = P_FILIAL)              AND
                                  (NRLANCTONF   = P_LANCTONF)            AND
                                  (NRSEQITPROD  = C_PRODUTO.NRSEQITPROD) AND
                                  (CDIMPOSTO    = C_PRODUTO.CDIMPOSTO)   AND
                                  (NRITPROIMPOS = C_PRODUTO.NRITPROIMPOS);
                           V_VRADICFECP := V_VRADICFECP - V_VRADICFECPST;

                           IF (V_IDCONTCONFORIG = 'N') THEN
                              UPDATE ITEMPRODUTO
                                 SET VRBRUTITEM = VRBRUTITEM + V_VRADICFECP,
                                     VRCONTITEM = VRCONTITEM + V_VRADICFECP
                               WHERE CDFILIAL = P_FILIAL
                                 AND NRLANCTONF = P_LANCTONF
                                 AND NRSEQITPROD = C_PRODUTO.NRSEQITPROD;
                           END IF;
                        END IF;
                     END IF;
                  END IF;
               END IF;
            END IF;
         END IF;
      END LOOP;

      IF V_IDOPERDEVONF = w_S THEN
         V_SEQUIMPOSTNF := w_01;

         IF (V_IDOPERDEVONF = w_S AND V_IDNFAJUSTE <> w_S) THEN
            DELETE ITEMPRODUTO
             WHERE (CDFILIAL   = P_FILIAL)   AND
                   (NRLANCTONF = P_LANCTONF) AND
                   (QTITEMPROD = 0);
         END IF;

         DELETE IMPOSNFTOT
         WHERE (CDFILIAL   = P_FILIAL) AND
               (NRLANCTONF = P_LANCTONF);

         --TOTALIZAÇÃO DOS IMPOSTOS
         FOR C_IMPOSNFTOT IN (SELECT IT.CDIMPOSTO
                              FROM ITEMPROIMPOS IT
                              WHERE (IT.CDFILIAL   = P_FILIAL) AND
                                    (IT.NRLANCTONF = P_LANCTONF)
                              GROUP BY IT.CDIMPOSTO) LOOP

            V_IMPOSTOIT  := 0;
            V_BASECALCIT := 0;

            SELECT NVL(SUM(IT.VRIMPOSTOIT),0),
                   NVL(SUM(IT.VRBASECALCIT),0),
                   NVL(SUM(IT.VRADICFECP),0)
            INTO   V_IMPOSTOIT,
                   V_BASECALCIT,
                   V_VRADICFECPNFTOT
            FROM ITEMPROIMPOS IT, IMPOSTO I
            WHERE (IT.CDFILIAL   = P_FILIAL)               AND
                  (IT.NRLANCTONF = P_LANCTONF)             AND
                  (IT.CDIMPOSTO  = C_IMPOSNFTOT.CDIMPOSTO) AND
                  (IT.CDIMPOSTO  = I.CDIMPOSTO);

            V_ICMS := 'N';
            FOR C_ICMS IN (SELECT CDIMPOSTO
                             FROM IMPOSTONFE N, IMPOSTO I
                            WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                              AND N.CDIMPOSTONFE = '00'
                              AND I.CDIMPOSTO = C_IMPOSNFTOT.CDIMPOSTO)
            LOOP
               V_ICMS := 'S';
            END LOOP;

            IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
               INSERT INTO IMPOSNFTOT
                  (CDFILIAL, NRLANCTONF, CDIMPOSTO, VRTOTIMPONF,VRTOTBCALCNF,
                   VRADICFECP)
               VALUES (P_FILIAL, P_LANCTONF, C_IMPOSNFTOT.CDIMPOSTO, TRUNC(V_IMPOSTOIT ,V_NRDECITOTANF), TRUNC(V_BASECALCIT,V_NRDECITOTANF),
                       V_VRADICFECPNFTOT);
            ELSE
               INSERT INTO IMPOSNFTOT
                 (CDFILIAL, NRLANCTONF, CDIMPOSTO, VRTOTIMPONF, VRTOTBCALCNF,
                  VRADICFECP)
               VALUES (P_FILIAL, P_LANCTONF, C_IMPOSNFTOT.CDIMPOSTO, ROUND(V_IMPOSTOIT ,V_NRDECITOTANF), ROUND(V_BASECALCIT,V_NRDECITOTANF),
                       V_VRADICFECPNFTOT);
            END IF;

         END LOOP;

         DELETE IMPOSTONF
         WHERE (CDFILIAL   = P_FILIAL) AND
               (NRLANCTONF = P_LANCTONF);

         FOR C_ITEMNOTAFISC IN (SELECT CDFILIALIT, NRLANCTONFIT
                                FROM ITEMNOTAFISC
                                WHERE CDFILIAL   = P_FILIAL AND
                                      NRLANCTONF = P_LANCTONF) LOOP

            SELECT SUM(VRTOTAITEM - VRDESCITEM) AS VRLIQUORIG
            INTO   V_VRLIQUORIG
            FROM ITEMPRODUTO I
            WHERE CDFILIAL    = C_ITEMNOTAFISC.CDFILIALIT AND
                  NRLANCTONF  = C_ITEMNOTAFISC.NRLANCTONFIT;

            IF V_VRLIQUORIG = 0 THEN
               V_VRFATOCONV := 0;
            ELSE
               V_VRFATOCONV := V_LIQUIDO / V_VRLIQUORIG;
            END IF;

            /*IMPOSTOS DE CORPO DA NOTA DE ORIGEM*/
            FOR C_IMPOSNFTOT IN (SELECT IT.CDIMPOSTO, IT.VRTOTIMPONF, IT.VRTOTBCALCNF
                                 FROM IMPOSNFTOT IT, IMPOSTO IP
                                 WHERE IT.CDFILIAL   = C_ITEMNOTAFISC.CDFILIALIT   AND
                                       IT.NRLANCTONF = C_ITEMNOTAFISC.NRLANCTONFIT AND
                                       IT.CDIMPOSTO  = IP.CDIMPOSTO AND
                                       IP.IDPRODNOTA = w_C) LOOP

               SELECT NVL(MAX(IDUTMUNIORIG),'N')
                 INTO V_IDUTMUNIORIG
                 FROM IMPOSTO
                WHERE CDIMPOSTO = C_IMPOSNFTOT.CDIMPOSTO;

               IF ((V_IDUTMUNIORIG = 'O') OR (V_IDUTMUNIORIG = 'N')) THEN
                  CONSULTA_ALIQUOTA(C_IMPOSNFTOT.CDIMPOSTO, w_S, P_EMPRESA, '', P_INSCESTA, V_PAISORIG,
                                    V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIORIG, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_TIPOOPER);
               ELSE
                  CONSULTA_ALIQUOTA(C_IMPOSNFTOT.CDIMPOSTO, w_S, P_EMPRESA, '', P_INSCESTA, V_PAISORIG,
                                    V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_TIPOOPER);
               END IF;

               SELECT MAX(NRALIQTEMP), MAX(VRPARDEDTMP), MAX(VRPREDBCTMP), MAX(VRALIQUTMP), NVL(MAX(IDTRIMPSTTMP), w_0), MAX(CDTIPOOPERTMP)
                 INTO   V_NRALIQTEMP,    V_PARDEDTMP,      V_PREDBCTMP,      V_ALIQUTMP,      V_TRATIMPST, V_CDTIPOOPER
                 FROM ALIQTEMP
                WHERE (NRALIQTEMP = V_ALIQTEMP);

               IF ((V_NRALIQTEMP IS NOT NULL) AND (V_CDTIPOOPER IS NOT NULL) AND (V_ESTORNOCANC <> w_S)) THEN
                  IF (V_ALIQUTMP IS NULL) THEN
                     V_ALIQUTMP := 0;
                  END IF;
                  V_PRODUENCARGO := 0;

                  SELECT SUM(VRITEMENCA) AS VRSOMAITEM
                    INTO   V_SOMAITEM
                    FROM ITEMENCARGO IE, ENCARGO EN, BASECALC BC
                   WHERE (IE.CDFILIAL   = P_FILIAL)
                     AND (IE.NRLANCTONF = P_LANCTONF)
                     AND (EN.CDENCARGO  = IE.CDENCARGO)
                     AND (BC.CDENCARGO  = IE.CDENCARGO)
                     AND (BC.CDIMPOSTO  = C_IMPOSNFTOT.CDIMPOSTO)
                     AND (NVL(BC.IDTRATIMPOBCENC, EN.IDENCARGO)  = w_A);

                  SELECT SUM(VRITEMENCA) AS VRDESCITEM
                    INTO   V_DESCITEM
                    FROM ITEMENCARGO IE, ENCARGO EN, BASECALC BC
                   WHERE (IE.CDFILIAL   = P_FILIAL)
                     AND (IE.NRLANCTONF = P_LANCTONF)
                     AND (EN.CDENCARGO  = IE.CDENCARGO)
                     AND (BC.CDENCARGO  = IE.CDENCARGO)
                     AND (BC.CDIMPOSTO  = C_IMPOSNFTOT.CDIMPOSTO)
                     AND (NVL(BC.IDTRATIMPOBCENC, EN.IDENCARGO)  = w_D);

                  IF V_SOMAITEM IS NULL THEN
                     V_SOMAITEM := 0;
                  END IF;

                  IF V_DESCITEM IS NULL THEN
                     V_DESCITEM := 0;
                  END IF;

                  IF (V_ALIQUTMP IS NULL) THEN
                     V_ALIQUTMP := 0;
                  END IF;

                  IF (V_PREDBCTMP IS NULL) THEN
                     V_PREDBCTMP := 0;
                  END IF;

                  IF (V_PARDEDTMP IS NULL) THEN
                     V_PARDEDTMP := 0;
                  END IF;

                  V_PRODUENCARGO := V_SOMAITEM - V_DESCITEM;

                  V_TAXABASECALC := (100 - V_PREDBCTMP)/100;
                  V_TAXAALIQUOTA := (V_ALIQUTMP/100);
                  V_BASECALCIT   := (V_LIQUIDO + V_PRODUENCARGO) * V_TAXABASECALC;

                  V_CONTIMPO     := V_BASECALCIT;
                  V_IMPOSTOIT    := (V_BASECALCIT * V_TAXAALIQUOTA) - V_PARDEDTMP;

                  IF V_BASECALCIT < 0 THEN
                     V_BASECALCIT := 0;
                  END IF;

                  V_CONTABCALC := (V_LIQUIDO + V_PRODUENCARGO) - ((V_LIQUIDO + V_PRODUENCARGO) * V_TAXABASECALC);
                  V_PERDBCALC  := 100 - V_PREDBCTMP;

                  IF V_IMPOSTOIT < 0 THEN
                     V_IMPOSTOIT := 0;
                  END IF;

                  V_ICMS := 'N';
                  FOR C_ICMS IN (SELECT CDIMPOSTO
                                   FROM IMPOSTONFE N, IMPOSTO I
                                  WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                                    AND N.CDIMPOSTONFE = '00'
                                    AND I.CDIMPOSTO = C_IMPOSNFTOT.CDIMPOSTO)
                  LOOP
                     V_ICMS := 'S';
                  END LOOP;

                  IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
                     INSERT INTO IMPOSNFTOT(CDFILIAL, NRLANCTONF, CDIMPOSTO, VRTOTIMPONF, VRTOTBCALCNF)
                                       VALUES (P_FILIAL, P_LANCTONF, C_IMPOSNFTOT.CDIMPOSTO, TRUNC(V_IMPOSTOIT ,V_NRDECITOTANF), TRUNC(V_BASECALCIT,V_NRDECITOTANF));
                  ELSE
                     INSERT INTO IMPOSNFTOT(CDFILIAL, NRLANCTONF, CDIMPOSTO, VRTOTIMPONF, VRTOTBCALCNF)
                                       VALUES (P_FILIAL, P_LANCTONF, C_IMPOSNFTOT.CDIMPOSTO, ROUND(V_IMPOSTOIT ,V_NRDECITOTANF), ROUND(V_BASECALCIT,V_NRDECITOTANF));
                  END IF;

               ELSE
                  V_IMPOSTOIT  := (C_IMPOSNFTOT.VRTOTIMPONF * V_VRFATOCONV);
                  V_BASECALCIT := (C_IMPOSNFTOT.VRTOTBCALCNF * V_VRFATOCONV);
                  V_ALIQUTMP   := NULL;
                  V_UTIBB      := 'N';

                  --integração fiscal especifica com Compass_Argentina atraves da importação de aliquota do imposto IBB
                  --A aliquota de imposto 03(ibb) sera cadastrada na tabela paramintegraibb e tera prioridade sobre o
                  -- cadastro de aliquota realizado em sistema
                  /*IF C_IMPOSNFTOT.CDIMPOSTO = '03' THEN
                     IF V_IDORIGDESTNF = 'C' THEN

                        V_DTVINGENTE := NVL(V_DTINIREFEFAT, P_INIVALID);

                        SELECT NVL(MAX(VRALIQUOTAIBB),NULL)
                        INTO   V_ALIQUTMP
                        FROM PARAMINTEGRAIBB
                        WHERE CDCLIENTE = P_CLIENTE AND
                              V_DTVINGENTE BETWEEN DTVIGINICIALIBB AND DTVIGFINALIBB;

                        IF V_ALIQUTMP IS NOT NULL THEN
                           V_UTIBB := 'S';
                        END IF;
                     END IF;
                  END IF;

                  IF V_UTIBB = 'S' THEN
                     INSERT INTO IMPOSNFTOT(CDFILIAL, NRLANCTONF, CDIMPOSTO, VRTOTIMPONF, VRTOTBCALCNF)
                                    VALUES (P_FILIAL, P_LANCTONF, C_IMPOSNFTOT.CDIMPOSTO, ROUND((V_LIQUIDO * (V_ALIQUTMP/100))  ,V_NRDECITOTANF), ROUND(V_LIQUIDO,V_NRDECITOTANF));
                  ELSE*/
                     V_ICMS := 'N';
                     FOR C_ICMS IN (SELECT CDIMPOSTO
                                      FROM IMPOSTONFE N, IMPOSTO I
                                     WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                                       AND N.CDIMPOSTONFE = '00'
                                       AND I.CDIMPOSTO = C_IMPOSNFTOT.CDIMPOSTO)
                      LOOP
                         V_ICMS := 'S';
                      END LOOP;

                     IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
                        INSERT INTO IMPOSNFTOT(CDFILIAL, NRLANCTONF, CDIMPOSTO, VRTOTIMPONF, VRTOTBCALCNF)
                                       VALUES (P_FILIAL, P_LANCTONF, C_IMPOSNFTOT.CDIMPOSTO, TRUNC(V_IMPOSTOIT ,V_NRDECITOTANF), TRUNC(V_BASECALCIT,V_NRDECITOTANF));
                     ELSE
                        INSERT INTO IMPOSNFTOT(CDFILIAL, NRLANCTONF, CDIMPOSTO, VRTOTIMPONF, VRTOTBCALCNF)
                                       VALUES (P_FILIAL, P_LANCTONF, C_IMPOSNFTOT.CDIMPOSTO, ROUND(V_IMPOSTOIT ,V_NRDECITOTANF), ROUND(V_BASECALCIT,V_NRDECITOTANF));
                     END IF;

                  --END IF;
               END IF;
               DELETE ALIQTEMP
               WHERE NRALIQTEMP = V_ALIQTEMP;
            END LOOP;

            FOR C_IMPOSTONF IN (SELECT IT.CDIMPOSTO, IT.NRIMPOSNF, IT.VRCONTABILNF, IT.VRPERREDBCNF, IT.VRBASECALCNF,
                                       IT.VRALIQNF, IT.VRPARDEDNF, IT.VRIMPOSTONF, IT.CDFISCALNF, IT.CDSITUTRIBNF,
                                       IT.CDFISCOPERNF, IT.CDSUFXCFOPNF, IDTRIMPOSTNF, IT.CDSITUTRIBIMNFE, IP.IDIMPORECUP,
									                     IT.CDTPCREDPICONF, IT.CDNATUBCALPCNF, IT.IDMOTDESONERANF
                                FROM IMPOSTONF IT, IMPOSTO IP
                                WHERE IT.CDFILIAL   = C_ITEMNOTAFISC.CDFILIALIT   AND
                                      IT.NRLANCTONF = C_ITEMNOTAFISC.NRLANCTONFIT AND
                                      IT.CDIMPOSTO  = IP.CDIMPOSTO                AND
                                      IP.IDPRODNOTA = w_C) LOOP
               /*VERIFICA CST POR IMPOSTO*/
               V_IMPOICMS := NULL;
               V_CDGRUPOFISCAUX := NULL;

               SELECT MAX(G.CDGRUPOFISC)
                 INTO V_CDGRUPOFISCAUX
                 FROM GRUPOFISCIMPFIL G,
                      (SELECT CDFILIEMIT AS CDFILIAL
                         FROM NOTAFISCAL
                        WHERE CDFILIAL = P_FILIAL
                              AND NRLANCTONF = P_LANCTONF) F
                WHERE G.CDFILIAL = F.CDFILIAL
                  AND NOT G.CDGRUPOFISC IS NULL
                  AND G.CDIMPOSTO = C_IMPOSTONF.CDIMPOSTO;
               IF V_IDORIGDESTNF = 'C' THEN
                  SELECT NVL(MAX(G.CDGRUPOFISC), V_CDGRUPOFISCAUX)
                    INTO V_CDGRUPOFISCAUX
                    FROM GRFISIMPIECLIE G,
                         (SELECT CDCLIENTE
                            FROM NOTAFISCAL
                           WHERE CDFILIAL = P_FILIAL
                             AND NRLANCTONF = P_LANCTONF) N
                   WHERE G.CDCLIENTE = N.CDCLIENTE
                     AND G.CDEMPRESA = P_EMPRESA
                     AND G.CDINSCESTA = P_INSCESTA
                     AND NOT G.CDGRUPOFISC IS NULL
                     AND G.CDIMPOSTO = C_IMPOSTONF.CDIMPOSTO;
               ELSE
                  SELECT NVL(MAX(G.CDGRUPOFISC), V_CDGRUPOFISCAUX)
                    INTO V_CDGRUPOFISCAUX
                    FROM GRFISIMPIEFORN G,
                        (SELECT CDFORNECED
                           FROM NOTAFISCAL
                          WHERE CDFILIAL = P_FILIAL
                            AND NRLANCTONF = P_LANCTONF) N
                   WHERE G.CDFORNECED = N.CDFORNECED
                     AND G.CDEMPRESA = P_EMPRESA
                     AND G.CDINSCESTA = P_INSCESTA
                     AND NOT G.CDGRUPOFISC IS NULL
                     AND G.CDIMPOSTO = C_IMPOSTONF.CDIMPOSTO;
               END IF;

               IF V_CDGRUPOFISCAUX IS NULL THEN
                  CONSULTA_CST_NFE(w_S, P_EMPRESA, '', P_INSCESTA, P_TIPOOPER, V_CDGRUPOFISC,C_IMPOSTONF.CDIMPOSTO, V_IDINTEREST, V_IDINTERNA, P_FILIAL, P_LANCTONF, '', V_CDSITTRIBTMP, V_IDMODBCNFE, V_IDMODBCSTNFE, V_CDTPCRPICOSTNFE, V_CDNATUBCPCSTNFE, V_IDMOTIDESSTNFE);
               ELSE
                  CONSULTA_CST_NFE(w_S, P_EMPRESA, '', P_INSCESTA, P_TIPOOPER, V_CDGRUPOFISCAUX,C_IMPOSTONF.CDIMPOSTO, V_IDINTEREST, V_IDINTERNA, P_FILIAL, P_LANCTONF, '', V_CDSITTRIBTMP, V_IDMODBCNFE, V_IDMODBCSTNFE, V_CDTPCRPICOSTNFE, V_CDNATUBCPCSTNFE, V_IDMOTIDESSTNFE);
               END IF;

               IF (C_IMPOSTONF.CDSITUTRIBIMNFE IS NULL) THEN
                  V_CDSITUTRIBNFE := V_CDSITTRIBTMP;
               ELSE
                  V_CDSITUTRIBNFE := C_IMPOSTONF.CDSITUTRIBIMNFE;
               END IF;

               IF (C_IMPOSTONF.CDTPCREDPICONF IS NULL) THEN
                  V_CDTPCRPICOSTNFEIT := V_CDTPCRPICOSTNFE;
               ELSE
                  V_CDTPCRPICOSTNFEIT := C_IMPOSTONF.CDTPCREDPICONF;
               END IF;

               IF (C_IMPOSTONF.CDNATUBCALPCNF IS NULL) THEN
                  V_CDNATUBCPCSTNFEIT := V_CDNATUBCPCSTNFE;
               ELSE
                  V_CDNATUBCPCSTNFEIT := C_IMPOSTONF.CDNATUBCALPCNF;
               END IF;

               IF (C_IMPOSTONF.IDMOTDESONERANF IS NULL) THEN
                  V_IDMOTIDESSTNFE := V_IDMOTIDESSTNFE;
               ELSE
                  V_IDMOTIDESSTNFE := C_IMPOSTONF.IDMOTDESONERANF;
               END IF;


               SELECT NVL(MAX(IDUTMUNIORIG),'N')
                 INTO V_IDUTMUNIORIG
                 FROM IMPOSTO
                WHERE CDIMPOSTO = C_IMPOSTONF.CDIMPOSTO;

               IF ((V_IDUTMUNIORIG = 'O') OR (V_IDUTMUNIORIG = 'N')) THEN
                  CONSULTA_ALIQUOTA(C_IMPOSTONF.CDIMPOSTO, w_S, P_EMPRESA, '', P_INSCESTA, V_PAISORIG,
                                    V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIORIG, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC,P_TIPOOPER);
               ELSE
                  CONSULTA_ALIQUOTA(C_IMPOSTONF.CDIMPOSTO, w_S, P_EMPRESA, '', P_INSCESTA, V_PAISORIG,
                                    V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_MUNIDEST, V_LIQUIITEM, P_INIVALID, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_TIPOOPER);
               END IF;

               SELECT MAX(NRALIQTEMP), MAX(VRPARDEDTMP), MAX(VRPREDBCTMP), MAX(VRALIQUTMP), NVL(MAX(IDTRIMPSTTMP), w_0), MAX(CDTIPOOPERTMP)
                 INTO   V_NRALIQTEMP,    V_PARDEDTMP,      V_PREDBCTMP,      V_ALIQUTMP,      V_TRATIMPST, V_CDTIPOOPER
                 FROM ALIQTEMP
                WHERE (NRALIQTEMP = V_ALIQTEMP);

               IF ((V_NRALIQTEMP IS NOT NULL) AND (V_CDTIPOOPER IS NOT NULL)) THEN
                  IF (V_ALIQUTMP IS NULL) THEN
                     V_ALIQUTMP := 0;
                  END IF;
                  V_PRODUENCARGO := 0;

                  SELECT SUM(VRITEMENCA) AS VRSOMAITEM
                    INTO   V_SOMAITEM
                    FROM ITEMENCARGO IE, ENCARGO EN, BASECALC BC
                   WHERE (IE.CDFILIAL   = P_FILIAL)
                     AND (IE.NRLANCTONF = P_LANCTONF)
                     AND (EN.CDENCARGO  = IE.CDENCARGO)
                     AND (BC.CDENCARGO  = IE.CDENCARGO)
                     AND (BC.CDIMPOSTO  = C_IMPOSTONF.CDIMPOSTO)
                     AND (NVL(BC.IDTRATIMPOBCENC, EN.IDENCARGO)  = w_A);

                  SELECT SUM(VRITEMENCA) AS VRDESCITEM
                    INTO   V_DESCITEM
                    FROM ITEMENCARGO IE, ENCARGO EN, BASECALC BC
                   WHERE (IE.CDFILIAL   = P_FILIAL)
                     AND (IE.NRLANCTONF = P_LANCTONF)
                     AND (EN.CDENCARGO  = IE.CDENCARGO)
                     AND (BC.CDENCARGO  = IE.CDENCARGO)
                     AND (BC.CDIMPOSTO  = C_IMPOSTONF.CDIMPOSTO)
                     AND (NVL(BC.IDTRATIMPOBCENC, EN.IDENCARGO)  = w_D);

                  IF V_SOMAITEM IS NULL THEN
                     V_SOMAITEM := 0;
                  END IF;

                  IF V_DESCITEM IS NULL THEN
                     V_DESCITEM := 0;
                  END IF;

                  IF (V_ALIQUTMP IS NULL) THEN
                     V_ALIQUTMP := 0;
                  END IF;

                  IF (V_PREDBCTMP IS NULL) THEN
                     V_PREDBCTMP := 0;
                  END IF;

                  IF (V_PARDEDTMP IS NULL) THEN
                     V_PARDEDTMP := 0;
                  END IF;

                  V_PRODUENCARGO := V_SOMAITEM - V_DESCITEM;

                  V_TAXABASECALC := (100 - V_PREDBCTMP)/100;
                  V_TAXAALIQUOTA := (V_ALIQUTMP/100);
                  V_BASECALCIT   := (V_LIQUIDO + V_PRODUENCARGO) * V_TAXABASECALC;

                  V_CONTIMPO     := V_BASECALCIT;
                  V_IMPOSTOIT    := (V_BASECALCIT * V_TAXAALIQUOTA) - V_PARDEDTMP;

                  IF V_BASECALCIT < 0 THEN
                     V_BASECALCIT := 0;
                  END IF;

                  V_CONTABCALC := (V_LIQUIDO + V_PRODUENCARGO) - ((V_LIQUIDO + V_PRODUENCARGO) * V_TAXABASECALC);
                  V_PERDBCALC  := 100 - V_PREDBCTMP;

                  IF V_IMPOSTOIT < 0 THEN
                     V_IMPOSTOIT := 0;
                  END IF;

                  IF (C_IMPOSTONF.IDIMPORECUP = w_S) OR (C_IMPOSTONF.IDIMPORECUP <> w_S AND V_ALIQUTMP <> 0) THEN
                     IF ((C_IMPOSTONF.IDIMPORECUP = w_S) AND (C_IMPOSTONF.CDFISCALNF <> w_1)) THEN
                        V_BASECALCIT := 0;
                        V_ALIQUTMP   := 0;
                        V_IMPOSTOIT  := 0;
                        V_PREDBCTMP  := 0;
                        V_PARDEDTMP  := 0;
                     END IF;

                     V_ICMS := 'N';
                     FOR C_ICMS IN (SELECT CDIMPOSTO
                                      FROM IMPOSTONFE N, IMPOSTO I
                                     WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                                       AND N.CDIMPOSTONFE = '00'
                                       AND I.CDIMPOSTO = C_IMPOSTONF.CDIMPOSTO)
                     LOOP
                        V_ICMS := 'S';
                     END LOOP;

                     IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
                        INSERT INTO IMPOSTONF(
                           CDFILIAL, NRLANCTONF, CDIMPOSTO, NRIMPOSNF, VRCONTABILNF, VRPERREDBCNF, VRBASECALCNF,
                           VRALIQNF, VRPARDEDNF, VRIMPOSTONF, CDFISCALNF, IDTRIMPOSTNF, CDSITUTRIBIMNFE, CDTPCREDPICONF, CDNATUBCALPCNF, IDMOTDESONERANF)
                        VALUES(
                           P_FILIAL, P_LANCTONF, C_IMPOSTONF.CDIMPOSTO, C_IMPOSTONF.NRIMPOSNF, TRUNC(V_CONTIMPO,2), V_PREDBCTMP,
                           TRUNC(V_BASECALCIT,2), V_ALIQUTMP, TRUNC(V_PARDEDTMP,2), TRUNC(V_IMPOSTOIT,2), C_IMPOSTONF.CDSUFXCFOPNF, C_IMPOSTONF.IDTRIMPOSTNF, V_CDSITTRIBTMP, V_CDTPCRPICOSTNFEIT, V_CDNATUBCPCSTNFEIT, V_IDMOTIDESSTNFE);
                     ELSE
                        INSERT INTO IMPOSTONF(
                           CDFILIAL, NRLANCTONF, CDIMPOSTO, NRIMPOSNF, VRCONTABILNF, VRPERREDBCNF, VRBASECALCNF,
                           VRALIQNF, VRPARDEDNF, VRIMPOSTONF, CDFISCALNF, IDTRIMPOSTNF, CDSITUTRIBIMNFE, CDTPCREDPICONF, CDNATUBCALPCNF, IDMOTDESONERANF)
                        VALUES(
                           P_FILIAL, P_LANCTONF, C_IMPOSTONF.CDIMPOSTO, C_IMPOSTONF.NRIMPOSNF, ROUND(V_CONTIMPO,2), V_PREDBCTMP,
                           V_BASECALCIT, V_ALIQUTMP, V_PARDEDTMP, V_IMPOSTOIT, C_IMPOSTONF.CDSUFXCFOPNF, C_IMPOSTONF.IDTRIMPOSTNF, V_CDSITTRIBTMP, V_CDTPCRPICOSTNFEIT, V_CDNATUBCPCSTNFEIT, V_IDMOTIDESSTNFE);
                     END IF;

                     IF ((C_IMPOSTONF.IDIMPORECUP = w_S) AND (V_PREDBCTMP > 0) AND (C_IMPOSTONF.CDFISCALNF = w_1)) THEN
                        INSERT INTO IMPOSTONF(
                           CDFILIAL, NRLANCTONF, CDIMPOSTO, NRIMPOSNF, VRCONTABILNF, VRPERREDBCNF, VRBASECALCNF,
                           VRALIQNF, VRPARDEDNF, VRIMPOSTONF, CDFISCALNF, CDSITUTRIBIMNFE, CDTPCREDPICONF, CDNATUBCALPCNF, IDMOTDESONERANF)
                        VALUES(
                           P_FILIAL, P_LANCTONF, C_IMPOSTONF.CDIMPOSTO, C_IMPOSTONF.NRIMPOSNF, V_CONTABCALC, V_PERDBCALC,
                           0, 0, V_PARDEDTMP, 0, w_2, V_CDSITTRIBTMP, V_CDTPCRPICOSTNFEIT, V_CDNATUBCPCSTNFEIT, V_IDMOTIDESSTNFE);
                     END IF;
                  END IF;

                  DELETE ALIQTEMP
                  WHERE NRALIQTEMP = V_ALIQTEMP;
               ELSE
                  V_ALIQUTMP   := NULL;
                  V_UTIBB      := 'N';
                  --integração fiscal especifica com Compass_Argentina atraves da importação de aliquota do imposto IBB
                  --A aliquota de imposto 03(ibb) sera cadastrada na tabela paramintegraibb e tera prioridade sobre o
                  -- cadastro de aliquota realizado em sistema
                  /*IF C_IMPOSTONF.CDIMPOSTO = '03' THEN
                     IF V_IDORIGDESTNF = 'C' THEN
                        V_DTVINGENTE := NVL(V_DTINIREFEFAT, P_INIVALID);

                        SELECT NVL(MAX(VRALIQUOTAIBB),NULL)
                        INTO   V_ALIQUTMP
                        FROM PARAMINTEGRAIBB
                        WHERE CDCLIENTE = P_CLIENTE AND
                              V_DTVINGENTE BETWEEN DTVIGINICIALIBB AND DTVIGFINALIBB;

                        IF V_ALIQUTMP IS NOT NULL THEN
                           V_UTIBB := 'S';
                        END IF;
                     END IF;
                  END IF;*/

                  IF V_UTIBB = 'S' THEN
                     V_ICMS := 'N';
                     FOR C_ICMS IN (SELECT CDIMPOSTO
                                      FROM IMPOSTONFE N, IMPOSTO I
                                     WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                                       AND N.CDIMPOSTONFE = '00'
                                       AND I.CDIMPOSTO = C_IMPOSTONF.CDIMPOSTO)
                     LOOP
                        V_ICMS := 'S';
                     END LOOP;

                     IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
                        INSERT INTO IMPOSTONF(
                           CDFILIAL, NRLANCTONF, CDIMPOSTO, NRIMPOSNF, VRCONTABILNF, VRPERREDBCNF, VRBASECALCNF,
                           VRALIQNF, VRPARDEDNF, VRIMPOSTONF, CDFISCALNF, CDSITUTRIBNF, CDFISCOPERNF, CDSUFXCFOPNF, IDTRIMPOSTNF, CDSITUTRIBIMNFE, CDTPCREDPICONF, CDNATUBCALPCNF, IDMOTDESONERANF)
                        VALUES(P_FILIAL, P_LANCTONF, C_IMPOSTONF.CDIMPOSTO, C_IMPOSTONF.NRIMPOSNF,
                               V_LIQUIDO, 0, V_LIQUIDO,
                               V_ALIQUTMP, 0, TRUNC((V_LIQUIDO * (V_ALIQUTMP/100)),2), C_IMPOSTONF.CDFISCALNF,
                               C_IMPOSTONF.CDSITUTRIBNF, C_IMPOSTONF.CDFISCOPERNF, C_IMPOSTONF.CDSUFXCFOPNF, C_IMPOSTONF.IDTRIMPOSTNF, C_IMPOSTONF.CDSITUTRIBIMNFE, V_CDTPCRPICOSTNFEIT, V_CDNATUBCPCSTNFEIT, V_IDMOTIDESSTNFE);
                     ELSE
                        INSERT INTO IMPOSTONF(
                           CDFILIAL, NRLANCTONF, CDIMPOSTO, NRIMPOSNF, VRCONTABILNF, VRPERREDBCNF, VRBASECALCNF,
                           VRALIQNF, VRPARDEDNF, VRIMPOSTONF, CDFISCALNF, CDSITUTRIBNF, CDFISCOPERNF, CDSUFXCFOPNF, IDTRIMPOSTNF, CDSITUTRIBIMNFE, CDTPCREDPICONF, CDNATUBCALPCNF, IDMOTDESONERANF)
                        VALUES(P_FILIAL, P_LANCTONF, C_IMPOSTONF.CDIMPOSTO, C_IMPOSTONF.NRIMPOSNF,
                               V_LIQUIDO, 0, V_LIQUIDO,
                               V_ALIQUTMP, 0, (V_LIQUIDO * (V_ALIQUTMP/100)), C_IMPOSTONF.CDFISCALNF,
                               C_IMPOSTONF.CDSITUTRIBNF, C_IMPOSTONF.CDFISCOPERNF, C_IMPOSTONF.CDSUFXCFOPNF, C_IMPOSTONF.IDTRIMPOSTNF, C_IMPOSTONF.CDSITUTRIBIMNFE, V_CDTPCRPICOSTNFEIT, V_CDNATUBCPCSTNFEIT, V_IDMOTIDESSTNFE);
                     END IF;
                  ELSE
                     V_ICMS := 'N';
                     FOR C_ICMS IN (SELECT CDIMPOSTO
                                      FROM IMPOSTONFE N, IMPOSTO I
                                     WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                                       AND N.CDIMPOSTONFE = '00'
                                       AND I.CDIMPOSTO = C_IMPOSTONF.CDIMPOSTO)
                     LOOP
                        V_ICMS := 'S';
                     END LOOP;

                     IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
                        INSERT INTO IMPOSTONF(
                           CDFILIAL, NRLANCTONF, CDIMPOSTO, NRIMPOSNF, VRCONTABILNF, VRPERREDBCNF, VRBASECALCNF,
                           VRALIQNF, VRPARDEDNF, VRIMPOSTONF, CDFISCALNF, CDSITUTRIBNF, CDFISCOPERNF, CDSUFXCFOPNF, IDTRIMPOSTNF, CDSITUTRIBIMNFE, CDTPCREDPICONF, CDNATUBCALPCNF, IDMOTDESONERANF)
                        VALUES(P_FILIAL, P_LANCTONF, C_IMPOSTONF.CDIMPOSTO, C_IMPOSTONF.NRIMPOSNF,
                               TRUNC((C_IMPOSTONF.VRCONTABILNF * V_VRFATOCONV),2), C_IMPOSTONF.VRPERREDBCNF, TRUNC((C_IMPOSTONF.VRBASECALCNF * V_VRFATOCONV),2),
                               C_IMPOSTONF.VRALIQNF, TRUNC((C_IMPOSTONF.VRPARDEDNF * V_VRFATOCONV),2), TRUNC((C_IMPOSTONF.VRIMPOSTONF * V_VRFATOCONV),2), C_IMPOSTONF.CDFISCALNF,
                               C_IMPOSTONF.CDSITUTRIBNF, C_IMPOSTONF.CDFISCOPERNF, C_IMPOSTONF.CDSUFXCFOPNF, C_IMPOSTONF.IDTRIMPOSTNF, C_IMPOSTONF.CDSITUTRIBIMNFE, V_CDTPCRPICOSTNFEIT, V_CDNATUBCPCSTNFEIT, V_IDMOTIDESSTNFE);
                     ELSE
                        INSERT INTO IMPOSTONF(
                           CDFILIAL, NRLANCTONF, CDIMPOSTO, NRIMPOSNF, VRCONTABILNF, VRPERREDBCNF, VRBASECALCNF,
                           VRALIQNF, VRPARDEDNF, VRIMPOSTONF, CDFISCALNF, CDSITUTRIBNF, CDFISCOPERNF, CDSUFXCFOPNF, IDTRIMPOSTNF, CDSITUTRIBIMNFE, CDTPCREDPICONF, CDNATUBCALPCNF, IDMOTDESONERANF)
                        VALUES(P_FILIAL, P_LANCTONF, C_IMPOSTONF.CDIMPOSTO, C_IMPOSTONF.NRIMPOSNF,
                               ROUND((C_IMPOSTONF.VRCONTABILNF * V_VRFATOCONV),2), C_IMPOSTONF.VRPERREDBCNF, (C_IMPOSTONF.VRBASECALCNF * V_VRFATOCONV),
                               C_IMPOSTONF.VRALIQNF, (C_IMPOSTONF.VRPARDEDNF * V_VRFATOCONV), (C_IMPOSTONF.VRIMPOSTONF * V_VRFATOCONV), C_IMPOSTONF.CDFISCALNF,
                               C_IMPOSTONF.CDSITUTRIBNF, C_IMPOSTONF.CDFISCOPERNF, C_IMPOSTONF.CDSUFXCFOPNF, C_IMPOSTONF.IDTRIMPOSTNF, C_IMPOSTONF.CDSITUTRIBIMNFE,  V_CDTPCRPICOSTNFEIT, V_CDNATUBCPCSTNFEIT, V_IDMOTIDESSTNFE);
                     END IF;

                  END IF;
                   V_SEQUIMPOSTNF := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_SEQUIMPOSTNF) + 1)),2,0);
               END IF;
               DELETE ALIQTEMP
               WHERE NRALIQTEMP = V_ALIQTEMP;
            END LOOP;
         END LOOP;

         DELETE FROM DADOSADIC
         WHERE CDFILIAL = P_FILIAL
           AND NRLANCTONF = P_LANCTONF
           AND DSDADOADIC LIKE 'Nota de Origem:%';

         IF (V_IDCONTCONFORIG = 'N') THEN
            DELETE ITEMPROIMPOSORIG
             WHERE CDFILIAL   = P_FILIAL
               AND NRLANCTONF = P_LANCTONF;

            FOR C_IMPOSTOITENS IN (SELECT CDFILIAL,     NRLANCTONF,     NRSEQITPROD,     CDIMPOSTO,      NRITPROIMPOS,    CDFISCALIT,
                                          CDSITUTRIBIT, CDFISCOPERIT,   CDSUFXCFOPIT,    VRALIQITEM,     VRPERREDBCIT,    VRPARDEDIT,
                                          VRCONTITIMP,  VRBASECALCIT,   VRIMPOSTOIT,     IDERROSIMPIT,   IDAVISIMPIT,     CDSITUTRIBITNFE,
                                          IDMODBCITNFE, IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT, IDTRIMPSTII,
                                          CDDETALHEPROD, CDENQLEGALIPI, CDCEST,          CDBENEFFISCAL
                                     FROM ITEMPROIMPOS
                                    WHERE CDFILIAL   = P_FILIAL
                                      AND NRLANCTONF = P_LANCTONF) LOOP

               INSERT INTO ITEMPROIMPOSORIG(CDFILIAL,      NRLANCTONF,     NRSEQITPROD,     CDIMPOSTO,      NRITPROIMPOS,    CDFISCALIT,
                                            CDSITUTRIBIT,  CDFISCOPERIT,   CDSUFXCFOPIT,    VRALIQITEM,     VRPERREDBCIT,    VRPARDEDIT,
                                            VRCONTITIMP,   VRBASECALCIT,   VRIMPOSTOIT,     IDERROSIMPIT,   IDAVISIMPIT,     CDSITUTRIBITNFE,
                                            IDMODBCITNFE,  IDMODBCSTITNFE, CDTPCREDPICOITE, CDNATUBCALPCIT, IDMOTDESONERAIT, IDTRIMPSTII,
                                            CDDETALHEPROD, CDENQLEGALIPI,  CDCEST,          CDBENEFFISCAL)
                    VALUES (C_IMPOSTOITENS.CDFILIAL,      C_IMPOSTOITENS.NRLANCTONF,     C_IMPOSTOITENS.NRSEQITPROD,     C_IMPOSTOITENS.CDIMPOSTO,      C_IMPOSTOITENS.NRITPROIMPOS,    C_IMPOSTOITENS.CDFISCALIT,
                            C_IMPOSTOITENS.CDSITUTRIBIT,  C_IMPOSTOITENS.CDFISCOPERIT,   C_IMPOSTOITENS.CDSUFXCFOPIT,    C_IMPOSTOITENS.VRALIQITEM,     C_IMPOSTOITENS.VRPERREDBCIT,    C_IMPOSTOITENS.VRPARDEDIT,
                            C_IMPOSTOITENS.VRCONTITIMP,   C_IMPOSTOITENS.VRBASECALCIT,   C_IMPOSTOITENS.VRIMPOSTOIT,     C_IMPOSTOITENS.IDERROSIMPIT,   C_IMPOSTOITENS.IDAVISIMPIT,     C_IMPOSTOITENS.CDSITUTRIBITNFE,
                            C_IMPOSTOITENS.IDMODBCITNFE,  C_IMPOSTOITENS.IDMODBCSTITNFE, C_IMPOSTOITENS.CDTPCREDPICOITE, C_IMPOSTOITENS.CDNATUBCALPCIT, C_IMPOSTOITENS.IDMOTDESONERAIT, C_IMPOSTOITENS.IDTRIMPSTII,
                            C_IMPOSTOITENS.CDDETALHEPROD, C_IMPOSTOITENS.CDENQLEGALIPI,  C_IMPOSTOITENS.CDCEST,          C_IMPOSTOITENS.CDBENEFFISCAL);
            END LOOP;
         END IF;

         FOR C_ITEMNOTAFISC IN (SELECT IT.CDFILIALIT, IT.NRLANCTONFIT, NVL(N.NRNOTAFISCALELE, N.NRNOTAFISC) AS NRNOTA,
                                       TO_CHAR(N.DTEMISSAO,  'DD/MM/YYYY') AS DTEMISSAO, N.VRNOTAFISC
                             FROM ITEMNOTAFISC IT, NOTAFISCAL N
                             WHERE IT.CDFILIAL   = P_FILIAL
                               AND IT.NRLANCTONF = P_LANCTONF
                               AND IT.CDFILIALIT   = N.CDFILIAL
                               AND IT.NRLANCTONFIT = N.NRLANCTONF) LOOP

            INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
                           VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, 'Nota de Origem: '|| C_ITEMNOTAFISC.NRNOTA||' (Emissão: '|| C_ITEMNOTAFISC.DTEMISSAO||' Total: '||DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(C_ITEMNOTAFISC.VRNOTAFISC, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(C_ITEMNOTAFISC.VRNOTAFISC, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(C_ITEMNOTAFISC.VRNOTAFISC, 2), '9999999999999.99')))|| ' )');
            V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
         END LOOP;
      END IF;
   -------------------
   ELSIF (P_TIPOOPER = w_03) OR (V_IDNFAJUSTE = w_S) THEN /*NOTA DE COMPLEMENTO E AJUSTE*/
      UPDATE ITEMPROIMPOS
         SET VRCONTITIMP   = 0
       WHERE CDFILIAL     = P_FILIAL
         AND NRLANCTONF   = P_LANCTONF;
      FOR C_IMPOSITEMCOM IN (SELECT II.NRSEQITPROD,  II.CDIMPOSTO,     II.NRITPROIMPOS,   II.VRCONTITIMP,
                                    II.VRPERREDBCIT, II.VRBASECALCIT,  II.VRALIQITEM,     II.VRPARDEDIT,
                                    II.VRIMPOSTOIT,  II.CDFISCALIT,    I.IDUTVLRQTDEIMPO, II.CDSITUTRIBIT ,
                                    II.CDFISCOPERIT, II.VRPERMAJBCIT,  IT.CDPRODUTO,      IT.QTITEMPROD,
                                    P.CDARVPROD,     II.CDENQLEGALIPI, II.CDCEST,         I.CDIMPOSTONFE ,
                                    NVL(I.IDTRATIMPO, 'V') AS IDTRATIMPO
                               FROM ITEMPROIMPOS II, IMPOSTO I, ITEMPRODUTO IT, PRODUTO P
                              WHERE (II.CDFILIAL   = P_FILIAL)
                                AND (II.NRLANCTONF = P_LANCTONF)
                                AND (II.NRITPROIMPOS = '1')
                                AND (II.CDIMPOSTO = I.CDIMPOSTO)
                                AND (P.CDPRODUTO  = IT.CDPRODUTO)
                                AND (II.CDFILIAL = IT.CDFILIAL)
                                AND (II.NRLANCTONF = IT.NRLANCTONF)
                                AND (II.NRSEQITPROD = IT.NRSEQITPROD)
                           ORDER BY II.NRSEQITPROD, II.CDIMPOSTO, II.NRITPROIMPOS) LOOP

         IF (C_IMPOSITEMCOM.CDIMPOSTONFE = '80') THEN
             UPDATE ITEMPROIMPOS
                SET VRPERREDBCSTIT = C_IMPOSITEMCOM.VRPERREDBCIT
              WHERE CDFILIAL = P_FILIAL
                AND NRLANCTONF = P_LANCTONF
                AND NRSEQITPROD = C_IMPOSITEMCOM.NRSEQITPROD
                AND CDIMPOSTO = C_IMPOSITEMCOM.CDIMPOSTO
                AND NRITPROIMPOS = '1';
         END IF;
         /*VERIFICA CSOSN POR IMPOSTO*/
         CONSULTA_CSOSN('S', P_EMPRESA, C_IMPOSITEMCOM.CDARVPROD, P_INSCESTA, P_TIPOOPER, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, V_IDINTEREST, V_CDFISCOPERSN);

         UPDATE ITEMPRODUTO
            SET CDFISCOPERSN  = V_CDFISCOPERSN
          WHERE CDFILIAL    = P_FILIAL
            AND NRLANCTONF  = P_LANCTONF
            AND NRSEQITPROD = C_IMPOSITEMCOM.NRSEQITPROD;

         IF (C_IMPOSITEMCOM.VRIMPOSTOIT = 0)  THEN
            IF (C_IMPOSITEMCOM.VRALIQITEM <> 0)  THEN

               V_TAXAALIQUOTA := (C_IMPOSITEMCOM.VRALIQITEM/100);
               V_TAXABASECALC := (100 - C_IMPOSITEMCOM.VRPERREDBCIT)/100;
               V_TAXABCSUBSTR := (100 + C_IMPOSITEMCOM.VRPERMAJBCIT)/100;

               SELECT MAX(VRTOTAITEM), MAX(QTITEMPROD)
                 INTO V_VRTOTAITEM, V_QTITEMPROD
                 FROM ITEMPRODUTO
                WHERE CDFILIAL = P_FILIAL
                  AND NRLANCTONF = P_LANCTONF
                  AND NRSEQITPROD = C_IMPOSITEMCOM.NRSEQITPROD;

               IF C_IMPOSITEMCOM.VRBASECALCIT > 0 THEN
                  V_BASECALCIT := C_IMPOSITEMCOM.VRBASECALCIT;
               ELSE
                  V_BASECALCIT := V_VRTOTAITEM * V_TAXABASECALC;
               END IF;

               V_PERDBCALC := 100 - C_IMPOSITEMCOM.VRPERREDBCIT;

               V_CONTABCALC  := V_VRTOTAITEM - (V_VRTOTAITEM * V_TAXABASECALC);

               /* GRAVAR VALOR CONTÁBIL PARA NOTA FISCAL DE COMPLEMENTO COM O VALOR DA BASE DE CÁLCULO INFORMADA*/
               IF (V_VRTOTAITEM = 0) THEN
                  V_CONTABCALC := V_BASECALCIT;
               END IF;

               IF C_IMPOSITEMCOM.VRPERMAJBCIT > 0 THEN

                  SELECT MAX(CDIMPOSTO)
                    INTO V_CDIMPOSTO
                    FROM IMPOSTO
                   WHERE CDIMPOSTRIB = C_IMPOSITEMCOM.CDIMPOSTO;

                  IF (V_CDIMPOSTO IS NOT NULL) THEN
                     V_BASECALCIT := (V_BASECALCIT * V_TAXABCSUBSTR);
                  ELSE
                   UPDATE ITEMPROIMPOS
                      SET VRPERMAJBCIT = 0
                    WHERE CDFILIAL = P_FILIAL
                      AND NRLANCTONF = P_LANCTONF
                      AND NRSEQITPROD = C_IMPOSITEMCOM.NRSEQITPROD
                      AND CDIMPOSTO = C_IMPOSITEMCOM.CDIMPOSTO;
                  END IF;
               END IF;

               /* ICMS-ST para nota fiscal de complemento */

               V_CDIMPOSTRIB  := null;
               V_IDVRIMPSTRIB := null;
               /*IMPOSTO DE SUBSTITUICAO TRIBUTARIA*/
               FOR C_ICMSST IN (SELECT CDIMPOSTO
                                      FROM IMPOSTO
                                     WHERE CDIMPOSTRIB = C_IMPOSITEMCOM.CDIMPOSTO)
               LOOP
                  V_CDIMPOSTRIB := V_CDIMPOSTRIB||C_ICMSST.CDIMPOSTO||'_';
               END LOOP;

               IF V_CDIMPOSTRIB IS NOT NULL THEN
                  SELECT NVL(MAX(IDVRIMPSTRIB), 'N')
                    INTO V_IDVRIMPSTRIB
                    FROM ITEMPROIMPOS I, IMPOSTO II
                   WHERE (CDFILIAL     = P_FILIAL)
                     AND (NRLANCTONF   = P_LANCTONF)
                     AND (NRSEQITPROD  = C_IMPOSITEMCOM.NRSEQITPROD)
                     AND (INSTR(V_CDIMPOSTRIB,II.CDIMPOSTO||'_') > 0)
                     AND (I.CDIMPOSTO = II.CDIMPOSTO);

                  IF (NVL(V_IDVRIMPSTRIB,w_N) = w_N) THEN
                     V_VRIMPOSTOST := 0;
                  ELSE
                     Begin
                        SELECT NVL(MAX(VRIMPOSTOIT),0)
                        INTO   V_VRIMPOSTOST
                        FROM ITEMPROIMPOS I
                        WHERE (CDFILIAL     = P_FILIAL)                   AND
                              (NRLANCTONF   = P_LANCTONF)                 AND
                              (NRSEQITPROD  = C_IMPOSITEMCOM.NRSEQITPROD) AND
                              (INSTR(V_CDIMPOSTRIB,CDIMPOSTO||'_') > 0)  AND
                              (NRITPROIMPOS = w_1);
                     Exception
                        When No_Data_Found Then
                           V_VRIMPOSTOST := 0;
                     End;
                  END IF;
               END IF;
               /* ICMS-ST para nota fiscal de complento */


               IF (C_IMPOSITEMCOM.IDUTVLRQTDEIMPO = 'S') THEN
                  SELECT NVL(MAX(VRFATOCONVES), 1)
                    INTO V_VRFATOCONVES
                    FROM CONVPRODUTO
                   WHERE CDPRODUTO = C_IMPOSITEMCOM.CDPRODUTO;

                  IF (NVL(V_IDVRIMPSTRIB,w_N) = w_N) THEN
                     V_BASECALCTO  := (V_QTITEMPROD * V_VRFATOCONVES);
                     V_IMPOSTOIT   := ((V_QTITEMPROD * V_VRFATOCONVES) * C_IMPOSITEMCOM.VRALIQITEM) - C_IMPOSITEMCOM.VRPARDEDIT;
                  ELSE
                     V_BASECALCTO  := (V_QTITEMPROD * V_VRFATOCONVES);
                     V_IMPOSTOIT   := ((V_QTITEMPROD * V_VRFATOCONVES) * C_IMPOSITEMCOM.VRALIQITEM) - C_IMPOSITEMCOM.VRPARDEDIT - V_VRIMPOSTOST;
                     IF V_IMPOSTOIT < 0 THEN
                        V_IMPOSTOIT := 0;
                     END IF;
                  END IF;
               ELSE
                  IF (NVL(V_IDVRIMPSTRIB,w_N) = w_N) THEN
                     V_BASECALCTO  := V_BASECALCIT;
                     V_IMPOSTOIT   := (V_BASECALCIT * V_TAXAALIQUOTA) - C_IMPOSITEMCOM.VRPARDEDIT;
                  ELSE
                     V_BASECALCTO  := V_BASECALCIT;
                     V_IMPOSTOIT   := (V_BASECALCIT * V_TAXAALIQUOTA) - C_IMPOSITEMCOM.VRPARDEDIT - V_VRIMPOSTOST;
                     IF V_IMPOSTOIT < 0 THEN
                        V_IMPOSTOIT := 0;
                     END IF;
                  END IF;
               END IF;

               IF V_IDPERVISIMPSCRE = 'S' THEN
                  V_VRIMPOSTOVISUIT := V_IMPOSTOIT;
               ELSE
                  IF C_IMPOSITEMCOM.CDFISCALIT = '1' THEN
                     V_VRIMPOSTOVISUIT := V_IMPOSTOIT;
                  ELSE
                     V_VRIMPOSTOVISUIT := 0;
                  END IF;
               END IF;

               IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
                  UPDATE ITEMPROIMPOS
                     SET VRCONTITIMP = V_BASECALCTO,
                         VRBASECALCIT = V_BASECALCTO,
                         VRIMPOSTOIT = TRUNC(V_IMPOSTOIT,2),
                         VRIMPOSTOVISUIT = TRUNC(VRIMPOSTOVISUIT,2)
                    WHERE CDFILIAL = P_FILIAL
                      AND NRLANCTONF = P_LANCTONF
                      AND NRSEQITPROD = C_IMPOSITEMCOM.NRSEQITPROD
                      AND CDIMPOSTO = C_IMPOSITEMCOM.CDIMPOSTO
                      AND NRITPROIMPOS = '1';
               ELSE
                  IF (C_IMPOSITEMCOM.IDTRATIMPO = 'A') THEN
                     UPDATE ITEMPROIMPOS
                        SET VRCONTITIMP = VRCONTITIMP + V_IMPOSTOIT,
                            VRBASECALCIT = V_BASECALCTO,
                            VRIMPOSTOIT = ROUND(V_IMPOSTOIT,2),
                            VRIMPOSTOVISUIT = ROUND(V_VRIMPOSTOVISUIT,2)
                       WHERE CDFILIAL = P_FILIAL
                         AND NRLANCTONF = P_LANCTONF
                         AND NRSEQITPROD = C_IMPOSITEMCOM.NRSEQITPROD
                         AND CDIMPOSTO = C_IMPOSITEMCOM.CDIMPOSTO
                         AND NRITPROIMPOS = '1';
                  ELSE
                     UPDATE ITEMPROIMPOS
                        SET VRBASECALCIT = V_BASECALCTO,
                            VRIMPOSTOIT = ROUND(V_IMPOSTOIT,2),
                            VRIMPOSTOVISUIT = ROUND(V_VRIMPOSTOVISUIT,2)
                       WHERE CDFILIAL = P_FILIAL
                         AND NRLANCTONF = P_LANCTONF
                         AND NRSEQITPROD = C_IMPOSITEMCOM.NRSEQITPROD
                         AND CDIMPOSTO = C_IMPOSITEMCOM.CDIMPOSTO
                         AND NRITPROIMPOS = '1';
                  END IF;
               END IF;

               IF (C_IMPOSITEMCOM.VRPERREDBCIT > 0)  THEN

                  Begin
                     SELECT CDFILIAL
                     INTO   V_CHAVE
                     FROM ITEMPROIMPOS
                     WHERE CDFILIAL     = P_FILIAL                 AND
                           NRLANCTONF   = P_LANCTONF               AND
                           NRSEQITPROD  = C_IMPOSITEMCOM.NRSEQITPROD  AND
                           CDIMPOSTO    = C_IMPOSITEMCOM.CDIMPOSTO AND
                           NRITPROIMPOS = '2';
                  Exception
                     When No_Data_Found Then
                        V_CHAVE := Null;
                  End;

                  IF V_CHAVE IS NULL THEN
                     INSERT INTO ITEMPROIMPOS(
                        CDFILIAL, NRLANCTONF, NRSEQITPROD, CDIMPOSTO,
                        NRITPROIMPOS, CDFISCALIT, VRALIQITEM, VRPERREDBCIT,
                        VRCONTITIMP, VRBASECALCIT, VRIMPOSTOIT, VRPARDEDIT,
                        CDSITUTRIBIT, CDFISCOPERIT, VRIMPOSTOVISUIT, CDENQLEGALIPI,
                        CDCEST)
                     VALUES(
                        P_FILIAL, P_LANCTONF, C_IMPOSITEMCOM.NRSEQITPROD, C_IMPOSITEMCOM.CDIMPOSTO,
                        '2', '2', 0, V_PERDBCALC,
                        V_CONTABCALC, 0, 0, 0,
                        C_IMPOSITEMCOM.CDSITUTRIBIT, C_IMPOSITEMCOM.CDFISCOPERIT, 0, C_IMPOSITEMCOM.CDENQLEGALIPI,
                        C_IMPOSITEMCOM.CDCEST);
                  ELSE
                     UPDATE ITEMPROIMPOS
                        SET VRCONTITIMP = V_CONTABCALC,
                            VRBASECALCIT = 0,
                            VRIMPOSTOIT = 0,
                            VRPERREDBCIT = V_PERDBCALC,
                            VRIMPOSTOVISUIT = 0
                    WHERE CDFILIAL = P_FILIAL
                      AND NRLANCTONF = P_LANCTONF
                      AND NRSEQITPROD = C_IMPOSITEMCOM.NRSEQITPROD
                      AND CDIMPOSTO = C_IMPOSITEMCOM.CDIMPOSTO
                      AND NRITPROIMPOS = '2';
                  END IF;
               END IF;
            END IF;
         ELSE
            IF ((C_IMPOSITEMCOM.VRIMPOSTOIT > 0) AND (C_IMPOSITEMCOM.IDTRATIMPO = 'A')) THEN
               UPDATE ITEMPROIMPOS
                  SET VRCONTITIMP   = NVL(VRCONTITIMP,0)+ NVL(C_IMPOSITEMCOM.VRIMPOSTOIT, 0)
                WHERE CDFILIAL     = P_FILIAL
                  AND NRLANCTONF   = P_LANCTONF
                  AND NRSEQITPROD  = C_IMPOSITEMCOM.NRSEQITPROD
                  AND NRITPROIMPOS = '1';
            END IF;
         END IF;

      END LOOP;

      --TOTALIZAÇÃO DOS IMPOSTOS
      FOR C_IMPOSNFCOMP IN (SELECT IT.CDFILIAL, IT.NRLANCTONF, IT.CDIMPOSTO
                           FROM IMPOSNFTOT IT, IMPOSTO I
                           WHERE IT.CDIMPOSTO  = I.CDIMPOSTO AND
                                 I.IDPRODNOTA  <> w_C        AND
                                 IT.CDFILIAL   = P_FILIAL    AND
                                 IT.NRLANCTONF = P_LANCTONF) LOOP

          DELETE IMPOSNFTOT
          WHERE (CDFILIAL   = P_FILIAL) AND
                (NRLANCTONF = P_LANCTONF) AND
                (CDIMPOSTO = C_IMPOSNFCOMP.CDIMPOSTO);

      END LOOP;

      DELETE IMPOSTONF
      WHERE (CDFILIAL   = P_FILIAL) AND
            (NRLANCTONF = P_LANCTONF);

      FOR C_IMPOSNFTOT IN (SELECT CDIMPOSTO, NVL(SUM(ROUND(VRIMPOSTOIT,2)),0) AS VRIMPOSTOIT, NVL(SUM(ROUND(VRBASECALCIT,2)),0) AS VRBASECALCIT, NVL(SUM(ROUND(VRADICFECP,2)),0) AS VRADICFECP
                           FROM ITEMPROIMPOS
                           WHERE (CDFILIAL   = P_FILIAL)   AND
                                 (NRLANCTONF = P_LANCTONF)
                           GROUP BY CDIMPOSTO) LOOP

         V_ICMS := 'N';
         FOR C_ICMS IN (SELECT CDIMPOSTO
                          FROM IMPOSTONFE N, IMPOSTO I
                         WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                           AND N.CDIMPOSTONFE = '00'
                           AND I.CDIMPOSTO = C_IMPOSNFTOT.CDIMPOSTO)
         LOOP
             V_ICMS := 'S';
         END LOOP;

         IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
            INSERT INTO IMPOSNFTOT(CDFILIAL, NRLANCTONF, CDIMPOSTO, VRTOTIMPONF, VRTOTBCALCNF, VRADICFECP)
                           VALUES (P_FILIAL, P_LANCTONF, C_IMPOSNFTOT.CDIMPOSTO, TRUNC(C_IMPOSNFTOT.VRIMPOSTOIT,V_NRDECITOTANF), TRUNC(C_IMPOSNFTOT.VRBASECALCIT,V_NRDECITOTANF),TRUNC(C_IMPOSNFTOT.VRADICFECP,V_NRDECITOTANF));
         ELSE
            INSERT INTO IMPOSNFTOT(CDFILIAL, NRLANCTONF, CDIMPOSTO, VRTOTIMPONF, VRTOTBCALCNF, VRADICFECP)
                           VALUES (P_FILIAL, P_LANCTONF, C_IMPOSNFTOT.CDIMPOSTO, ROUND(C_IMPOSNFTOT.VRIMPOSTOIT,V_NRDECITOTANF), ROUND(C_IMPOSNFTOT.VRBASECALCIT,V_NRDECITOTANF),ROUND(C_IMPOSNFTOT.VRADICFECP,V_NRDECITOTANF));
         END IF;
      END LOOP;

      UPDATE ITEMPROIMPOS
         SET IDMODBCITNFE = '3'
       WHERE CDFILIAL = P_FILIAL
         AND NRLANCTONF = P_LANCTONF;

   ELSIF (P_TIPOOPER = w_09) OR (P_TIPOOPER = w_12) THEN /*VALE DE TRANSFERENCIA E NOTA DE DEBITO/CREDITO*/

      IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
         UPDATE ITEMPRODUTO
         SET VRBRUTITEM   = TRUNC((VRTOTAITEM - VRDESCITEM),2),
             VRCONTITEM   = TRUNC((VRTOTAITEM - VRDESCITEM),2)
         WHERE CDFILIAL   = P_FILIAL   AND
               NRLANCTONF = P_LANCTONF;
      ELSE
         UPDATE ITEMPRODUTO
         SET VRBRUTITEM   = ROUND((VRTOTAITEM - VRDESCITEM),2),
             VRCONTITEM   = ROUND((VRTOTAITEM - VRDESCITEM),2)
         WHERE CDFILIAL   = P_FILIAL   AND
               NRLANCTONF = P_LANCTONF;
      END IF;

      FOR C_ITPROD IN (SELECT I.CDPRODUTO, I.CDCFOPINFUSU, I.CDSUFXINFUSU, I.CDCSTINFUSU, I.NRSEQITPROD,
                              P.CDARVPROD, I.IDORIGEMPROD
                       FROM ITEMPRODUTO I, PRODUTO P
                       WHERE CDFILIAL   = P_FILIAL
                         AND NRLANCTONF = P_LANCTONF
                         AND I.CDPRODUTO = P.CDPRODUTO) LOOP

         CONSULTA_CST(w_S, P_EMPRESA, C_ITPROD.CDARVPROD, P_INSCESTA, P_TIPOOPER, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, V_IDINTEREST, V_IDINTERNA, NULL, C_ITPROD.IDORIGEMPROD);

         FOR C_CSTTEMP IN (SELECT DSMENSCSTTMP
                           FROM CSTTEMP
                           WHERE (NRCSTTEMP = V_CSTTEMP)    AND
                                 (DSMENSCSTTMP IS NOT NULL) AND
                                 (NOT EXISTS(SELECT DSDADOADIC
                                             FROM DADOSADIC
                                             WHERE (CDFILIAL   = P_FILIAL)   AND
                                                   (NRLANCTONF = P_LANCTONF) AND
                                                   (DSDADOADIC LIKE CSTTEMP.DSMENSCSTTMP || '%')))) LOOP

            IF NOT (C_CSTTEMP.DSMENSCSTTMP IS NULL) THEN
               INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
               VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, C_CSTTEMP.DSMENSCSTTMP);

               V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
            END IF;
         END LOOP;

         CONSULTA_CFOP(w_S, P_EMPRESA, C_ITPROD.CDARVPROD, P_INSCESTA, P_TIPOOPER, V_PAISORIG,
                       V_ESTAORIG, V_PAISCFOP, V_ESTACFOP, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, P_INIVALID, C_ITPROD.IDORIGEMPROD);

         FOR C_CFOPTEMP IN (SELECT DSMENSCFOTMP
                            FROM CFOPTEMP
                            WHERE (NRCFOPTEMP = V_CFOPTEMP)  AND
                                  (DSMENSCFOTMP IS NOT NULL) AND
                                  (NOT EXISTS(SELECT DSDADOADIC
                                              FROM DADOSADIC
                                              WHERE (CDFILIAL   = P_FILIAL)   AND
                                                    (NRLANCTONF = P_LANCTONF) AND
                                                    (DSDADOADIC LIKE CFOPTEMP.DSMENSCFOTMP || '%')))) LOOP

            IF NOT (C_CFOPTEMP.DSMENSCFOTMP IS NULL) THEN
               INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
               VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, C_CFOPTEMP.DSMENSCFOTMP);

               V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
            END IF;
         END LOOP;

         IF C_ITPROD.CDCFOPINFUSU IS NULL THEN
            UPDATE NOTAFISCAL
            SET DSCDFISOPENF = (SELECT MAX(DSCFOPTMP)
                                  FROM CFOPTEMP
                                  WHERE NRCFOPTEMP = V_CFOPTEMP)
            WHERE CDFILIAL   = P_FILIAL   AND
                  NRLANCTONF = P_LANCTONF;

            SELECT MAX(CDFISOPETMP), MAX(CDSUFCFOPTMP), SUBSTR(MAX(DSCFOPTMP),1,50)
            INTO   V_FISOPEITEM    , V_SUFXCFOPPR, V_DSCDFISOPEIT
            FROM CFOPTEMP
            WHERE NRCFOPTEMP = V_CFOPTEMP;

            SELECT MAX(CDSITTRIBTMP)
            INTO   V_SITUTRIBPR
            FROM CSTTEMP
            WHERE NRCSTTEMP = V_CSTTEMP;
         ELSE
            V_CFOPINFUSU := 'S';
            V_FISOPEITEM := C_ITPROD.CDCFOPINFUSU;
            V_SUFXCFOPPR := C_ITPROD.CDSUFXINFUSU;
            V_SITUTRIBPR := C_ITPROD.CDCSTINFUSU;
         END IF;

         IF V_IDDOCREPLIC IS NOT NULL THEN
            IF LENGTH(V_SITUTRIBPR) = 3 THEN
               V_SITUTRIBPR := SUBSTR(V_SITUTRIBPR,1,1) || w_90;
            ELSE
               V_SITUTRIBPR := w_90;
            END IF;
         END IF;

         CONSULTA_CSOSN('S', P_EMPRESA, C_ITPROD.CDARVPROD, P_INSCESTA, P_TIPOOPER, P_FILIAL, P_LANCTONF, V_CDGRUPOFISC, V_IDINTEREST,V_CDFISCOPERSN);

         UPDATE ITEMPRODUTO
         SET CDFISOPEITEM  = V_FISOPEITEM,
             CDSUFXCFOPPR  = V_SUFXCFOPPR,
             CDSITUTRIBPR  = V_SITUTRIBPR,
             DSCDFISOPEIT  = V_DSCDFISOPEIT,
             CDFISCOPERSN  = V_CDFISCOPERSN
         WHERE CDFILIAL    = P_FILIAL   AND
               NRLANCTONF  = P_LANCTONF AND
               NRSEQITPROD = C_ITPROD.NRSEQITPROD;

         DELETE CFOPTEMP
         WHERE NRCFOPTEMP = V_CFOPTEMP;

         DELETE CSTTEMP
         WHERE NRCSTTEMP = V_CSTTEMP;

         /*Consulta de nfe*/
         V_CDSITTRIBTMP    := NULL;
         V_IDMODBCNFE      := NULL;
         V_IDMODBCSTNFE    := NULL;
         V_CDTPCRPICOSTNFE := NULL;
         V_CDNATUBCPCSTNFE := NULL;

         FOR C_ITPROI IN (SELECT II.CDIMPOSTO, II.NRITPROIMPOS
                            FROM ITEMPROIMPOS II, IMPOSTO I
                           WHERE II.CDFILIAL   = P_FILIAL
                             AND II.NRLANCTONF = P_LANCTONF
                             AND II.NRSEQITPROD = C_ITPROD.NRSEQITPROD
                             AND II.CDIMPOSTO = I.CDIMPOSTO
                             AND I.IDPRODNOTA = 'P'
                          ORDER BY II.CDIMPOSTO) LOOP

             V_IMPOICMS := NULL;
             V_CDGRUPOFISCAUX := NULL;

             SELECT MAX(G.CDGRUPOFISC)
              INTO V_CDGRUPOFISCAUX
              FROM GRUPOFISCIMPFIL G,
                   (SELECT CDFILIEMIT AS CDFILIAL
                      FROM NOTAFISCAL
                     WHERE CDFILIAL = P_FILIAL
                           AND NRLANCTONF = P_LANCTONF) F
             WHERE G.CDFILIAL = F.CDFILIAL
               AND NOT G.CDGRUPOFISC IS NULL
               AND G.CDIMPOSTO = C_ITPROI.CDIMPOSTO;

             IF V_IDORIGDESTNF = 'C' THEN
                SELECT NVL(MAX(G.CDGRUPOFISC), V_CDGRUPOFISCAUX)
                 INTO V_CDGRUPOFISCAUX
                 FROM GRFISIMPIECLIE G,
                      (SELECT CDCLIENTE
                         FROM NOTAFISCAL
                        WHERE CDFILIAL = P_FILIAL
                          AND NRLANCTONF = P_LANCTONF) N
                WHERE G.CDCLIENTE = N.CDCLIENTE
                  AND G.CDEMPRESA = P_EMPRESA
                  AND G.CDINSCESTA = P_INSCESTA
                  AND NOT G.CDGRUPOFISC IS NULL
                  AND G.CDIMPOSTO = C_ITPROI.CDIMPOSTO;
             ELSE
                SELECT NVL(MAX(G.CDGRUPOFISC), V_CDGRUPOFISCAUX)
                  INTO V_CDGRUPOFISCAUX
                  FROM GRFISIMPIEFORN G,
                      (SELECT CDFORNECED
                         FROM NOTAFISCAL
                        WHERE CDFILIAL = P_FILIAL
                          AND NRLANCTONF = P_LANCTONF) N
                 WHERE G.CDFORNECED = N.CDFORNECED
                   AND G.CDEMPRESA = P_EMPRESA
                   AND G.CDINSCESTA = P_INSCESTA
                   AND NOT G.CDGRUPOFISC IS NULL
                   AND G.CDIMPOSTO = C_ITPROI.CDIMPOSTO;
             END IF;

             IF V_CDGRUPOFISCAUX IS NULL THEN
               CONSULTA_CST_NFE(w_S, P_EMPRESA, C_ITPROD.CDARVPROD, P_INSCESTA, P_TIPOOPER, V_CDGRUPOFISC,C_ITPROI.CDIMPOSTO, V_IDINTEREST, V_IDINTERNA, P_FILIAL, P_LANCTONF, '', V_CDSITTRIBTMP, V_IDMODBCNFE, V_IDMODBCSTNFE, V_CDTPCRPICOSTNFE, V_CDNATUBCPCSTNFE, V_IDMOTIDESSTNFE, C_ITPROD.IDORIGEMPROD);
             ELSE
               CONSULTA_CST_NFE(w_S, P_EMPRESA, C_ITPROD.CDARVPROD, P_INSCESTA, P_TIPOOPER, V_CDGRUPOFISCAUX,C_ITPROI.CDIMPOSTO, V_IDINTEREST, V_IDINTERNA, P_FILIAL, P_LANCTONF, '', V_CDSITTRIBTMP, V_IDMODBCNFE, V_IDMODBCSTNFE, V_CDTPCRPICOSTNFE, V_CDNATUBCPCSTNFE, V_IDMOTIDESSTNFE, C_ITPROD.IDORIGEMPROD);
             END IF;

             UPDATE ITEMPROIMPOS
               SET CDSITUTRIBITNFE = V_CDSITTRIBTMP,
                   IDMODBCITNFE = V_IDMODBCNFE,
                   IDMODBCSTITNFE = V_IDMODBCSTNFE,
                   CDTPCREDPICOITE = V_CDTPCRPICOSTNFE,
                   CDNATUBCALPCIT  = V_CDNATUBCPCSTNFE,
                   IDMOTDESONERAIT = V_IDMOTIDESSTNFE
               WHERE (CDFILIAL     = P_FILIAL)                   AND
                     (NRLANCTONF   = P_LANCTONF)                 AND
                     (NRSEQITPROD  = C_ITPROD.NRSEQITPROD) AND
                     (CDIMPOSTO    = C_ITPROI.CDIMPOSTO)   AND
                     (NRITPROIMPOS = C_ITPROI.NRITPROIMPOS);

         END LOOP;
      END LOOP;
   END IF;

   V_DIFERENCA := 0;
   /* RATEIO DOS ENCARGOS PARA OS PRODUTOS DA NOTA. ESTE RATEIO É NECESSÁRIO PARA A NOTA FISCAL ELETRÔNICA */
   FOR C_ITEMENCARGO IN (SELECT ENCARGO.CDENCARGONFE, SUM(ITEMENCARGO.VRITEMENCA) AS VRITEMENCA
                           FROM ITEMENCARGO, ENCARGO
                          WHERE ITEMENCARGO.CDENCARGO = ENCARGO.CDENCARGO
                            AND ENCARGO.CDENCARGONFE IN ('01', '02', '03', '04', '05')
                            AND NVL(ITEMENCARGO.VRITEMENCA, 0) >= 0
                            AND CDFILIAL = P_FILIAL
                            AND NRLANCTONF = P_LANCTONF
                            AND (V_ENCARGOLIQUIDO <> 'T')
                            AND (NOT(INSTR(V_ENCARGOLIQUIDO, ITEMENCARGO.CDENCARGO) > 0))
                          GROUP BY ENCARGO.CDENCARGONFE) LOOP
      /* ENCARGO FRETE */
      IF (C_ITEMENCARGO.CDENCARGONFE = '01') THEN
         IF (C_ITEMENCARGO.VRITEMENCA > 0) THEN

            UPDATE ITEMPRODUTO
               SET VRFRETEITEM = 0
             WHERE CDFILIAL = P_FILIAL
               AND NRLANCTONF = P_LANCTONF;

            FOR C_ITEMPRODUTO IN (SELECT NRSEQITPROD, VRTOTAITEM
                                    FROM ITEMPRODUTO
                                   WHERE CDFILIAL = P_FILIAL
                                     AND NRLANCTONF = P_LANCTONF
                                     AND (NVL(IDPRODBONIF, 'N') = 'N')) LOOP

               SELECT ITEMPRODUTO.VRTOTAITEM,
                      TOTAL.SOMATOTAITEM,
                      DECODE(TOTAL.SOMATOTAITEM, 0, 0, ((100 * ITEMPRODUTO.VRTOTAITEM) / TOTAL.SOMATOTAITEM)) AS PERCENTITEM
                 INTO V_VRTOTAITEM, V_SOMATOTAITEM, V_PERCENTITEM
                 FROM ITEMPRODUTO, (SELECT CDFILIAL, NRLANCTONF, SUM(VRTOTAITEM) SOMATOTAITEM
                                      FROM ITEMPRODUTO
                                     WHERE CDFILIAL = P_FILIAL
                                       AND NRLANCTONF = P_LANCTONF
                                       AND (NVL(IDPRODBONIF, 'N') = 'N')
                                     GROUP BY CDFILIAL, NRLANCTONF) TOTAL
                WHERE ITEMPRODUTO.CDFILIAL = TOTAL.CDFILIAL
                  AND ITEMPRODUTO.NRLANCTONF = TOTAL.NRLANCTONF
                  AND ITEMPRODUTO.NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;

               IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                  UPDATE ITEMPRODUTO
                     SET VRFRETEITEM = TRUNC(C_ITEMENCARGO.VRITEMENCA * (V_PERCENTITEM / 100), 2)
                   WHERE CDFILIAL  = P_FILIAL
                     AND NRLANCTONF = P_LANCTONF
                     AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
               ELSE
                  UPDATE ITEMPRODUTO
                     SET VRFRETEITEM = ROUND(C_ITEMENCARGO.VRITEMENCA * (V_PERCENTITEM / 100), 2)
                   WHERE CDFILIAL  = P_FILIAL
                     AND NRLANCTONF = P_LANCTONF
                     AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
               END IF;
            END LOOP;
            /*AJUSTE DE VALORES*/
            SELECT SUM(VRFRETEITEM)
              INTO V_VRFRETEITEM
              FROM ITEMPRODUTO
             WHERE CDFILIAL = P_FILIAL
               AND NRLANCTONF = P_LANCTONF;

            V_DIFERENCA := C_ITEMENCARGO.VRITEMENCA - V_VRFRETEITEM;

            IF V_DIFERENCA <> 0 THEN
               UPDATE ITEMPRODUTO
                  SET VRFRETEITEM = VRFRETEITEM + V_DIFERENCA
                WHERE CDFILIAL = P_FILIAL
                  AND NRLANCTONF = P_LANCTONF
                  AND NRSEQITPROD = (SELECT MAX(NRSEQITPROD)
                                      FROM ITEMPRODUTO
                                      WHERE CDFILIAL = P_FILIAL
                                        AND NRLANCTONF = P_LANCTONF
                                        AND (NVL(IDPRODBONIF, 'N') = 'N')
                                        AND VRTOTAITEM = (SELECT MAX(VRTOTAITEM)
                                                           FROM ITEMPRODUTO
                                                          WHERE CDFILIAL = P_FILIAL
                                                            AND NRLANCTONF = P_LANCTONF
                                                            AND (NVL(IDPRODBONIF, 'N') = 'N')));

            END IF;
         ELSE
            UPDATE ITEMPRODUTO
               SET VRFRETEITEM = 0
             WHERE CDFILIAL  = P_FILIAL
               AND NRLANCTONF = P_LANCTONF;
         END IF;
      END IF;

      /* ENCARGO SEGURO */
      IF (C_ITEMENCARGO.CDENCARGONFE = '02') THEN
         IF (C_ITEMENCARGO.VRITEMENCA > 0) THEN

            UPDATE ITEMPRODUTO
               SET VRSEGURITEM = 0
             WHERE CDFILIAL = P_FILIAL
               AND NRLANCTONF = P_LANCTONF;

            FOR C_ITEMPRODUTO IN (SELECT NRSEQITPROD, VRTOTAITEM
                                    FROM ITEMPRODUTO
                                   WHERE CDFILIAL = P_FILIAL
                                     AND NRLANCTONF = P_LANCTONF
                                     AND (NVL(IDPRODBONIF, 'N') = 'N')) LOOP

               SELECT ITEMPRODUTO.VRTOTAITEM,
                      TOTAL.SOMATOTAITEM,
                      DECODE(TOTAL.SOMATOTAITEM, 0, 0, ((100 * ITEMPRODUTO.VRTOTAITEM) / TOTAL.SOMATOTAITEM)) AS PERCENTITEM
                 INTO V_VRTOTAITEM, V_SOMATOTAITEM, V_PERCENTITEM
                 FROM ITEMPRODUTO, (SELECT CDFILIAL, NRLANCTONF, SUM(VRTOTAITEM) SOMATOTAITEM
                                      FROM ITEMPRODUTO
                                     WHERE CDFILIAL = P_FILIAL
                                       AND NRLANCTONF = P_LANCTONF
                                       AND (NVL(IDPRODBONIF, 'N') = 'N')
                                     GROUP BY CDFILIAL, NRLANCTONF) TOTAL
                WHERE ITEMPRODUTO.CDFILIAL = TOTAL.CDFILIAL
                  AND ITEMPRODUTO.NRLANCTONF = TOTAL.NRLANCTONF
                  AND ITEMPRODUTO.NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;

               IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                  UPDATE ITEMPRODUTO
                     SET VRSEGURITEM = TRUNC(C_ITEMENCARGO.VRITEMENCA * (V_PERCENTITEM / 100), 2)
                   WHERE CDFILIAL  = P_FILIAL
                     AND NRLANCTONF = P_LANCTONF
                     AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
               ELSE
                  UPDATE ITEMPRODUTO
                     SET VRSEGURITEM = ROUND(C_ITEMENCARGO.VRITEMENCA * (V_PERCENTITEM / 100), 2)
                   WHERE CDFILIAL  = P_FILIAL
                     AND NRLANCTONF = P_LANCTONF
                     AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
               END IF;
            END LOOP;
            /*AJUSTE DE VALORES*/
            SELECT SUM(VRSEGURITEM)
              INTO V_VRSEGURITEM
              FROM ITEMPRODUTO
             WHERE CDFILIAL = P_FILIAL
               AND NRLANCTONF = P_LANCTONF;

            V_DIFERENCA := C_ITEMENCARGO.VRITEMENCA - V_VRSEGURITEM;

            IF V_DIFERENCA <> 0 THEN
               UPDATE ITEMPRODUTO
                  SET VRSEGURITEM = VRSEGURITEM + V_DIFERENCA
                WHERE CDFILIAL = P_FILIAL
                  AND NRLANCTONF = P_LANCTONF
                  AND NRSEQITPROD = (SELECT MAX(NRSEQITPROD)
                                      FROM ITEMPRODUTO
                                      WHERE CDFILIAL = P_FILIAL
                                        AND NRLANCTONF = P_LANCTONF
                                        AND (NVL(IDPRODBONIF, 'N') = 'N')
                                        AND VRTOTAITEM = (SELECT MAX(VRTOTAITEM)
                                                           FROM ITEMPRODUTO
                                                          WHERE CDFILIAL = P_FILIAL
                                                            AND NRLANCTONF = P_LANCTONF
                                                            AND (NVL(IDPRODBONIF, 'N') = 'N')));

            END IF;
         ELSE
            UPDATE ITEMPRODUTO
               SET VRSEGURITEM = 0
             WHERE CDFILIAL  = P_FILIAL
               AND NRLANCTONF = P_LANCTONF;
         END IF;
      END IF;

      /* ENCARGO DESCONTO */
      IF (C_ITEMENCARGO.CDENCARGONFE = '03') THEN
         IF (C_ITEMENCARGO.VRITEMENCA > 0) THEN

            UPDATE ITEMPRODUTO
               SET VRENCARGODESC = 0
             WHERE CDFILIAL = P_FILIAL
               AND NRLANCTONF = P_LANCTONF;

            FOR C_ITEMPRODUTO IN (SELECT NRSEQITPROD, VRTOTAITEM
                                    FROM ITEMPRODUTO
                                   WHERE CDFILIAL = P_FILIAL
                                     AND NRLANCTONF = P_LANCTONF
                                     AND (NVL(IDPRODBONIF, 'N') = 'N')) LOOP

               SELECT ITEMPRODUTO.VRTOTAITEM,
                      TOTAL.SOMATOTAITEM,
                      DECODE(TOTAL.SOMATOTAITEM, 0, 0, ((100 * ITEMPRODUTO.VRTOTAITEM) / TOTAL.SOMATOTAITEM)) AS PERCENTITEM
                 INTO V_VRTOTAITEM, V_SOMATOTAITEM, V_PERCENTITEM
                 FROM ITEMPRODUTO, (SELECT CDFILIAL, NRLANCTONF, SUM(VRTOTAITEM) SOMATOTAITEM
                                      FROM ITEMPRODUTO
                                     WHERE CDFILIAL = P_FILIAL
                                       AND NRLANCTONF = P_LANCTONF
                                       AND (NVL(IDPRODBONIF, 'N') = 'N')
                                     GROUP BY CDFILIAL, NRLANCTONF) TOTAL
                WHERE ITEMPRODUTO.CDFILIAL = TOTAL.CDFILIAL
                  AND ITEMPRODUTO.NRLANCTONF = TOTAL.NRLANCTONF
                  AND ITEMPRODUTO.NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;

               IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                  UPDATE ITEMPRODUTO
                     SET VRENCARGODESC = TRUNC(VRDESCITEM + (C_ITEMENCARGO.VRITEMENCA * (V_PERCENTITEM / 100)), 2)
                   WHERE CDFILIAL  = P_FILIAL
                     AND NRLANCTONF = P_LANCTONF
                     AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
               ELSE
                  UPDATE ITEMPRODUTO
                     SET VRENCARGODESC = ROUND(VRDESCITEM + (C_ITEMENCARGO.VRITEMENCA * (V_PERCENTITEM / 100)), 2)
                   WHERE CDFILIAL  = P_FILIAL
                     AND NRLANCTONF = P_LANCTONF
                     AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
               END IF;
            END LOOP;
            /*AJUSTE DE VALORES*/
            SELECT SUM(VRENCARGODESC)
              INTO V_VRENCARGODESC
              FROM ITEMPRODUTO
             WHERE CDFILIAL = P_FILIAL
               AND NRLANCTONF = P_LANCTONF;

            SELECT SUM(VRDESCITEM)
              INTO V_SUMVRDESCITEM
              FROM ITEMPRODUTO
             WHERE CDFILIAL  = P_FILIAL
               AND NRLANCTONF = P_LANCTONF;

            V_DIFERENCA := (C_ITEMENCARGO.VRITEMENCA+V_SUMVRDESCITEM) - V_VRENCARGODESC;

            IF V_DIFERENCA <> 0 THEN
               UPDATE ITEMPRODUTO
                  SET VRENCARGODESC = VRENCARGODESC + V_DIFERENCA
                WHERE CDFILIAL = P_FILIAL
                  AND NRLANCTONF = P_LANCTONF
                  AND NRSEQITPROD = (SELECT MAX(NRSEQITPROD)
                                      FROM ITEMPRODUTO
                                      WHERE CDFILIAL = P_FILIAL
                                        AND NRLANCTONF = P_LANCTONF
                                        AND (NVL(IDPRODBONIF, 'N') = 'N')
                                        AND VRTOTAITEM = (SELECT MAX(VRTOTAITEM)
                                                            FROM ITEMPRODUTO
                                                           WHERE CDFILIAL = P_FILIAL
                                                             AND NRLANCTONF = P_LANCTONF
                                                             AND (NVL(IDPRODBONIF, 'N') = 'N')));

            END IF;
         ELSE
            UPDATE ITEMPRODUTO
               SET VRENCARGODESC = VRDESCITEM + 0
             WHERE CDFILIAL  = P_FILIAL
               AND NRLANCTONF = P_LANCTONF;
         END IF;
      END IF;
           /*ENCARGO OUTRAS DESPESAS*/
      IF (C_ITEMENCARGO.CDENCARGONFE = '04') THEN
         IF (C_ITEMENCARGO.VRITEMENCA > 0) THEN

            UPDATE ITEMPRODUTO
               SET VROUTRASDESPITEM = 0
             WHERE CDFILIAL = P_FILIAL
               AND NRLANCTONF = P_LANCTONF;

            IF (V_IDNFORIGVIAXML = 'S') THEN
               BEGIN
                  SELECT SUM(VRENCARGOIMPXML)
                    INTO V_TOTAENCIMPXML
                    FROM ITEMPRODUTO
                   WHERE CDFILIAL = P_FILIAL
                     AND NRLANCTONF = P_LANCTONF
                     AND VRENCARGOIMPXML > 0;
               EXCEPTION
                  WHEN NO_DATA_FOUND THEN
                     V_TOTAENCIMPXML := 0;
               END;

               IF (ROUND(C_ITEMENCARGO.VRITEMENCA, 2) > ROUND(V_TOTAENCIMPXML, 2)) THEN
                  FOR C_ITEMPRODUTO IN (SELECT NRSEQITPROD, VRTOTAITEM
                                          FROM ITEMPRODUTO
                                         WHERE CDFILIAL = P_FILIAL
                                           AND NRLANCTONF = P_LANCTONF) LOOP

                     SELECT ITEMPRODUTO.VRTOTAITEM,
                            TOTAL.SOMATOTAITEM,
                            DECODE(TOTAL.SOMATOTAITEM, 0, 0, ((100 * ITEMPRODUTO.VRTOTAITEM) / TOTAL.SOMATOTAITEM)) AS PERCENTITEM
                       INTO V_VRTOTAITEM, V_SOMATOTAITEM, V_PERCENTITEM
                       FROM ITEMPRODUTO, (SELECT CDFILIAL, NRLANCTONF, SUM(VRTOTAITEM) SOMATOTAITEM
                                            FROM ITEMPRODUTO
                                           WHERE CDFILIAL = P_FILIAL
                                             AND NRLANCTONF = P_LANCTONF
                                           GROUP BY CDFILIAL, NRLANCTONF) TOTAL
                      WHERE ITEMPRODUTO.CDFILIAL = TOTAL.CDFILIAL
                        AND ITEMPRODUTO.NRLANCTONF = TOTAL.NRLANCTONF
                        AND ITEMPRODUTO.NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;

                     IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                        UPDATE ITEMPRODUTO
                           SET VROUTRASDESPITEM = TRUNC(((C_ITEMENCARGO.VRITEMENCA - V_TOTAENCIMPXML) * (V_PERCENTITEM / 100)), 2)
                         WHERE CDFILIAL  = P_FILIAL
                           AND NRLANCTONF = P_LANCTONF
                           AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
                     ELSE
                        UPDATE ITEMPRODUTO
                           SET VROUTRASDESPITEM = ROUND(((C_ITEMENCARGO.VRITEMENCA - V_TOTAENCIMPXML) * (V_PERCENTITEM / 100)), 2)
                         WHERE CDFILIAL  = P_FILIAL
                           AND NRLANCTONF = P_LANCTONF
                           AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
                     END IF;
                  END LOOP;

                  FOR C_ITEMPRODUTO IN (SELECT NRSEQITPROD, VRTOTAITEM, VRENCARGOIMPXML
                                          FROM ITEMPRODUTO
                                         WHERE CDFILIAL = P_FILIAL
                                           AND NRLANCTONF = P_LANCTONF
                                           AND VRENCARGOIMPXML > 0) LOOP


                     SELECT ITEMPRODUTO.VRTOTAITEM,
                            TOTAL.SOMATOTAITEM,
                            DECODE(TOTAL.SOMATOTAITEM, 0, 0, ((100 * ITEMPRODUTO.VRTOTAITEM) / TOTAL.SOMATOTAITEM)) AS PERCENTITEM
                       INTO V_VRTOTAITEM, V_SOMATOTAITEM, V_PERCENTITEM
                       FROM ITEMPRODUTO, (SELECT CDFILIAL, NRLANCTONF, SUM(VRTOTAITEM) SOMATOTAITEM
                                            FROM ITEMPRODUTO
                                           WHERE CDFILIAL = P_FILIAL
                                             AND NRLANCTONF = P_LANCTONF
                                           GROUP BY CDFILIAL, NRLANCTONF) TOTAL
                      WHERE ITEMPRODUTO.CDFILIAL = TOTAL.CDFILIAL
                        AND ITEMPRODUTO.NRLANCTONF = TOTAL.NRLANCTONF
                        AND ITEMPRODUTO.NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;


                     IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                        UPDATE ITEMPRODUTO
                           SET VROUTRASDESPITEM = TRUNC((VROUTRASDESPITEM + VRENCARGOIMPXML), 2)
                         WHERE CDFILIAL  = P_FILIAL
                           AND NRLANCTONF = P_LANCTONF
                           AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
                     ELSE
                        UPDATE ITEMPRODUTO
                           SET VROUTRASDESPITEM = ROUND((VROUTRASDESPITEM + VRENCARGOIMPXML), 2)
                         WHERE CDFILIAL  = P_FILIAL
                           AND NRLANCTONF = P_LANCTONF
                           AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
                     END IF;
                  END LOOP;
               ELSE
                  FOR C_ITEMPRODUTO IN (SELECT NRSEQITPROD, VRTOTAITEM, VRENCARGOIMPXML
                                          FROM ITEMPRODUTO
                                         WHERE CDFILIAL = P_FILIAL
                                           AND NRLANCTONF = P_LANCTONF
                                           AND VRENCARGOIMPXML > 0) LOOP


                     SELECT ITEMPRODUTO.VRTOTAITEM,
                            TOTAL.SOMATOTAITEM,
                            DECODE(TOTAL.SOMATOTAITEM, 0, 0, ((100 * ITEMPRODUTO.VRTOTAITEM) / TOTAL.SOMATOTAITEM)) AS PERCENTITEM
                       INTO V_VRTOTAITEM, V_SOMATOTAITEM, V_PERCENTITEM
                       FROM ITEMPRODUTO, (SELECT CDFILIAL, NRLANCTONF, SUM(VRTOTAITEM) SOMATOTAITEM
                                            FROM ITEMPRODUTO
                                           WHERE CDFILIAL = P_FILIAL
                                             AND NRLANCTONF = P_LANCTONF
                                           GROUP BY CDFILIAL, NRLANCTONF) TOTAL
                      WHERE ITEMPRODUTO.CDFILIAL = TOTAL.CDFILIAL
                        AND ITEMPRODUTO.NRLANCTONF = TOTAL.NRLANCTONF
                        AND ITEMPRODUTO.NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;


                     IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                        UPDATE ITEMPRODUTO
                           SET VROUTRASDESPITEM = TRUNC(VRENCARGOIMPXML, 2)
                         WHERE CDFILIAL  = P_FILIAL
                           AND NRLANCTONF = P_LANCTONF
                           AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
                     ELSE
                        UPDATE ITEMPRODUTO
                           SET VROUTRASDESPITEM = ROUND(VRENCARGOIMPXML, 2)
                         WHERE CDFILIAL  = P_FILIAL
                           AND NRLANCTONF = P_LANCTONF
                           AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
                     END IF;
                  END LOOP;
               END IF;
            ELSE
               FOR C_ITEMPRODUTO IN (SELECT NRSEQITPROD, VRTOTAITEM
                                       FROM ITEMPRODUTO
                                      WHERE CDFILIAL = P_FILIAL
                                        AND NRLANCTONF = P_LANCTONF
                                        AND (NVL(IDPRODBONIF, 'N') = 'N')) LOOP

                  SELECT ITEMPRODUTO.VRTOTAITEM,
                         TOTAL.SOMATOTAITEM,
                         DECODE(TOTAL.SOMATOTAITEM, 0, 0, ((100 * ITEMPRODUTO.VRTOTAITEM) / TOTAL.SOMATOTAITEM)) AS PERCENTITEM
                    INTO V_VRTOTAITEM, V_SOMATOTAITEM, V_PERCENTITEM
                    FROM ITEMPRODUTO, (SELECT CDFILIAL, NRLANCTONF, SUM(VRTOTAITEM) SOMATOTAITEM
                                         FROM ITEMPRODUTO
                                        WHERE CDFILIAL = P_FILIAL
                                          AND NRLANCTONF = P_LANCTONF
                                          AND (NVL(IDPRODBONIF, 'N') = 'N')
                                        GROUP BY CDFILIAL, NRLANCTONF) TOTAL
                   WHERE ITEMPRODUTO.CDFILIAL = TOTAL.CDFILIAL
                     AND ITEMPRODUTO.NRLANCTONF = TOTAL.NRLANCTONF
                     AND ITEMPRODUTO.NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;

                  IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                     UPDATE ITEMPRODUTO
                        SET VROUTRASDESPITEM = TRUNC((C_ITEMENCARGO.VRITEMENCA * (V_PERCENTITEM / 100)), 2)
                      WHERE CDFILIAL  = P_FILIAL
                        AND NRLANCTONF = P_LANCTONF
                        AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
                  ELSE
                     UPDATE ITEMPRODUTO
                        SET VROUTRASDESPITEM = ROUND((C_ITEMENCARGO.VRITEMENCA * (V_PERCENTITEM / 100)), 2)
                      WHERE CDFILIAL  = P_FILIAL
                        AND NRLANCTONF = P_LANCTONF
                        AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
                  END IF;
               END LOOP;
            END IF;
            /*AJUSTE DE VALORES*/
            SELECT SUM(VROUTRASDESPITEM)
              INTO V_VROUTRASDESPITEM
              FROM ITEMPRODUTO
             WHERE CDFILIAL = P_FILIAL
               AND NRLANCTONF = P_LANCTONF;

            V_DIFERENCA := C_ITEMENCARGO.VRITEMENCA - V_VROUTRASDESPITEM;

            IF V_DIFERENCA <> 0 THEN
               UPDATE ITEMPRODUTO
                  SET VROUTRASDESPITEM = VROUTRASDESPITEM + V_DIFERENCA
                WHERE CDFILIAL = P_FILIAL
                  AND NRLANCTONF = P_LANCTONF
                  AND NRSEQITPROD = (SELECT MAX(NRSEQITPROD)
                                      FROM ITEMPRODUTO
                                      WHERE CDFILIAL = P_FILIAL
                                        AND NRLANCTONF = P_LANCTONF
                                        AND (NVL(IDPRODBONIF, 'N') = 'N')
                                        AND VRTOTAITEM = (SELECT MAX(VRTOTAITEM)
                                                           FROM ITEMPRODUTO
                                                          WHERE CDFILIAL = P_FILIAL
                                                            AND NRLANCTONF = P_LANCTONF
                                                            AND (NVL(IDPRODBONIF, 'N') = 'N')));

            END IF;
         ELSE
            UPDATE ITEMPRODUTO
               SET VROUTRASDESPITEM = 0
             WHERE CDFILIAL  = P_FILIAL
               AND NRLANCTONF = P_LANCTONF;
         END IF;
      END IF;

      /*ENCARGO DESPESAS ADUANEIRAS*/

      IF (C_ITEMENCARGO.CDENCARGONFE = '05') THEN
         /*REFAZ O RATEIO DO ENCARGO VERIFICANDO A INCIDENCIA DO IMPOSTO DE IMPORTACAO*/
         UPDATE ITEMPRODUTO
            SET VRDESPADUANEIRA = 0
          WHERE CDFILIAL  = P_FILIAL
            AND NRLANCTONF = P_LANCTONF;
         IF (C_ITEMENCARGO.VRITEMENCA > 0) THEN
            FOR C_ITEMPRODUTO IN (SELECT DISTINCT(I.NRSEQITPROD)
                                    FROM ITEMPROIMPOS I, IMPOSTO II
                                   WHERE I.NRLANCTONF    = P_LANCTONF
                                     AND I.CDFILIAL      = P_FILIAL
                                     AND I.CDIMPOSTO     = II.CDIMPOSTO
                                     AND II.CDIMPOSTONFE = '20') LOOP

               SELECT ITEMPRODUTO.VRTOTAITEM,
                      TOTAL.SOMATOTAITEM,
                      DECODE(TOTAL.SOMATOTAITEM, 0, 0, ((100 * ITEMPRODUTO.VRTOTAITEM) / TOTAL.SOMATOTAITEM)) AS PERCENTITEM
                 INTO V_VRTOTAITEM, V_SOMATOTAITEM, V_PERCENTITEM
                 FROM ITEMPRODUTO, (SELECT CDFILIAL, NRLANCTONF, SUM(VRTOTAITEM) SOMATOTAITEM
                                      FROM ITEMPRODUTO
                                     WHERE CDFILIAL = P_FILIAL
                                       AND NRLANCTONF = P_LANCTONF
                                     GROUP BY CDFILIAL, NRLANCTONF) TOTAL
                WHERE ITEMPRODUTO.CDFILIAL = TOTAL.CDFILIAL
                  AND ITEMPRODUTO.NRLANCTONF = TOTAL.NRLANCTONF
                  AND ITEMPRODUTO.NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;

               IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                  UPDATE ITEMPRODUTO
                     SET VRDESPADUANEIRA = TRUNC((C_ITEMENCARGO.VRITEMENCA * (V_PERCENTITEM / 100)), 2)
                   WHERE CDFILIAL  = P_FILIAL
                     AND NRLANCTONF = P_LANCTONF
                     AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
               ELSE
                  UPDATE ITEMPRODUTO
                     SET VRDESPADUANEIRA = ROUND((C_ITEMENCARGO.VRITEMENCA * (V_PERCENTITEM / 100)), 2)
                   WHERE CDFILIAL  = P_FILIAL
                     AND NRLANCTONF = P_LANCTONF
                     AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
               END IF;
            END LOOP;
            /*AJUSTE DE VALORES*/
            SELECT SUM(VRDESPADUANEIRA)
              INTO V_VRDESPADUANEIRA
              FROM ITEMPRODUTO
             WHERE CDFILIAL = P_FILIAL
               AND NRLANCTONF = P_LANCTONF;

            V_DIFERENCA := C_ITEMENCARGO.VRITEMENCA - V_VRDESPADUANEIRA;

            IF V_DIFERENCA <> 0 THEN
               UPDATE ITEMPRODUTO
                  SET VRDESPADUANEIRA = VRDESPADUANEIRA + V_DIFERENCA
                WHERE CDFILIAL = P_FILIAL
                  AND NRLANCTONF = P_LANCTONF
                  AND NRSEQITPROD = (SELECT MAX(II.NRSEQITPROD)
                                       FROM ITEMPRODUTO I, ITEMPROIMPOS II, IMPOSTO S
                                      WHERE I.CDFILIAL     = P_FILIAL
                                        AND I.NRLANCTONF   = P_LANCTONF
                                        AND I.CDFILIAL     = II.CDFILIAL
                                        AND I.NRLANCTONF   = II.NRLANCTONF
                                        AND I.NRSEQITPROD  = II.NRSEQITPROD
                                        AND II.CDIMPOSTO   = S.CDIMPOSTO
                                        AND S.CDIMPOSTONFE = '20'
                                        AND VRTOTAITEM = (SELECT MAX(VRTOTAITEM)
                                                            FROM ITEMPRODUTO I, ITEMPROIMPOS II, IMPOSTO S
                                                           WHERE I.CDFILIAL     = P_FILIAL
                                                             AND I.NRLANCTONF   = P_LANCTONF
                                                             AND I.CDFILIAL     = II.CDFILIAL
                                                             AND I.NRLANCTONF   = II.NRLANCTONF
                                                             AND I.NRSEQITPROD  = II.NRSEQITPROD
                                                             AND II.CDIMPOSTO   = S.CDIMPOSTO
                                                             AND S.CDIMPOSTONFE = '20'));

            END IF;
         ELSE
            UPDATE ITEMPRODUTO
               SET VRDESPADUANEIRA = 0
             WHERE CDFILIAL  = P_FILIAL
               AND NRLANCTONF = P_LANCTONF;
         END IF;
      END IF;      
   END LOOP;

   /*GRAVAR O VALOR DOS ENCARGOS NA ITEMPRODUTO DE ACORDO COM O PESO LIQUIDO*/
   IF NOT (V_ENCARGOLIQUIDO = 'N') THEN
      FOR C_ITEMENCARGO IN (SELECT ENCARGO.CDENCARGONFE, SUM(ITEMENCARGO.VRITEMENCA) AS VRITEMENCA
                              FROM ITEMENCARGO, ENCARGO
                             WHERE ITEMENCARGO.CDENCARGO = ENCARGO.CDENCARGO
                               AND ENCARGO.CDENCARGONFE IN ('01', '02', '03', '04', '05')
                               AND NVL(ITEMENCARGO.VRITEMENCA, 0) >= 0
                               AND CDFILIAL = P_FILIAL
                               AND NRLANCTONF = P_LANCTONF
                               AND ((V_ENCARGOLIQUIDO = 'T') OR (INSTR(V_ENCARGOLIQUIDO, ITEMENCARGO.CDENCARGO) > 0 ))
                             GROUP BY ENCARGO.CDENCARGONFE) LOOP
         /* ENCARGO FRETE */
         IF (C_ITEMENCARGO.CDENCARGONFE = '01') THEN
            IF (C_ITEMENCARGO.VRITEMENCA > 0) THEN
               /* UPDATE PARA ZERAR TODOS OS PRODUTOS PARA GRAVAR EM SEGUIDA SOMENTE PARA OS PRODUTOS QUE TÊM PESO LÍQUIDO CADASTRADO*/
               UPDATE ITEMPRODUTO
                  SET VRFRETEITEM = 0
                WHERE CDFILIAL = P_FILIAL
                  AND NRLANCTONF = P_LANCTONF;

               FOR C_ITEMPRODUTO IN (SELECT IP.NRSEQITPROD, (PR.VRPESOLIQUPR * IP.QTITEMPROD) AS VRTOTAITEM
                                       FROM ITEMPRODUTO IP, PRODUTO PR
                                      WHERE IP.CDFILIAL = P_FILIAL
                                        AND IP.NRLANCTONF = P_LANCTONF
                                        AND PR.CDPRODUTO = IP.CDPRODUTO
                                        AND (NVL(IP.IDPRODBONIF, 'N') = 'N')
                                        AND (NVL(PR.VRPESOLIQUPR, 0) > 0)) LOOP

                  SELECT ITEMPRODUTO.VRTOTAITEM,
                         TOTAL.SOMATOTAITEM,
                         DECODE(TOTAL.SOMATOTAITEM, 0, 0, ((100 * C_ITEMPRODUTO.VRTOTAITEM) / TOTAL.SOMATOTAITEM)) AS PERCENTITEM
                    INTO V_VRTOTAITEM, V_SOMATOTAITEM, V_PERCENTITEM
                    FROM ITEMPRODUTO, (SELECT CDFILIAL, NRLANCTONF, SUM(PR.VRPESOLIQUPR * IP.QTITEMPROD) AS SOMATOTAITEM
                                         FROM ITEMPRODUTO IP, PRODUTO PR
                                        WHERE IP.CDFILIAL = P_FILIAL
                                          AND IP.NRLANCTONF = P_LANCTONF
                                          AND PR.CDPRODUTO = IP.CDPRODUTO
                                          AND (NVL(PR.VRPESOLIQUPR, 0) > 0)
                                          AND (NVL(IP.IDPRODBONIF, 'N') = 'N')
                                        GROUP BY IP.CDFILIAL, IP.NRLANCTONF) TOTAL
                   WHERE ITEMPRODUTO.CDFILIAL = TOTAL.CDFILIAL
                     AND ITEMPRODUTO.NRLANCTONF = TOTAL.NRLANCTONF
                     AND ITEMPRODUTO.NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;

                  IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                     UPDATE ITEMPRODUTO
                        SET VRFRETEITEM = TRUNC(C_ITEMENCARGO.VRITEMENCA * (V_PERCENTITEM / 100), 2)
                      WHERE CDFILIAL  = P_FILIAL
                        AND NRLANCTONF = P_LANCTONF
                        AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
                  ELSE
                     UPDATE ITEMPRODUTO
                        SET VRFRETEITEM = ROUND(C_ITEMENCARGO.VRITEMENCA * (V_PERCENTITEM / 100), 2)
                      WHERE CDFILIAL  = P_FILIAL
                        AND NRLANCTONF = P_LANCTONF
                        AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
                  END IF;
               END LOOP;

               /*AJUSTE DE VALORES*/
               SELECT SUM(VRFRETEITEM)
                 INTO V_VRFRETEITEM
                 FROM ITEMPRODUTO
                WHERE CDFILIAL = P_FILIAL
                  AND NRLANCTONF = P_LANCTONF;

               V_DIFERENCA := C_ITEMENCARGO.VRITEMENCA - V_VRFRETEITEM;

               IF V_DIFERENCA <> 0 THEN
                  UPDATE ITEMPRODUTO
                     SET VRFRETEITEM = VRFRETEITEM + V_DIFERENCA
                   WHERE CDFILIAL = P_FILIAL
                     AND NRLANCTONF = P_LANCTONF
                     AND NRSEQITPROD = (SELECT MAX(NRSEQITPROD)
                                         FROM ITEMPRODUTO IP, PRODUTO PR
                                         WHERE IP.CDFILIAL = P_FILIAL
                                           AND IP.NRLANCTONF = P_LANCTONF
                                           AND PR.CDPRODUTO = IP.CDPRODUTO
                                           AND (NVL(PR.VRPESOLIQUPR, 0) > 0)
                                           AND (NVL(IP.IDPRODBONIF, 'N') = 'N')
                                           AND VRTOTAITEM = (SELECT MAX(VRTOTAITEM)
                                                              FROM ITEMPRODUTO I, PRODUTO PR
                                                             WHERE I.CDFILIAL = P_FILIAL
                                                               AND I.NRLANCTONF = P_LANCTONF
                                                               AND (NVL(PR.VRPESOLIQUPR, 0) > 0)
                                                               AND (NVL(I.IDPRODBONIF, 'N') = 'N')));

               END IF;
            ELSE
               UPDATE ITEMPRODUTO
                  SET VRFRETEITEM = 0
                WHERE CDFILIAL  = P_FILIAL
                  AND NRLANCTONF = P_LANCTONF;
            END IF;
         END IF;

         /* ENCARGO SEGURO */
         IF (C_ITEMENCARGO.CDENCARGONFE = '02') THEN
            IF (C_ITEMENCARGO.VRITEMENCA > 0) THEN
               UPDATE ITEMPRODUTO
                  SET VRSEGURITEM = 0
                WHERE CDFILIAL = P_FILIAL
                  AND NRLANCTONF = P_LANCTONF;
               FOR C_ITEMPRODUTO IN (SELECT IP.NRSEQITPROD, (PR.VRPESOLIQUPR * IP.QTITEMPROD) AS VRTOTAITEM
                                       FROM ITEMPRODUTO IP, PRODUTO PR
                                      WHERE IP.CDFILIAL = P_FILIAL
                                        AND IP.NRLANCTONF = P_LANCTONF
                                        AND PR.CDPRODUTO = IP.CDPRODUTO
                                        AND (NVL(IP.IDPRODBONIF, 'N') = 'N')
                                        AND (NVL(PR.VRPESOLIQUPR, 0) > 0)) LOOP

                  SELECT ITEMPRODUTO.VRTOTAITEM,
                         TOTAL.SOMATOTAITEM,
                         DECODE(TOTAL.SOMATOTAITEM, 0, 0, ((100 * C_ITEMPRODUTO.VRTOTAITEM) / TOTAL.SOMATOTAITEM)) AS PERCENTITEM
                    INTO V_VRTOTAITEM, V_SOMATOTAITEM, V_PERCENTITEM
                    FROM ITEMPRODUTO, (SELECT CDFILIAL, NRLANCTONF, SUM(PR.VRPESOLIQUPR * IP.QTITEMPROD) AS SOMATOTAITEM
                                         FROM ITEMPRODUTO IP, PRODUTO PR
                                        WHERE IP.CDFILIAL = P_FILIAL
                                          AND IP.NRLANCTONF = P_LANCTONF
                                          AND PR.CDPRODUTO = IP.CDPRODUTO
                                          AND (NVL(PR.VRPESOLIQUPR, 0) > 0)
                                          AND (NVL(IP.IDPRODBONIF, 'N') = 'N')
                                        GROUP BY IP.CDFILIAL, IP.NRLANCTONF) TOTAL
                   WHERE ITEMPRODUTO.CDFILIAL = TOTAL.CDFILIAL
                     AND ITEMPRODUTO.NRLANCTONF = TOTAL.NRLANCTONF
                     AND ITEMPRODUTO.NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;

                  IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                     UPDATE ITEMPRODUTO
                        SET VRSEGURITEM = TRUNC(C_ITEMENCARGO.VRITEMENCA * (V_PERCENTITEM / 100), 2)
                      WHERE CDFILIAL  = P_FILIAL
                        AND NRLANCTONF = P_LANCTONF
                        AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
                  ELSE
                     UPDATE ITEMPRODUTO
                        SET VRSEGURITEM = ROUND(C_ITEMENCARGO.VRITEMENCA * (V_PERCENTITEM / 100), 2)
                      WHERE CDFILIAL  = P_FILIAL
                        AND NRLANCTONF = P_LANCTONF
                        AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
                  END IF;
               END LOOP;
               /*AJUSTE DE VALORES*/
               SELECT SUM(VRSEGURITEM)
                 INTO V_VRSEGURITEM
                 FROM ITEMPRODUTO
                WHERE CDFILIAL = P_FILIAL
                  AND NRLANCTONF = P_LANCTONF;

               V_DIFERENCA := C_ITEMENCARGO.VRITEMENCA - V_VRSEGURITEM;

               IF V_DIFERENCA <> 0 THEN
                  UPDATE ITEMPRODUTO
                     SET VRSEGURITEM = VRSEGURITEM + V_DIFERENCA
                   WHERE CDFILIAL = P_FILIAL
                     AND NRLANCTONF = P_LANCTONF
                     AND NRSEQITPROD = (SELECT MAX(NRSEQITPROD)
                                         FROM ITEMPRODUTO IP, PRODUTO PR
                                         WHERE IP.CDFILIAL = P_FILIAL
                                           AND IP.NRLANCTONF = P_LANCTONF
                                           AND PR.CDPRODUTO = IP.CDPRODUTO
                                           AND (NVL(PR.VRPESOLIQUPR, 0) > 0)
                                           AND (NVL(IP.IDPRODBONIF, 'N') = 'N')
                                           AND VRTOTAITEM = (SELECT MAX(VRTOTAITEM)
                                                              FROM ITEMPRODUTO I, PRODUTO PR
                                                             WHERE I.CDFILIAL = P_FILIAL
                                                               AND I.NRLANCTONF = P_LANCTONF
                                                               AND (NVL(PR.VRPESOLIQUPR, 0) > 0)
                                                               AND (NVL(I.IDPRODBONIF, 'N') = 'N')));

               END IF;
            ELSE
               UPDATE ITEMPRODUTO
                  SET VRSEGURITEM = 0
                WHERE CDFILIAL  = P_FILIAL
                  AND NRLANCTONF = P_LANCTONF;
            END IF;
         END IF;

         /* ENCARGO DESCONTO */
         IF (C_ITEMENCARGO.CDENCARGONFE = '03') THEN
            IF (C_ITEMENCARGO.VRITEMENCA > 0) THEN
               UPDATE ITEMPRODUTO
                  SET VRENCARGODESC = 0
                WHERE CDFILIAL = P_FILIAL
                  AND NRLANCTONF = P_LANCTONF;
               FOR C_ITEMPRODUTO IN (SELECT IP.NRSEQITPROD, (PR.VRPESOLIQUPR * IP.QTITEMPROD) AS VRTOTAITEM
                                       FROM ITEMPRODUTO IP, PRODUTO PR
                                      WHERE IP.CDFILIAL = P_FILIAL
                                        AND IP.NRLANCTONF = P_LANCTONF
                                        AND PR.CDPRODUTO = IP.CDPRODUTO
                                        AND (NVL(PR.VRPESOLIQUPR, 0) > 0)
                                        AND (NVL(IP.IDPRODBONIF, 'N') = 'N')) LOOP

                  SELECT ITEMPRODUTO.VRTOTAITEM,
                         TOTAL.SOMATOTAITEM,
                         DECODE(TOTAL.SOMATOTAITEM, 0, 0, ((100 * C_ITEMPRODUTO.VRTOTAITEM) / TOTAL.SOMATOTAITEM)) AS PERCENTITEM
                    INTO V_VRTOTAITEM, V_SOMATOTAITEM, V_PERCENTITEM
                    FROM ITEMPRODUTO, (SELECT CDFILIAL, NRLANCTONF, SUM(PR.VRPESOLIQUPR * IP.QTITEMPROD) AS SOMATOTAITEM
                                         FROM ITEMPRODUTO IP, PRODUTO PR
                                        WHERE IP.CDFILIAL = P_FILIAL
                                          AND IP.NRLANCTONF = P_LANCTONF
                                          AND PR.CDPRODUTO = IP.CDPRODUTO
                                          AND (NVL(PR.VRPESOLIQUPR, 0) > 0)
                                          AND (NVL(IP.IDPRODBONIF, 'N') = 'N')
                                        GROUP BY IP.CDFILIAL, IP.NRLANCTONF) TOTAL
                   WHERE ITEMPRODUTO.CDFILIAL = TOTAL.CDFILIAL
                     AND ITEMPRODUTO.NRLANCTONF = TOTAL.NRLANCTONF
                     AND ITEMPRODUTO.NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;

                  IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                     UPDATE ITEMPRODUTO
                        SET VRENCARGODESC = TRUNC(VRDESCITEM + (C_ITEMENCARGO.VRITEMENCA * (V_PERCENTITEM / 100)), 2)
                      WHERE CDFILIAL  = P_FILIAL
                        AND NRLANCTONF = P_LANCTONF
                        AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
                  ELSE
                     UPDATE ITEMPRODUTO
                        SET VRENCARGODESC = ROUND(VRDESCITEM + (C_ITEMENCARGO.VRITEMENCA * (V_PERCENTITEM / 100)), 2)
                      WHERE CDFILIAL  = P_FILIAL
                        AND NRLANCTONF = P_LANCTONF
                        AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
                  END IF;
               END LOOP;
               /*AJUSTE DE VALORES*/
               SELECT SUM(VRENCARGODESC)
                 INTO V_VRENCARGODESC
                 FROM ITEMPRODUTO
                WHERE CDFILIAL = P_FILIAL
                  AND NRLANCTONF = P_LANCTONF;

               SELECT SUM(VRDESCITEM)
                 INTO V_SUMVRDESCITEM
                 FROM ITEMPRODUTO
                WHERE CDFILIAL  = P_FILIAL
                  AND NRLANCTONF = P_LANCTONF;

               V_DIFERENCA := (C_ITEMENCARGO.VRITEMENCA+V_SUMVRDESCITEM) - V_VRENCARGODESC;

               IF V_DIFERENCA <> 0 THEN
                  UPDATE ITEMPRODUTO
                     SET VRENCARGODESC = VRENCARGODESC + V_DIFERENCA
                   WHERE CDFILIAL = P_FILIAL
                     AND NRLANCTONF = P_LANCTONF
                     AND NRSEQITPROD = (SELECT MAX(NRSEQITPROD)
                                         FROM ITEMPRODUTO IP, PRODUTO PR
                                         WHERE IP.CDFILIAL = P_FILIAL
                                           AND IP.NRLANCTONF = P_LANCTONF
                                           AND PR.CDPRODUTO = IP.CDPRODUTO
                                           AND (NVL(PR.VRPESOLIQUPR, 0) > 0)
                                           AND (NVL(IP.IDPRODBONIF, 'N') = 'N')
                                           AND VRTOTAITEM = (SELECT MAX(VRTOTAITEM)
                                                              FROM ITEMPRODUTO I, PRODUTO PR
                                                             WHERE I.CDFILIAL = P_FILIAL
                                                               AND I.NRLANCTONF = P_LANCTONF
                                                               AND (NVL(PR.VRPESOLIQUPR, 0) > 0)
                                                               AND (NVL(I.IDPRODBONIF, 'N') = 'N')));

               END IF;
            ELSE
               UPDATE ITEMPRODUTO
                  SET VRENCARGODESC = VRDESCITEM + 0
                WHERE CDFILIAL  = P_FILIAL
                  AND NRLANCTONF = P_LANCTONF;
            END IF;
         END IF;
         /*ENCARGO OUTRAS DESPESAS*/
         IF (C_ITEMENCARGO.CDENCARGONFE = '04') THEN
            IF (C_ITEMENCARGO.VRITEMENCA > 0) THEN

               UPDATE ITEMPRODUTO
                  SET VROUTRASDESPITEM = 0
                WHERE CDFILIAL = P_FILIAL
                  AND NRLANCTONF = P_LANCTONF;

               IF (V_IDNFORIGVIAXML = 'S') THEN
                  BEGIN
                     SELECT SUM(VRENCARGOIMPXML)
                       INTO V_TOTAENCIMPXML
                       FROM ITEMPRODUTO
                      WHERE CDFILIAL = P_FILIAL
                        AND NRLANCTONF = P_LANCTONF
                        AND VRENCARGOIMPXML > 0;
                  EXCEPTION
                     WHEN NO_DATA_FOUND THEN
                        V_TOTAENCIMPXML := 0;
                  END;

                  IF (ROUND(C_ITEMENCARGO.VRITEMENCA, 2) > ROUND(V_TOTAENCIMPXML, 2)) THEN
                     FOR C_ITEMPRODUTO IN (SELECT NRSEQITPROD, VRTOTAITEM
                                             FROM ITEMPRODUTO
                                            WHERE CDFILIAL = P_FILIAL
                                              AND NRLANCTONF = P_LANCTONF) LOOP

                        SELECT ITEMPRODUTO.VRTOTAITEM,
                               TOTAL.SOMATOTAITEM,
                               DECODE(TOTAL.SOMATOTAITEM, 0, 0, ((100 * ITEMPRODUTO.VRTOTAITEM) / TOTAL.SOMATOTAITEM)) AS PERCENTITEM
                          INTO V_VRTOTAITEM, V_SOMATOTAITEM, V_PERCENTITEM
                          FROM ITEMPRODUTO, (SELECT CDFILIAL, NRLANCTONF, SUM(VRTOTAITEM) SOMATOTAITEM
                                               FROM ITEMPRODUTO
                                              WHERE CDFILIAL = P_FILIAL
                                                AND NRLANCTONF = P_LANCTONF
                                              GROUP BY CDFILIAL, NRLANCTONF) TOTAL
                         WHERE ITEMPRODUTO.CDFILIAL = TOTAL.CDFILIAL
                           AND ITEMPRODUTO.NRLANCTONF = TOTAL.NRLANCTONF
                           AND ITEMPRODUTO.NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;

                        IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                           UPDATE ITEMPRODUTO
                              SET VROUTRASDESPITEM = TRUNC(((C_ITEMENCARGO.VRITEMENCA - V_TOTAENCIMPXML) * (V_PERCENTITEM / 100)), 2)
                            WHERE CDFILIAL  = P_FILIAL
                              AND NRLANCTONF = P_LANCTONF
                              AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
                        ELSE
                           UPDATE ITEMPRODUTO
                              SET VROUTRASDESPITEM = ROUND(((C_ITEMENCARGO.VRITEMENCA - V_TOTAENCIMPXML) * (V_PERCENTITEM / 100)), 2)
                            WHERE CDFILIAL  = P_FILIAL
                              AND NRLANCTONF = P_LANCTONF
                              AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
                        END IF;
                     END LOOP;

                     FOR C_ITEMPRODUTO IN (SELECT NRSEQITPROD, VRTOTAITEM, VRENCARGOIMPXML
                                             FROM ITEMPRODUTO
                                            WHERE CDFILIAL = P_FILIAL
                                              AND NRLANCTONF = P_LANCTONF
                                              AND VRENCARGOIMPXML > 0) LOOP


                        SELECT ITEMPRODUTO.VRTOTAITEM,
                               TOTAL.SOMATOTAITEM,
                               DECODE(TOTAL.SOMATOTAITEM, 0, 0, ((100 * ITEMPRODUTO.VRTOTAITEM) / TOTAL.SOMATOTAITEM)) AS PERCENTITEM
                          INTO V_VRTOTAITEM, V_SOMATOTAITEM, V_PERCENTITEM
                          FROM ITEMPRODUTO, (SELECT CDFILIAL, NRLANCTONF, SUM(VRTOTAITEM) SOMATOTAITEM
                                               FROM ITEMPRODUTO
                                              WHERE CDFILIAL = P_FILIAL
                                                AND NRLANCTONF = P_LANCTONF
                                              GROUP BY CDFILIAL, NRLANCTONF) TOTAL
                         WHERE ITEMPRODUTO.CDFILIAL = TOTAL.CDFILIAL
                           AND ITEMPRODUTO.NRLANCTONF = TOTAL.NRLANCTONF
                           AND ITEMPRODUTO.NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;


                        IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                           UPDATE ITEMPRODUTO
                              SET VROUTRASDESPITEM = TRUNC((VROUTRASDESPITEM + VRENCARGOIMPXML), 2)
                            WHERE CDFILIAL  = P_FILIAL
                              AND NRLANCTONF = P_LANCTONF
                              AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
                        ELSE
                           UPDATE ITEMPRODUTO
                              SET VROUTRASDESPITEM = ROUND((VROUTRASDESPITEM + VRENCARGOIMPXML), 2)
                            WHERE CDFILIAL  = P_FILIAL
                              AND NRLANCTONF = P_LANCTONF
                              AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
                        END IF;
                     END LOOP;
                  ELSE
                     FOR C_ITEMPRODUTO IN (SELECT NRSEQITPROD, VRTOTAITEM, VRENCARGOIMPXML
                                             FROM ITEMPRODUTO
                                            WHERE CDFILIAL = P_FILIAL
                                              AND NRLANCTONF = P_LANCTONF
                                              AND VRENCARGOIMPXML > 0) LOOP


                        SELECT ITEMPRODUTO.VRTOTAITEM,
                               TOTAL.SOMATOTAITEM,
                               DECODE(TOTAL.SOMATOTAITEM, 0, 0, ((100 * ITEMPRODUTO.VRTOTAITEM) / TOTAL.SOMATOTAITEM)) AS PERCENTITEM
                          INTO V_VRTOTAITEM, V_SOMATOTAITEM, V_PERCENTITEM
                          FROM ITEMPRODUTO, (SELECT CDFILIAL, NRLANCTONF, SUM(VRTOTAITEM) SOMATOTAITEM
                                               FROM ITEMPRODUTO
                                              WHERE CDFILIAL = P_FILIAL
                                                AND NRLANCTONF = P_LANCTONF
                                              GROUP BY CDFILIAL, NRLANCTONF) TOTAL
                         WHERE ITEMPRODUTO.CDFILIAL = TOTAL.CDFILIAL
                           AND ITEMPRODUTO.NRLANCTONF = TOTAL.NRLANCTONF
                           AND ITEMPRODUTO.NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;


                        IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                           UPDATE ITEMPRODUTO
                              SET VROUTRASDESPITEM = TRUNC(VRENCARGOIMPXML, 2)
                            WHERE CDFILIAL  = P_FILIAL
                              AND NRLANCTONF = P_LANCTONF
                              AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
                        ELSE
                           UPDATE ITEMPRODUTO
                              SET VROUTRASDESPITEM = ROUND(VRENCARGOIMPXML, 2)
                            WHERE CDFILIAL  = P_FILIAL
                              AND NRLANCTONF = P_LANCTONF
                              AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
                        END IF;
                     END LOOP;
                  END IF;
               ELSE
                  FOR C_ITEMPRODUTO IN (SELECT IP.NRSEQITPROD, (PR.VRPESOLIQUPR * IP.QTITEMPROD) AS VRTOTAITEM
                                          FROM ITEMPRODUTO IP, PRODUTO PR
                                         WHERE IP.CDFILIAL = P_FILIAL
                                           AND IP.NRLANCTONF = P_LANCTONF
                                           AND PR.CDPRODUTO = IP.CDPRODUTO
                                           AND (NVL(PR.VRPESOLIQUPR, 0) > 0)
                                           AND (NVL(IP.IDPRODBONIF, 'N') = 'N')) LOOP

                     SELECT ITEMPRODUTO.VRTOTAITEM,
                            TOTAL.SOMATOTAITEM,
                            DECODE(TOTAL.SOMATOTAITEM, 0, 0, ((100 * C_ITEMPRODUTO.VRTOTAITEM) / TOTAL.SOMATOTAITEM)) AS PERCENTITEM
                       INTO V_VRTOTAITEM, V_SOMATOTAITEM, V_PERCENTITEM
                       FROM ITEMPRODUTO, (SELECT CDFILIAL, NRLANCTONF, SUM(PR.VRPESOLIQUPR * IP.QTITEMPROD) AS SOMATOTAITEM
                                            FROM ITEMPRODUTO IP, PRODUTO PR
                                           WHERE IP.CDFILIAL = P_FILIAL
                                             AND IP.NRLANCTONF = P_LANCTONF
                                             AND PR.CDPRODUTO = IP.CDPRODUTO
                                             AND (NVL(PR.VRPESOLIQUPR, 0) > 0)
                                             AND (NVL(IP.IDPRODBONIF, 'N') = 'N')
                                           GROUP BY IP.CDFILIAL, IP.NRLANCTONF) TOTAL
                      WHERE ITEMPRODUTO.CDFILIAL = TOTAL.CDFILIAL
                        AND ITEMPRODUTO.NRLANCTONF = TOTAL.NRLANCTONF
                        AND ITEMPRODUTO.NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;

                     IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                        UPDATE ITEMPRODUTO
                           SET VROUTRASDESPITEM = TRUNC((C_ITEMENCARGO.VRITEMENCA * (V_PERCENTITEM / 100)), 2)
                         WHERE CDFILIAL  = P_FILIAL
                           AND NRLANCTONF = P_LANCTONF
                           AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
                     ELSE
                        UPDATE ITEMPRODUTO
                           SET VROUTRASDESPITEM = ROUND((C_ITEMENCARGO.VRITEMENCA * (V_PERCENTITEM / 100)), 2)
                         WHERE CDFILIAL  = P_FILIAL
                           AND NRLANCTONF = P_LANCTONF
                           AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
                     END IF;
                  END LOOP;
               END IF;
               /*AJUSTE DE VALORES*/
               SELECT SUM(VROUTRASDESPITEM)
                 INTO V_VROUTRASDESPITEM
                 FROM ITEMPRODUTO
                WHERE CDFILIAL = P_FILIAL
                  AND NRLANCTONF = P_LANCTONF;

               V_DIFERENCA := C_ITEMENCARGO.VRITEMENCA - V_VROUTRASDESPITEM;

               IF V_DIFERENCA <> 0 THEN
                  UPDATE ITEMPRODUTO
                     SET VROUTRASDESPITEM = VROUTRASDESPITEM + V_DIFERENCA
                   WHERE CDFILIAL = P_FILIAL
                     AND NRLANCTONF = P_LANCTONF
                     AND NRSEQITPROD = (SELECT MAX(NRSEQITPROD)
                                         FROM ITEMPRODUTO IP, PRODUTO PR
                                         WHERE IP.CDFILIAL = P_FILIAL
                                           AND IP.NRLANCTONF = P_LANCTONF
                                           AND PR.CDPRODUTO = IP.CDPRODUTO
                                           AND (NVL(PR.VRPESOLIQUPR, 0) > 0)
                                           AND (NVL(IP.IDPRODBONIF, 'N') = 'N')
                                           AND VRTOTAITEM = (SELECT MAX(VRTOTAITEM)
                                                              FROM ITEMPRODUTO I, PRODUTO PR
                                                             WHERE I.CDFILIAL = P_FILIAL
                                                               AND I.NRLANCTONF = P_LANCTONF
                                                               AND (NVL(PR.VRPESOLIQUPR, 0) > 0)
                                                               AND (NVL(I.IDPRODBONIF, 'N') = 'N')));

               END IF;
            ELSE
               UPDATE ITEMPRODUTO
                  SET VROUTRASDESPITEM = 0
                WHERE CDFILIAL  = P_FILIAL
                  AND NRLANCTONF = P_LANCTONF;
            END IF;
         END IF;

         /*ENCARGO DESPESAS ADUANEIRAS*/
         IF (C_ITEMENCARGO.CDENCARGONFE = '05') THEN
            /*REFAZ O RATEIO DO ENCARGO VERIFICANDO A INCIDENCIA DO IMPOSTO DE IMPORTACAO*/
            UPDATE ITEMPRODUTO
               SET VRDESPADUANEIRA = 0
             WHERE CDFILIAL  = P_FILIAL
               AND NRLANCTONF = P_LANCTONF;
            IF (C_ITEMENCARGO.VRITEMENCA > 0) THEN
               FOR C_ITEMPRODUTO IN (SELECT DISTINCT(I.NRSEQITPROD)
                                       FROM ITEMPROIMPOS I, IMPOSTO II
                                      WHERE I.NRLANCTONF    = P_LANCTONF
                                        AND I.CDFILIAL      = P_FILIAL
                                        AND I.CDIMPOSTO     = II.CDIMPOSTO
                                        AND II.CDIMPOSTONFE = '20') LOOP

                  SELECT ITEMPRODUTO.VRTOTAITEM,
                         TOTAL.SOMATOTAITEM,
                         DECODE(TOTAL.SOMATOTAITEM, 0, 0, ((100 * ITEMPRODUTO.VRTOTAITEM) / TOTAL.SOMATOTAITEM)) AS PERCENTITEM
                    INTO V_VRTOTAITEM, V_SOMATOTAITEM, V_PERCENTITEM
                    FROM ITEMPRODUTO, (SELECT CDFILIAL, NRLANCTONF, SUM(VRTOTAITEM) SOMATOTAITEM
                                         FROM ITEMPRODUTO
                                        WHERE CDFILIAL = P_FILIAL
                                          AND NRLANCTONF = P_LANCTONF
                                        GROUP BY CDFILIAL, NRLANCTONF) TOTAL
                   WHERE ITEMPRODUTO.CDFILIAL = TOTAL.CDFILIAL
                     AND ITEMPRODUTO.NRLANCTONF = TOTAL.NRLANCTONF
                     AND ITEMPRODUTO.NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;

                  IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (NVL(V_IDORIGDESTNF, 'C') <> 'L') THEN
                     UPDATE ITEMPRODUTO
                        SET VRDESPADUANEIRA = TRUNC((C_ITEMENCARGO.VRITEMENCA * (V_PERCENTITEM / 100)), 2)
                      WHERE CDFILIAL  = P_FILIAL
                        AND NRLANCTONF = P_LANCTONF
                        AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
                  ELSE
                     UPDATE ITEMPRODUTO
                        SET VRDESPADUANEIRA = ROUND((C_ITEMENCARGO.VRITEMENCA * (V_PERCENTITEM / 100)), 2)
                      WHERE CDFILIAL  = P_FILIAL
                        AND NRLANCTONF = P_LANCTONF
                        AND NRSEQITPROD = C_ITEMPRODUTO.NRSEQITPROD;
                  END IF;
               END LOOP;
               /*AJUSTE DE VALORES*/
               SELECT SUM(VRDESPADUANEIRA)
                 INTO V_VRDESPADUANEIRA
                 FROM ITEMPRODUTO
                WHERE CDFILIAL = P_FILIAL
                  AND NRLANCTONF = P_LANCTONF;

               V_DIFERENCA := C_ITEMENCARGO.VRITEMENCA - V_VRDESPADUANEIRA;

               IF V_DIFERENCA <> 0 THEN
                  UPDATE ITEMPRODUTO
                     SET VRDESPADUANEIRA = VRDESPADUANEIRA + V_DIFERENCA
                   WHERE CDFILIAL = P_FILIAL
                     AND NRLANCTONF = P_LANCTONF
                     AND NRSEQITPROD = (SELECT MAX(II.NRSEQITPROD)
                                          FROM ITEMPRODUTO I, ITEMPROIMPOS II, IMPOSTO S
                                         WHERE I.CDFILIAL     = P_FILIAL
                                           AND I.NRLANCTONF   = P_LANCTONF
                                           AND I.CDFILIAL     = II.CDFILIAL
                                           AND I.NRLANCTONF   = II.NRLANCTONF
                                           AND I.NRSEQITPROD  = II.NRSEQITPROD
                                           AND II.CDIMPOSTO   = S.CDIMPOSTO
                                           AND S.CDIMPOSTONFE = '20'
                                           AND VRTOTAITEM = (SELECT MAX(VRTOTAITEM)
                                                               FROM ITEMPRODUTO I, ITEMPROIMPOS II, IMPOSTO S
                                                              WHERE I.CDFILIAL     = P_FILIAL
                                                                AND I.NRLANCTONF   = P_LANCTONF
                                                                AND I.CDFILIAL     = II.CDFILIAL
                                                                AND I.NRLANCTONF   = II.NRLANCTONF
                                                                AND I.NRSEQITPROD  = II.NRSEQITPROD
                                                                AND II.CDIMPOSTO   = S.CDIMPOSTO
                                                                AND S.CDIMPOSTONFE = '20'));

               END IF;
            ELSE
               UPDATE ITEMPRODUTO
                  SET VRDESPADUANEIRA = 0
                WHERE CDFILIAL  = P_FILIAL
                  AND NRLANCTONF = P_LANCTONF;
            END IF;
         END IF;
      END LOOP;
   END IF;
   /*GRAVAR O VALOR DOS ENCARGOS NA ITEMPRODUTO DE ACORDO COM O PESO LIQUIDO*/

   CALCULA_IMPOSTO_COMBUSTIVEL(P_FILIAL, P_LANCTONF, 'S', P_CLIENTE, V_PAISORIG, V_ESTAORIG);   

--CÁLCULO DO VALOR TOTAL DA NOTA FISCAL

   SELECT SUM(VRITEMENCA)
   INTO   V_SOMAENCA
   FROM ITEMENCARGO IE, ENCARGO EN
   WHERE IE.CDFILIAL   = P_FILIAL     AND
         IE.NRLANCTONF = P_LANCTONF   AND
         IE.CDENCARGO  = EN.CDENCARGO AND
         IDENCARGO     = w_A;

   SELECT SUM(VRITEMENCA)
   INTO   V_MENOENCA
   FROM ITEMENCARGO IE, ENCARGO EN
   WHERE IE.CDFILIAL   = P_FILIAL     AND
         IE.NRLANCTONF = P_LANCTONF   AND
         IE.CDENCARGO  = EN.CDENCARGO AND
         IDENCARGO     = w_D;

   IF V_IDOPERDEVONF = 'S' THEN
      SELECT SUM(VRTOTIMPONF)
      INTO   V_SOMAIMPO
      FROM IMPOSNFTOT, IMPOSTO
      WHERE IMPOSNFTOT.CDFILIAL   = P_FILIAL          AND
            IMPOSNFTOT.NRLANCTONF = P_LANCTONF        AND
            IMPOSNFTOT.CDIMPOSTO  = IMPOSTO.CDIMPOSTO AND
            IDTRATIMPO            = w_A               AND
            NVL(IDACRPRODENTRNF, 'N') = 'N' AND
            NOT EXISTS(SELECT CDIMPOSTO
                       FROM IMPOSTO
                       WHERE IMPOSTO.CDIMPOSTRIB = IMPOSNFTOT.CDIMPOSTO);

   ELSE
      SELECT SUM(VRTOTIMPONF)
      INTO   V_SOMAIMPO
      FROM IMPOSNFTOT, IMPOSTO
      WHERE IMPOSNFTOT.CDFILIAL   = P_FILIAL          AND
            IMPOSNFTOT.NRLANCTONF = P_LANCTONF        AND
            IMPOSNFTOT.CDIMPOSTO  = IMPOSTO.CDIMPOSTO AND
            IDTRATIMPO            = w_A               AND
            NOT EXISTS(SELECT CDIMPOSTO
                       FROM IMPOSTO
                       WHERE IMPOSTO.CDIMPOSTRIB = IMPOSNFTOT.CDIMPOSTO);
   END IF;

   SELECT SUM(VRTOTIMPONF)
   INTO   V_MENOIMPO
   FROM IMPOSNFTOT, IMPOSTO
   WHERE IMPOSNFTOT.CDFILIAL   = P_FILIAL          AND
         IMPOSNFTOT.NRLANCTONF = P_LANCTONF        AND
         IMPOSNFTOT.CDIMPOSTO  = IMPOSTO.CDIMPOSTO AND
         IDTRATIMPO = w_D;

   IF NOT (V_LIQUIDO IS NULL) AND (P_TIPOOPER <> w_12) THEN
      V_TOTALNOTA := V_LIQUIDO;
   END IF;

   IF NOT (V_SOMAIMPO IS NULL) THEN
      V_TOTALNOTA := V_TOTALNOTA + V_SOMAIMPO;
   END IF;

   IF NOT (V_MENOIMPO IS NULL) THEN
      V_TOTALNOTA := V_TOTALNOTA - V_MENOIMPO;
   END IF;

   IF NOT (V_SOMAENCA IS NULL) THEN
      V_TOTALNOTA := V_TOTALNOTA + V_SOMAENCA;
   END IF;

   IF NOT (V_MENOENCA IS NULL) THEN
      V_TOTALNOTA := V_TOTALNOTA - V_MENOENCA;
   END IF;

   /*ICMS15*/
   SELECT SUM(VRICMSMONORET)
     INTO V_ICMSMONORET
     FROM ITEMPRODUTO IP, ITEMPROIMPOS II
    WHERE IP.CDFILIAL = II.CDFILIAL
      AND IP.NRLANCTONF = II.NRLANCTONF
      AND IP.NRSEQITPROD = II.NRSEQITPROD
      AND IP.CDFILIAL = P_FILIAL
      AND IP.NRLANCTONF = P_LANCTONF
      AND SUBSTR(IP.CDSITUTRIBPR, 2, 2) = '15';

   IF NOT (V_ICMSMONORET IS NULL) THEN
      V_TOTALNOTA := V_TOTALNOTA + V_ICMSMONORET;
   END IF;

   --VALOR SUBSTITUIÇÃO TRIBUTÁRIA COM IDENTIFICAÇÃO PARA ACRESCER AO TOTAL DA NF
   IF V_IDOPERDEVONF = 'S' THEN
      SELECT NVL(ROUND(SUM(VRIMPOSTOIT + NVL(VRADICFECP, 0)), V_NRDECITOTANF),0)
        INTO   V_SOMAIMPO
        FROM ITEMPROIMPOS IT, IMPOSTO I
       WHERE CDFILIAL     = P_FILIAL           AND
             NRLANCTONF   = P_LANCTONF         AND
             IT.CDIMPOSTO = I.CDIMPOSTO        AND
             NVL(I.IDACRPRODENTRNF, 'N') = 'N' AND
             NVL(IT.IDTRIMPSTII, '0')     = '0' AND
         EXISTS(SELECT CDIMPOSTO
                  FROM IMPOSTO
                 WHERE CDIMPOSTRIB = IT.CDIMPOSTO);
   ELSE
      SELECT NVL(ROUND(SUM(IT.VRIMPOSTOIT + NVL(VRADICFECP, 0)), V_NRDECITOTANF),0)
      INTO   V_SOMAIMPO
      FROM ITEMPROIMPOS IT, IMPOSTO I
      WHERE IT.CDFILIAL    = P_FILIAL    AND
            IT.NRLANCTONF  = P_LANCTONF  AND
            IT.CDIMPOSTO   = I.CDIMPOSTO AND
            NVL(IT.IDTRIMPSTII, '0')     = '0' AND
            EXISTS(SELECT CDIMPOSTO
                   FROM IMPOSTO
                   WHERE CDIMPOSTRIB = IT.CDIMPOSTO);

   END IF;


   IF NOT (V_SOMAIMPO IS NULL) THEN
      V_TOTALNOTA := V_TOTALNOTA + V_SOMAIMPO;
   END IF;

   -- Subtrai o valor dos importos a reter no valor da nota fiscal
   BEGIN
      SELECT SUM(VRIMPOSTOIT)
        INTO V_VRIMPORETNF
        FROM ITEMPROIMPOS T, IMPOSTO I
       WHERE CDFILIAL     = P_FILIAL
         AND NRLANCTONF   = P_LANCTONF
         AND I.CDIMPOSTO  = T.CDIMPOSTO
         AND IDTRATIMPO   = 'R'
         AND IDDESCRFONTE = 'N';
   EXCEPTION
      WHEN NO_DATA_FOUND THEN
         V_VRIMPORETNF := 0;
   END;

   IF NOT (V_VRIMPORETNF IS NULL) THEN
      V_TOTALNOTA := V_TOTALNOTA - ROUND(V_VRIMPORETNF, 2);
   END IF;

   IF P_TIPOOPER = w_12 THEN

      FOR C_NOTABEBICRED IN (SELECT I.CDPRODUTO, VRTOTAITEM, IDITEMISSAO, IDTPNFCREDEB
                             FROM   ITEMPRODUTO I, ITEMISSAO T
                             WHERE  I.CDFILIAL   = P_FILIAL      AND
                                    I.NRLANCTONF = P_LANCTONF    AND
                                    I.CDPRODUTO  = T.CDPRODUTO
                             ORDER BY IDITEMISSAO) LOOP

          SELECT IDITEMISSAO
          INTO V_IDITEMISSAO
          FROM ITEMISSAO
          WHERE CDPRODUTO = C_NOTABEBICRED.CDPRODUTO;

          IF (V_IDITEMISSAO = w_D) THEN
             UPDATE ITEMPRODUTO
             SET IDTPNFCREDEB = w_2
             WHERE CDFILIAL   = P_FILIAL   AND
                   NRLANCTONF = P_LANCTONF AND
                   CDPRODUTO  = C_NOTABEBICRED.CDPRODUTO;

             V_TOTALNOTA := V_TOTALNOTA + C_NOTABEBICRED.VRTOTAITEM;
          ELSIF (V_IDITEMISSAO = w_C)  THEN
             UPDATE ITEMPRODUTO
             SET IDTPNFCREDEB = w_1
             WHERE CDFILIAL   = P_FILIAL   AND
                   NRLANCTONF = P_LANCTONF AND
                   CDPRODUTO  = C_NOTABEBICRED.CDPRODUTO;

             V_TOTALNOTA := V_TOTALNOTA - C_NOTABEBICRED.VRTOTAITEM;
          ELSE
             UPDATE ITEMPRODUTO
             SET IDTPNFCREDEB = w_3
             WHERE CDFILIAL   = P_FILIAL   AND
                   NRLANCTONF = P_LANCTONF AND
                   CDPRODUTO  = C_NOTABEBICRED.CDPRODUTO;

             V_TOTALNOTA := V_TOTALNOTA - C_NOTABEBICRED.VRTOTAITEM;
          END IF;

          SELECT CDFILIAPFATU, NRAPFATUTNF
          INTO V_CDFILIAPFATU, V_NRAPFATUTNF
          FROM NOTAFISCAL
          WHERE CDFILIAL   = P_FILIAL   AND
                NRLANCTONF = P_LANCTONF;

          IF NOT(V_CDFILIAPFATU IS NULL) AND NOT(V_NRAPFATUTNF IS NULL) THEN

             IF ((C_NOTABEBICRED.IDITEMISSAO = w_D) OR  (C_NOTABEBICRED.IDITEMISSAO = w_O)) AND
                (C_NOTABEBICRED.IDTPNFCREDEB IS NULL)  THEN
                V_TOTALNOTA := V_TOTALNOTA + C_NOTABEBICRED.VRTOTAITEM;
             ELSIF (C_NOTABEBICRED.IDITEMISSAO = w_C)  THEN
                V_TOTALNOTA := V_TOTALNOTA - C_NOTABEBICRED.VRTOTAITEM;
             ELSE
                V_TOTALNOTA := V_TOTALNOTA + C_NOTABEBICRED.VRTOTAITEM;
             END IF;
          END IF;
      END LOOP;
   END IF;

   /* AJUSTANDO O VALOR DO DIFERIMENTO CASO OCORRA ALGUMA DIFERENÇA DEVIDO AOS ARREDONDAMENTOS */
   FOR C_AJUSTA_DIFERIMENTO IN (SELECT IT.NRSEQITPROD, IT.VRIMPOSTOIT, IT.VRIMPOSTOOPERAIT, IT.VRIMPOSTODIFERIT,
                                       IT.VRPERDIFEREIT
                                  FROM ITEMPROIMPOS IT JOIN IMPOSTO IM ON (IT.CDIMPOSTO = IM.CDIMPOSTO)
                                 WHERE (IT.VRIMPOSTOIT <> (IT.VRIMPOSTOOPERAIT - IT.VRIMPOSTODIFERIT))
                                   AND (IT.VRPERDIFEREIT IS NOT NULL)
                                   AND (IM.CDIMPOSTONFE = '00')
                                   AND (IT.NRITPROIMPOS = '1')
                                   AND (SUBSTR(IT.CDSITUTRIBIT, 2, 2) <> '53')
                                   AND (IT.CDFILIAL = P_FILIAL)
                                   AND (IT.NRLANCTONF = P_LANCTONF)
                                 ORDER BY IT.NRSEQITPROD)
   LOOP
      UPDATE ITEMPROIMPOS
         SET VRIMPOSTODIFERIT = VRIMPOSTODIFERIT + (C_AJUSTA_DIFERIMENTO.VRIMPOSTOOPERAIT - C_AJUSTA_DIFERIMENTO.VRIMPOSTOIT - C_AJUSTA_DIFERIMENTO.VRIMPOSTODIFERIT)
       WHERE CDFILIAL = P_FILIAL
         AND NRLANCTONF = P_LANCTONF
         AND NRSEQITPROD = C_AJUSTA_DIFERIMENTO.NRSEQITPROD;
   END LOOP;

   IF ((V_IDCONTCONFORIG = 'N') OR (V_IDOPERDEVONF <> w_S)) AND (P_TIPOOPER <> '03') THEN
      SELECT NVL(V_TOTALNOTA,0) - SUM(ROUND(NVL(VRBRUTITEM,0), 2))
        INTO V_DIFEVRBRUTO
        FROM ITEMPRODUTO
       WHERE CDFILIAL = P_FILIAL
         AND NRLANCTONF = P_LANCTONF;

      IF V_DIFEVRBRUTO <> 0 THEN
         UPDATE ITEMPRODUTO
            SET VRBRUTITEM = VRBRUTITEM + V_DIFEVRBRUTO
          WHERE CDFILIAL = P_FILIAL
            AND NRLANCTONF = P_LANCTONF
            AND NRSEQITPROD = (SELECT MAX(I.NRSEQITPROD)
                                 FROM ITEMPRODUTO I
                                WHERE I.CDFILIAL     = P_FILIAL
                                  AND I.NRLANCTONF   = P_LANCTONF
                                  AND (NVL(I.IDPRODBONIF, 'N') = 'N')
                                  AND VRTOTAITEM = (SELECT MAX(VRTOTAITEM)
                                                      FROM ITEMPRODUTO I
                                                     WHERE I.CDFILIAL     = P_FILIAL
                                                       AND I.NRLANCTONF   = P_LANCTONF
                                                       AND (NVL(I.IDPRODBONIF, 'N') = 'N')));

      END IF;
   END IF;   

   CONSULTA_DESONERACAO(P_FILIAL, 
                        P_LANCTONF, 
                        V_PAISDEST,
                        V_ESTADEST,
                        V_IMPOSDESONERA);

   V_TOTALNOTA := V_TOTALNOTA - V_IMPOSDESONERA;

   IF V_NRDECITOTANF <> 0 THEN
      V_TOTALNOTA := ROUND(V_TOTALNOTA, 2);
   END IF;

-- RECALCULO DO VALOR CONTABIL DO ITEM

   FOR C_ITEM IN (SELECT II.CDIMPOSTO, I.VRBRUTITEM, I.NRSEQITPROD, I.VRCONTITEM, NRITPROIMPOS, VRPERREDBCIT
                  FROM ITEMPRODUTO I, ITEMPROIMPOS II
                  WHERE I.CDFILIAL    = P_FILIAL       AND
                        I.NRLANCTONF  = P_LANCTONF     AND
                        I.CDFILIAL    = II.CDFILIAL    AND
                        I.NRLANCTONF  = II.NRLANCTONF  AND
                        I.NRSEQITPROD = II.NRSEQITPROD ) LOOP
      V_ICMS := 'N';
      FOR C_ICMS IN (SELECT CDIMPOSTO
                       FROM IMPOSTONFE N, IMPOSTO I
                      WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                        AND N.CDIMPOSTONFE = '00'
                        AND I.CDIMPOSTO = C_ITEM.CDIMPOSTO)
      LOOP
         V_ICMS := 'S';
      END LOOP;

      IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
         UPDATE ITEMPROIMPOS
         SET VRCONTITIMP = TRUNC(VRCONTITIMP,2)
         WHERE (NRLANCTONF   = P_LANCTONF)         AND
               (CDFILIAL     = P_FILIAL)           AND
               (NRSEQITPROD  = C_ITEM.NRSEQITPROD) AND
               (CDIMPOSTO    = C_ITEM.CDIMPOSTO)   AND
               (NRITPROIMPOS = w_2);
      ELSE
         UPDATE ITEMPROIMPOS
         SET VRCONTITIMP = ROUND(VRCONTITIMP,2)
         WHERE (NRLANCTONF   = P_LANCTONF)         AND
               (CDFILIAL     = P_FILIAL)           AND
               (NRSEQITPROD  = C_ITEM.NRSEQITPROD) AND
               (CDIMPOSTO    = C_ITEM.CDIMPOSTO)   AND
               (NRITPROIMPOS = w_2);
      END IF;

      Begin
         SELECT NVL(VRCONTITIMP,0)
         INTO   V_VRREDUCAO
         FROM ITEMPROIMPOS
         WHERE (NRLANCTONF   = P_LANCTONF)         AND
               (CDFILIAL     = P_FILIAL)           AND
               (NRSEQITPROD  = C_ITEM.NRSEQITPROD) AND
               (CDIMPOSTO    = C_ITEM.CDIMPOSTO)   AND
               (NRITPROIMPOS = w_2);
      Exception
         When No_Data_Found Then
            V_VRREDUCAO := 0;
      End;

      IF V_VRREDUCAO IS NULL THEN
         V_VRREDUCAO := 0;
      END IF;

      SELECT NVL(VRENCARGODESC, 0) AS DESCONTO
        INTO V_VRENCARGODESC
        FROM ITEMPRODUTO
       WHERE (NRLANCTONF   = P_LANCTONF)
         AND (CDFILIAL     = P_FILIAL)
         AND (NRSEQITPROD  = C_ITEM.NRSEQITPROD);      

      IF (NVL(V_IDUTDESCICMS, 'N') <> 'S') THEN
         IF (C_ITEM.VRBRUTITEM > 0) THEN
            IF (C_ITEM.VRPERREDBCIT > 0) AND (V_ICMS = 'S') AND ((V_VRENCARGODESC > 0) AND (C_ITEM.VRBRUTITEM < V_VRREDUCAO)) THEN
               V_TAXABASECALC := (100 - C_ITEM.VRPERREDBCIT)/100;
               V_VRREDUCAO := C_ITEM.VRBRUTITEM * V_TAXABASECALC;
               IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
                  UPDATE ITEMPROIMPOS
                  SET VRCONTITIMP = TRUNC((V_VRREDUCAO),2)
                  WHERE (NRLANCTONF   = P_LANCTONF)         AND
                        (CDFILIAL     = P_FILIAL)           AND
                        (NRSEQITPROD  = C_ITEM.NRSEQITPROD) AND
                        (CDIMPOSTO    = C_ITEM.CDIMPOSTO)   AND
                        (NRITPROIMPOS = C_ITEM.NRITPROIMPOS) AND
                        (NOT EXISTS(SELECT CDIMPOSTO
                                    FROM IMPOSTO
                                    WHERE CDIMPOSTRIB = ITEMPROIMPOS.CDIMPOSTO));
               ELSE
                  UPDATE ITEMPROIMPOS
                  SET VRCONTITIMP = ROUND((V_VRREDUCAO),2)
                  WHERE (NRLANCTONF   = P_LANCTONF)         AND
                        (CDFILIAL     = P_FILIAL)           AND
                        (NRSEQITPROD  = C_ITEM.NRSEQITPROD) AND
                        (CDIMPOSTO    = C_ITEM.CDIMPOSTO)   AND
                        (NRITPROIMPOS = C_ITEM.NRITPROIMPOS) AND
                        (NOT EXISTS(SELECT CDIMPOSTO
                                    FROM IMPOSTO
                                    WHERE CDIMPOSTRIB = ITEMPROIMPOS.CDIMPOSTO));
               END IF;
            ELSIF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
               UPDATE ITEMPROIMPOS
               SET VRCONTITIMP = TRUNC((C_ITEM.VRBRUTITEM - V_VRREDUCAO),2)
               WHERE (NRLANCTONF   = P_LANCTONF)         AND
                     (CDFILIAL     = P_FILIAL)           AND
                     (NRSEQITPROD  = C_ITEM.NRSEQITPROD) AND
                     (CDIMPOSTO    = C_ITEM.CDIMPOSTO)   AND
                     (NRITPROIMPOS = w_1)                AND
                     (NOT EXISTS(SELECT CDIMPOSTO
                                 FROM IMPOSTO
                                 WHERE CDIMPOSTRIB = ITEMPROIMPOS.CDIMPOSTO));
            ELSE
               UPDATE ITEMPROIMPOS
               SET VRCONTITIMP = ROUND((C_ITEM.VRBRUTITEM - V_VRREDUCAO),2)
               WHERE (NRLANCTONF   = P_LANCTONF)         AND
                     (CDFILIAL     = P_FILIAL)           AND
                     (NRSEQITPROD  = C_ITEM.NRSEQITPROD) AND
                     (CDIMPOSTO    = C_ITEM.CDIMPOSTO)   AND
                     (NRITPROIMPOS = w_1)                AND
                     (NOT EXISTS(SELECT CDIMPOSTO
                                 FROM IMPOSTO
                                 WHERE CDIMPOSTRIB = ITEMPROIMPOS.CDIMPOSTO));
            END IF;
         END IF;
      ELSE
         IF (C_ITEM.VRPERREDBCIT > 0) AND (V_ICMS = 'S') AND ((V_VRENCARGODESC > 0) AND (C_ITEM.VRCONTITEM < V_VRREDUCAO)) THEN
            V_TAXABASECALC := (100 - C_ITEM.VRPERREDBCIT)/100;
            V_VRREDUCAO := C_ITEM.VRCONTITEM * V_TAXABASECALC;
            IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
               UPDATE ITEMPROIMPOS
               SET VRCONTITIMP = TRUNC((V_VRREDUCAO),2)
               WHERE (NRLANCTONF   = P_LANCTONF)         AND
                     (CDFILIAL     = P_FILIAL)           AND
                     (NRSEQITPROD  = C_ITEM.NRSEQITPROD) AND
                     (CDIMPOSTO    = C_ITEM.CDIMPOSTO)   AND
                     (NRITPROIMPOS = C_ITEM.NRITPROIMPOS) AND
                     (NOT EXISTS(SELECT CDIMPOSTO
                                 FROM IMPOSTO
                                 WHERE CDIMPOSTRIB = ITEMPROIMPOS.CDIMPOSTO));
            ELSE
               UPDATE ITEMPROIMPOS
               SET VRCONTITIMP = ROUND((V_VRREDUCAO),2)
               WHERE (NRLANCTONF   = P_LANCTONF)         AND
                     (CDFILIAL     = P_FILIAL)           AND
                     (NRSEQITPROD  = C_ITEM.NRSEQITPROD) AND
                     (CDIMPOSTO    = C_ITEM.CDIMPOSTO)   AND
                     (NRITPROIMPOS = C_ITEM.NRITPROIMPOS) AND
                     (NOT EXISTS(SELECT CDIMPOSTO
                                 FROM IMPOSTO
                                 WHERE CDIMPOSTRIB = ITEMPROIMPOS.CDIMPOSTO));
            END IF;
         ELSIF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
            UPDATE ITEMPROIMPOS
            SET VRCONTITIMP = TRUNC((C_ITEM.VRCONTITEM - V_VRREDUCAO),2)
            WHERE (NRLANCTONF   = P_LANCTONF)         AND
                  (CDFILIAL     = P_FILIAL)           AND
                  (NRSEQITPROD  = C_ITEM.NRSEQITPROD) AND
                  (CDIMPOSTO    = C_ITEM.CDIMPOSTO)   AND
                  (NRITPROIMPOS = w_1)                AND
                  (NOT EXISTS(SELECT CDIMPOSTO
                              FROM IMPOSTO
                              WHERE CDIMPOSTRIB = ITEMPROIMPOS.CDIMPOSTO));
         ELSE
            UPDATE ITEMPROIMPOS
            SET VRCONTITIMP = ROUND((C_ITEM.VRCONTITEM - V_VRREDUCAO),2)
            WHERE (NRLANCTONF   = P_LANCTONF)         AND
                  (CDFILIAL     = P_FILIAL)           AND
                  (NRSEQITPROD  = C_ITEM.NRSEQITPROD) AND
                  (CDIMPOSTO    = C_ITEM.CDIMPOSTO)   AND
                  (NRITPROIMPOS = w_1)                AND
                  (NOT EXISTS(SELECT CDIMPOSTO
                              FROM IMPOSTO
                              WHERE CDIMPOSTRIB = ITEMPROIMPOS.CDIMPOSTO));
         END IF;
      END IF;

      IF (C_ITEM.VRBRUTITEM > 0) THEN
         IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
            UPDATE ITEMPROIMPOS
            SET VRCONTITIMP = TRUNC(C_ITEM.VRBRUTITEM,2)
            WHERE (NRLANCTONF   = P_LANCTONF)         AND
                  (CDFILIAL     = P_FILIAL)           AND
                  (NRSEQITPROD  = C_ITEM.NRSEQITPROD) AND
                  (CDIMPOSTO    = C_ITEM.CDIMPOSTO)   AND
                  (NRITPROIMPOS = w_1)                AND
                  (EXISTS(SELECT CDIMPOSTO
                          FROM IMPOSTO
                          WHERE CDIMPOSTRIB = ITEMPROIMPOS.CDIMPOSTO));
         ELSE
            UPDATE ITEMPROIMPOS
            SET VRCONTITIMP = ROUND(C_ITEM.VRBRUTITEM,2)
            WHERE (NRLANCTONF   = P_LANCTONF)         AND
                  (CDFILIAL     = P_FILIAL)           AND
                  (NRSEQITPROD  = C_ITEM.NRSEQITPROD) AND
                  (CDIMPOSTO    = C_ITEM.CDIMPOSTO)   AND
                  (NRITPROIMPOS = w_1)                AND
                  (EXISTS(SELECT CDIMPOSTO
                          FROM IMPOSTO
                          WHERE CDIMPOSTRIB = ITEMPROIMPOS.CDIMPOSTO));
         END IF;
      END IF;
   END LOOP;

   --200997
   IF V_IMPOSDESONERA > 0 THEN
      V_VRDIFERENCA := 0;
      FOR C_IMPOSTOS IN (SELECT CDIMPOSTO
                           FROM ITEMPROIMPOS
                          WHERE NRLANCTONF = P_LANCTONF
                            AND CDFILIAL = P_FILIAL
                       GROUP BY CDIMPOSTO) LOOP
         SELECT ROUND(SUM(VRCONTITIMP),2) AS VRTOTAL
           INTO V_VRTOTCONTABIL
           FROM ITEMPROIMPOS
          WHERE NRLANCTONF = P_LANCTONF
            AND CDFILIAL = P_FILIAL
            AND CDIMPOSTO = C_IMPOSTOS.CDIMPOSTO;
         V_VRDIFERENCA := V_VRTOTCONTABIL - V_TOTALNOTA;
         IF V_VRDIFERENCA = V_IMPOSDESONERA THEN
            FOR C_ITEMDESON IN (SELECT NRSEQITPROD, ROUND(SUM(VRIMPOSTOIT),2) AS VRIMPDESON
                                  FROM ITEMPROIMPOS
                                 WHERE NRLANCTONF = P_LANCTONF
                                   AND CDFILIAL = P_FILIAL
                                   AND NRITPROIMPOS = '1'
                                   AND IDCONSDESONVRNF = 'S'
                                   AND VRIMPOSTODESON > 0
                              GROUP BY NRSEQITPROD) LOOP
               UPDATE ITEMPROIMPOS
                  SET VRCONTITIMP = VRCONTITIMP - C_ITEMDESON.VRIMPDESON
                WHERE NRLANCTONF = P_LANCTONF
                  AND CDFILIAL = P_FILIAL
                  AND NRSEQITPROD = C_ITEMDESON.NRSEQITPROD
                  AND CDIMPOSTO = C_IMPOSTOS.CDIMPOSTO
                  AND NRITPROIMPOS = '1';
            END LOOP;
         END IF;
      END LOOP;
   END IF;
   --200997

   ARREDONDA_BASECALC(w_S, P_FILIAL, P_LANCTONF);

   V_SEQUIMPOSTNF := w_01;

   UPDATE ITEMPROIMPOS
      SET CDFISCALIT = '2',
          VRBASECALCIT = 0	      
    WHERE CDFILIAL = P_FILIAL
      AND NRLANCTONF = P_LANCTONF
      AND VRPERREDBCIT > 0.00
      AND NRITPROIMPOS = '2';

   /*ESTE UPDATE ESTA SENDO REALIZADO PARA EVITAR QUE EXISTAM LANCAMENTOS COM BASE DE CÁLCULO E SEM IMPOSTO E SEM ALIQUOTA*/
   UPDATE ITEMPROIMPOS
      SET VRBASECALCIT = 0
    WHERE CDFILIAL     = P_FILIAL
      AND NRLANCTONF   = P_LANCTONF
      AND NRITPROIMPOS = W_1
      AND CDFISCALIT   = W_1
      AND VRALIQITEM   = 0.00
      AND VRIMPOSTOIT  = 0.00;

   /*ESTE UPDATE ESTA SENDO REALIZADO PARA EVITAR QUE EXISTAM LANCAMENTOS CÓDIGO FISCAL NULO*/
   UPDATE ITEMPROIMPOS
      SET CDFISCALIT   = CASE WHEN VRIMPOSTOIT > 0 THEN 1 ELSE 2 END
    WHERE CDFISCALIT IS NULL
      AND CDFILIAL     = P_FILIAL
      AND NRLANCTONF   = P_LANCTONF
      AND NRITPROIMPOS = W_1;

   /*197632*/
   FOR C_CFOPINVALIDO IN (SELECT NRSEQITPROD
                            FROM ITEMPROIMPOS
                           WHERE LENGTH(CDFISCOPERIT) = 3
                             AND CDFILIAL = P_FILIAL
                             AND NRLANCTONF = P_LANCTONF
                             AND NRITPROIMPOS = w_1)
   LOOP
      V_CFOPICMS := NULL;
      BEGIN
         SELECT MAX(CDFISCOPERIT)
           INTO V_CFOPICMS
           FROM ITEMPROIMPOS IT, IMPOSTO I
          WHERE IT.NRLANCTONF = P_LANCTONF
            AND IT.CDFILIAL = P_FILIAL
            AND IT.CDIMPOSTO = I.CDIMPOSTO
            AND I.CDIMPOSTONFE = '00'
            AND NRITPROIMPOS = w_1
            AND LENGTH(IT.CDFISCOPERIT) = 4
            AND IT.NRSEQITPROD = C_CFOPINVALIDO.NRSEQITPROD;
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
            V_CFOPICMS := NULL;
      END;
      IF V_CFOPICMS IS NOT NULL THEN
         UPDATE ITEMPROIMPOS
            SET CDFISCOPERIT = V_CFOPICMS
          WHERE CDFILIAL = P_FILIAL
            AND NRLANCTONF = P_LANCTONF
            AND LENGTH(CDFISCOPERIT) = 3
            AND NRITPROIMPOS = w_1
            AND NRSEQITPROD = C_CFOPINVALIDO.NRSEQITPROD;
      END IF;
   END LOOP;

   /* GERANDO INFORMAÇÕES NA TABELA IMPOSTONF */
   IF V_NRDECITOTANF = 0 THEN
      IF V_IDOPERDEVONF = W_S THEN
         FOR C_IMPOSTONF IN (SELECT IT.CDIMPOSTO,
                                    VRALIQITEM,
                                    VRPERREDBCIT,
                                    VRPARDEDIT, 
                                    CDFISCALIT,
                                    CDSITUTRIBIT, 
                                    CDFISCOPERIT, 
                                    CDSUFXCFOPIT, 
                                    IDTRIMPSTII, 
                                    IT.VRADICALIQFECP,
                                    SUM(VRCONTITIMP) AS VRCONTITIMP,
                                    SUM(VRBASECALCIT) AS VRBASECALCIT, 
                                    SUM(VRIMPOSTOIT) AS VRIMPOSTOIT,
                                    MAX(NRITPROIMPOS) AS NRITPROIMPOS,
                                    SUM(VRBCICMSSTRETIDO) VRBCICMSSTRETIDO, 
                                    SUM(VRICMSSTRETIDO) VRICMSSTRETIDO,
                                    SUM(IT.VRADICFECP) AS VRADICFECP,
                                    NVL(IDDIFALIQCUSPRI, 'N') AS IDDIFALIQCUSPRI,
                                    SUM(VRIMPOPARTDEST) AS VRIMPOPARTDEST
                               FROM ITEMPROIMPOS IT, IMPOSTO I
                              WHERE (CDFILIAL = P_FILIAL)    
                                AND (NRLANCTONF = P_LANCTONF)  
                                AND (IT.CDIMPOSTO = I.CDIMPOSTO) 
                                AND (((CDFISCALIT = w_1) AND (IDIMPORECUP = w_S)) OR ((IDIMPORECUP <> w_S) AND (VRALIQITEM <> 0)))
                              GROUP BY IT.CDIMPOSTO, 
                                    VRALIQITEM,
                                    VRPERREDBCIT, 
                                    VRPARDEDIT, 
                                    CDFISCALIT,
                                    CDSITUTRIBIT, 
                                    CDFISCOPERIT, 
                                    CDSUFXCFOPIT, 
                                    IDTRIMPSTII,
                                    IT.VRADICALIQFECP,
                                    IDDIFALIQCUSPRI
                              UNION
                             SELECT IT.CDIMPOSTO, 
                                    0 AS VRALIQITEM, 
                                    0 AS VRPERREDBCIT,
                                    0 AS VRPARDEDIT, 
                                    CDFISCALIT,
                                    CDSITUTRIBIT, 
                                    CDFISCOPERIT, 
                                    CDSUFXCFOPIT, 
                                    IDTRIMPSTII, 
                                    IT.VRADICALIQFECP,
                                    SUM(VRCONTITIMP) AS VRCONTITIMP,
                                    0 AS VRBASECALCIT,
                                    0 AS VRIMPOSTOIT,
                                    MAX(NRITPROIMPOS) AS NRITPROIMPOS,
                                    SUM(VRBCICMSSTRETIDO) VRBCICMSSTRETIDO, 
                                    SUM(VRICMSSTRETIDO) VRICMSSTRETIDO,
                                    SUM(IT.VRADICFECP) AS VRADICFECP,
                                    NVL(IDDIFALIQCUSPRI, 'N') AS IDDIFALIQCUSPRI,
                                    SUM(VRIMPOPARTDEST) AS VRIMPOPARTDEST
                               FROM ITEMPROIMPOS IT, IMPOSTO I
                              WHERE (CDFILIAL = P_FILIAL)
                                AND (NRLANCTONF = P_LANCTONF)
                                AND (IT.CDIMPOSTO = I.CDIMPOSTO) 
                                AND (NRITPROIMPOS <> w_3)
                                AND (((CDFISCALIT <> w_1) AND (IDIMPORECUP = w_S)) OR ((IDIMPORECUP <> w_S) AND (VRALIQITEM = 0)))
                              GROUP BY IT.CDIMPOSTO, 
                                    CDFISCALIT, 
                                    CDSITUTRIBIT,
                                    CDFISCOPERIT, 
                                    CDSUFXCFOPIT, 
                                    IDTRIMPSTII, 
                                    IT.VRADICALIQFECP,
                                    IDDIFALIQCUSPRI
                              UNION
                             SELECT IT.CDIMPOSTO, 
                                    VRALIQITEM, 
                                    VRPERREDBCIT, 
                                    VRPARDEDIT,
                                    CDFISCALIT,
                                    CDSITUTRIBIT, 
                                    CDFISCOPERIT, 
                                    CDSUFXCFOPIT, 
                                    IDTRIMPSTII, 
                                    IT.VRADICALIQFECP,
                                    SUM(VRCONTITIMP) AS VRCONTITIMP,
                                    SUM(VRBASECALCIT) AS VRBASECALCIT, 
                                    SUM(VRIMPOSTOIT) AS VRIMPOSTOIT,
                                    MAX(NRITPROIMPOS) AS NRITPROIMPOS,
                                    SUM(VRBCICMSSTRETIDO) VRBCICMSSTRETIDO, 
                                    SUM(VRICMSSTRETIDO) VRICMSSTRETIDO,
                                    SUM(IT.VRADICFECP) AS VRADICFECP,
                                    NVL(IDDIFALIQCUSPRI, 'N') AS IDDIFALIQCUSPRI,
                                    SUM(VRIMPOPARTDEST) AS VRIMPOPARTDEST
                               FROM ITEMPROIMPOS IT, IMPOSTO I
                              WHERE (CDFILIAL = P_FILIAL)
                                AND (NRLANCTONF = P_LANCTONF)  
                                AND (IT.CDIMPOSTO = I.CDIMPOSTO) 
                                AND (NRITPROIMPOS = w_3)
                              GROUP BY IT.CDIMPOSTO, 
                                    VRALIQITEM,
                                    VRPERREDBCIT,
                                    VRPARDEDIT, 
                                    CDFISCALIT,
                                    CDSITUTRIBIT, 
                                    CDFISCOPERIT, 
                                    CDSUFXCFOPIT, 
                                    IDTRIMPSTII,
                                    IT.VRADICALIQFECP,
                                    IDDIFALIQCUSPRI) 
         LOOP

            V_ICMS := 'N';
            FOR C_ICMS IN (SELECT CDIMPOSTO
                             FROM IMPOSTONFE N, IMPOSTO I
                            WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                              AND N.CDIMPOSTONFE = '00'
                              AND I.CDIMPOSTO = C_IMPOSTONF.CDIMPOSTO)
            LOOP
               V_ICMS := 'S';
            END LOOP;

            IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
               INSERT INTO IMPOSTONF(
                  CDFILIAL, NRLANCTONF, CDIMPOSTO, NRIMPOSNF, 
                  VRCONTABILNF, VRPERREDBCNF, VRBASECALCNF, VRALIQNF, 
                  VRPARDEDNF, VRIMPOSTONF, CDFISCALNF, CDSITUTRIBNF,
                  CDFISCOPERNF, CDSUFXCFOPNF, IDIMPOSTONF, VRBCICMSSTRETIDO, 
                  VRICMSSTRETIDO, IDTRIMPOSTNF, IDDIFALIQCUSPRN, VRADICALIQFECP, 
                  VRADICFECP, VRIMPOPARTDEST)
               VALUES(
                  P_FILIAL, P_LANCTONF, C_IMPOSTONF.CDIMPOSTO, V_SEQUIMPOSTNF, 
                  C_IMPOSTONF.VRCONTITIMP, C_IMPOSTONF.VRPERREDBCIT, C_IMPOSTONF.VRBASECALCIT, C_IMPOSTONF.VRALIQITEM, 
                  C_IMPOSTONF.VRPARDEDIT, TRUNC(C_IMPOSTONF.VRIMPOSTOIT,0), C_IMPOSTONF.CDFISCALIT, C_IMPOSTONF.CDSITUTRIBIT,
                  C_IMPOSTONF.CDFISCOPERIT, C_IMPOSTONF.CDSUFXCFOPIT, C_IMPOSTONF.NRITPROIMPOS, C_IMPOSTONF.VRBCICMSSTRETIDO, 
                  C_IMPOSTONF.VRICMSSTRETIDO, C_IMPOSTONF.IDTRIMPSTII, C_IMPOSTONF.IDDIFALIQCUSPRI, C_IMPOSTONF.VRADICALIQFECP, 
                  C_IMPOSTONF.VRADICFECP, C_IMPOSTONF.VRIMPOPARTDEST);
            ELSE
               INSERT INTO IMPOSTONF(
                  CDFILIAL, NRLANCTONF, CDIMPOSTO, NRIMPOSNF, 
                  VRCONTABILNF, VRPERREDBCNF, VRBASECALCNF, VRALIQNF, 
                  VRPARDEDNF, VRIMPOSTONF, CDFISCALNF, CDSITUTRIBNF,
                  CDFISCOPERNF, CDSUFXCFOPNF, IDIMPOSTONF, VRBCICMSSTRETIDO, 
                  VRICMSSTRETIDO, IDTRIMPOSTNF, IDDIFALIQCUSPRN, VRADICALIQFECP, 
                  VRADICFECP, VRIMPOPARTDEST)
               VALUES(
                  P_FILIAL, P_LANCTONF, C_IMPOSTONF.CDIMPOSTO, V_SEQUIMPOSTNF, 
                  C_IMPOSTONF.VRCONTITIMP, C_IMPOSTONF.VRPERREDBCIT, C_IMPOSTONF.VRBASECALCIT, C_IMPOSTONF.VRALIQITEM, 
                  C_IMPOSTONF.VRPARDEDIT, ROUND(C_IMPOSTONF.VRIMPOSTOIT,0), C_IMPOSTONF.CDFISCALIT, C_IMPOSTONF.CDSITUTRIBIT,
                  C_IMPOSTONF.CDFISCOPERIT, C_IMPOSTONF.CDSUFXCFOPIT, C_IMPOSTONF.NRITPROIMPOS, C_IMPOSTONF.VRBCICMSSTRETIDO,
                  C_IMPOSTONF.VRICMSSTRETIDO, C_IMPOSTONF.IDTRIMPSTII, C_IMPOSTONF.IDDIFALIQCUSPRI, C_IMPOSTONF.VRADICALIQFECP,
                  C_IMPOSTONF.VRADICFECP, C_IMPOSTONF.VRIMPOPARTDEST);
            END IF;

            V_SEQUIMPOSTNF := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_SEQUIMPOSTNF) + 1)),2,0);
         END LOOP;
      ELSE
         FOR C_IMPOSTONF IN (SELECT IT.CDIMPOSTO,
                                    VRALIQITEM,
                                    VRPERREDBCIT,
                                    VRPARDEDIT,
                                    CDFISCALIT,
                                    CDSITUTRIBIT,
                                    CDFISCOPERIT,
                                    CDSUFXCFOPIT,
                                    IDTRIMPSTII,
                                    IT.VRADICALIQFECP,
                                    SUM(ROUND(VRCONTITIMP,2)) AS VRCONTITIMP,
                                    SUM(VRBASECALCIT) AS VRBASECALCIT,
                                    SUM(VRIMPOSTOIT) AS VRIMPOSTOIT,
                                    NRITPROIMPOS,
                                    SUM(VRBCICMSSTRETIDO) VRBCICMSSTRETIDO,
                                    SUM(IT.VRADICFECP) AS VRADICFECP,
                                    SUM(VRICMSSTRETIDO) VRICMSSTRETIDO,
                                    SUM(VRIMPOPARTDEST)AS VRIMPOPARTDEST,
                                    SUM(VRIMPICMSBASE) AS VRIMPICMSBASE
                               FROM ITEMPROIMPOS IT, IMPOSTO I
                              WHERE (CDFILIAL = P_FILIAL)
                                AND (NRLANCTONF = P_LANCTONF)  
                                AND (IT.CDIMPOSTO = I.CDIMPOSTO) 
                                AND (((CDFISCALIT = w_1) AND (IDIMPORECUP = w_S)) OR ((IDIMPORECUP <> w_S) AND (VRALIQITEM <> 0)))
                              GROUP BY IT.CDIMPOSTO, 
                                    VRALIQITEM, 
                                    VRPERREDBCIT, 
                                    VRPARDEDIT, 
                                    CDFISCALIT,
                                    CDSITUTRIBIT, 
                                    CDFISCOPERIT, 
                                    CDSUFXCFOPIT,
                                    IDTRIMPSTII,
                                    IT.VRADICALIQFECP,
                                    NRITPROIMPOS
                              UNION
                             SELECT IT.CDIMPOSTO, 
                                    0 AS VRALIQITEM, 
                                    0 AS VRPERREDBCIT, 
                                    0 AS VRPARDEDIT, 
                                    CDFISCALIT, 
                                    CDSITUTRIBIT,
                                    CDFISCOPERIT, 
                                    CDSUFXCFOPIT, 
                                    IDTRIMPSTII,
                                    IT.VRADICALIQFECP, 
                                    SUM(ROUND(VRCONTITIMP,2)) AS VRCONTITIMP, 
                                    0 AS VRBASECALCIT, 
                                    0 AS VRIMPOSTOIT,
                                    NRITPROIMPOS, 
                                    SUM(VRBCICMSSTRETIDO) VRBCICMSSTRETIDO, 
                                    SUM(IT.VRADICFECP) AS VRADICFECP,
                                    SUM(VRICMSSTRETIDO) VRICMSSTRETIDO,
                                    SUM(VRIMPOPARTDEST)AS VRIMPOPARTDEST,
                                    SUM(VRIMPICMSBASE) AS VRIMPICMSBASE
                               FROM ITEMPROIMPOS IT, IMPOSTO I
                              WHERE (CDFILIAL = P_FILIAL)
                                AND (NRLANCTONF = P_LANCTONF)
                                AND (IT.CDIMPOSTO = I.CDIMPOSTO)
                                AND (((IT.CDFISCALIT <> w_1) AND (IDIMPORECUP = w_S)) OR ((I.IDIMPORECUP <> w_S) AND (VRALIQITEM = 0)))
                              GROUP BY IT.CDIMPOSTO,
                                    CDFISCALIT, 
                                    CDSITUTRIBIT,
                                    CDFISCOPERIT,
                                    CDSUFXCFOPIT, 
                                    IDTRIMPSTII,
                                    IT.VRADICALIQFECP,
                                    NRITPROIMPOS)
         LOOP

            V_ICMS := 'N';
            FOR C_ICMS IN (SELECT CDIMPOSTO
                             FROM IMPOSTONFE N, IMPOSTO I
                            WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                              AND N.CDIMPOSTONFE = '00'
                              AND I.CDIMPOSTO = C_IMPOSTONF.CDIMPOSTO)
            LOOP
               V_ICMS := 'S';
            END LOOP;

            IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
               INSERT INTO IMPOSTONF(
                  CDFILIAL, NRLANCTONF, CDIMPOSTO, NRIMPOSNF, 
                  VRCONTABILNF, VRPERREDBCNF, VRBASECALCNF, VRALIQNF, 
                  VRPARDEDNF, VRIMPOSTONF, CDFISCALNF, CDSITUTRIBNF,
                  CDFISCOPERNF, CDSUFXCFOPNF, IDIMPOSTONF, VRBCICMSSTRETIDO, 
                  VRICMSSTRETIDO, IDTRIMPOSTNF, VRADICALIQFECP, VRADICFECP, 
                  VRIMPOPARTDEST, VRIMPICMSBASE)
               VALUES(
                  P_FILIAL, P_LANCTONF, C_IMPOSTONF.CDIMPOSTO, V_SEQUIMPOSTNF,
                  C_IMPOSTONF.VRCONTITIMP, C_IMPOSTONF.VRPERREDBCIT, C_IMPOSTONF.VRBASECALCIT, C_IMPOSTONF.VRALIQITEM, 
                  C_IMPOSTONF.VRPARDEDIT, TRUNC(C_IMPOSTONF.VRIMPOSTOIT,0), C_IMPOSTONF.CDFISCALIT, C_IMPOSTONF.CDSITUTRIBIT,
                  C_IMPOSTONF.CDFISCOPERIT, C_IMPOSTONF.CDSUFXCFOPIT, C_IMPOSTONF.NRITPROIMPOS, C_IMPOSTONF.VRBCICMSSTRETIDO, 
                  C_IMPOSTONF.VRICMSSTRETIDO, C_IMPOSTONF.IDTRIMPSTII, C_IMPOSTONF.VRADICALIQFECP, C_IMPOSTONF.VRADICFECP,
                  C_IMPOSTONF.VRIMPOPARTDEST, TRUNC(C_IMPOSTONF.VRIMPICMSBASE, 0));
            ELSE
               INSERT INTO IMPOSTONF(
                  CDFILIAL, NRLANCTONF, CDIMPOSTO, NRIMPOSNF, 
                  VRCONTABILNF, VRPERREDBCNF, VRBASECALCNF, VRALIQNF, 
                  VRPARDEDNF, VRIMPOSTONF, CDFISCALNF, CDSITUTRIBNF,
                  CDFISCOPERNF, CDSUFXCFOPNF, IDIMPOSTONF, VRBCICMSSTRETIDO, 
                  VRICMSSTRETIDO, IDTRIMPOSTNF, VRADICALIQFECP, VRADICFECP, 
                  VRIMPOPARTDEST, VRIMPICMSBASE)
               VALUES(
                  P_FILIAL, P_LANCTONF, C_IMPOSTONF.CDIMPOSTO, V_SEQUIMPOSTNF, 
                  C_IMPOSTONF.VRCONTITIMP, C_IMPOSTONF.VRPERREDBCIT, C_IMPOSTONF.VRBASECALCIT, C_IMPOSTONF.VRALIQITEM, 
                  C_IMPOSTONF.VRPARDEDIT, ROUND(C_IMPOSTONF.VRIMPOSTOIT,0), C_IMPOSTONF.CDFISCALIT, C_IMPOSTONF.CDSITUTRIBIT,
                  C_IMPOSTONF.CDFISCOPERIT, C_IMPOSTONF.CDSUFXCFOPIT, C_IMPOSTONF.NRITPROIMPOS, C_IMPOSTONF.VRBCICMSSTRETIDO, 
                  C_IMPOSTONF.VRICMSSTRETIDO, C_IMPOSTONF.IDTRIMPSTII, C_IMPOSTONF.VRADICALIQFECP, C_IMPOSTONF.VRADICFECP,
                  C_IMPOSTONF.VRIMPOPARTDEST,  ROUND(C_IMPOSTONF.VRIMPICMSBASE, 0));
            END IF;

            V_SEQUIMPOSTNF := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_SEQUIMPOSTNF) + 1)),2,0);
         END LOOP;
      END IF;
   ELSE
      IF V_IDOPERDEVONF = w_S THEN
         FOR C_IMPOSTONF IN (SELECT IT.CDIMPOSTO,
                                    VRALIQITEM,
                                    VRPERREDBCIT,
                                    VRPARDEDIT,
                                    CDFISCALIT,
                                    CDSITUTRIBIT,
                                    CDFISCOPERIT,
                                    CDSUFXCFOPIT,
                                    IDTRIMPSTII, 
                                    IT.VRADICALIQFECP,
                                    SUM(VRCONTITIMP) AS VRCONTITIMP, 
                                    SUM(VRBASECALCIT) AS VRBASECALCIT, 
                                    SUM(VRIMPOSTOIT) AS VRIMPOSTOIT,
                                    MAX(NRITPROIMPOS) AS NRITPROIMPOS, 
                                    SUM(VRBCICMSSTRETIDO) VRBCICMSSTRETIDO, 
                                    SUM(VRICMSSTRETIDO) VRICMSSTRETIDO,
                                    SUM(IT.VRADICFECP) AS VRADICFECP,
                                    NVL(IDDIFALIQCUSPRI, 'N') AS IDDIFALIQCUSPRI,
                                    SUM(VRIMPOPARTDEST) AS VRIMPOPARTDEST
                               FROM ITEMPROIMPOS IT, IMPOSTO I
                              WHERE (CDFILIAL = P_FILIAL)
                                AND (NRLANCTONF = P_LANCTONF)
                                AND (IT.CDIMPOSTO = I.CDIMPOSTO)
                                AND (((CDFISCALIT = w_1) AND (IDIMPORECUP = w_S)) OR ((IDIMPORECUP <> w_S) AND (VRALIQITEM <> 0)))
                              GROUP BY IT.CDIMPOSTO, 
                                    VRALIQITEM, 
                                    VRPERREDBCIT, 
                                    VRPARDEDIT, 
                                    CDFISCALIT,
                                    CDSITUTRIBIT, 
                                    CDFISCOPERIT,
                                    CDSUFXCFOPIT, 
                                    IDTRIMPSTII, 
                                    IT.VRADICALIQFECP,
                                    IDDIFALIQCUSPRI
                              UNION
                             SELECT IT.CDIMPOSTO, 
                                    0 AS VRALIQITEM, 
                                    0 AS VRPERREDBCIT, 
                                    0 AS VRPARDEDIT, 
                                    CDFISCALIT, 
                                    CDSITUTRIBIT,
                                    CDFISCOPERIT, 
                                    CDSUFXCFOPIT, 
                                    IDTRIMPSTII, 
                                    IT.VRADICALIQFECP,
                                    SUM(VRCONTITIMP) AS VRCONTITIMP, 
                                    0 AS VRBASECALCIT, 
                                    0 AS VRIMPOSTOIT,
                                    MAX(NRITPROIMPOS) AS NRITPROIMPOS, 
                                    SUM(VRBCICMSSTRETIDO) VRBCICMSSTRETIDO, 
                                    SUM(VRICMSSTRETIDO) VRICMSSTRETIDO,
                                    SUM(IT.VRADICFECP) AS VRADICFECP,
                                    NVL(IDDIFALIQCUSPRI, 'N') AS IDDIFALIQCUSPRI,
                                    SUM(VRIMPOPARTDEST) AS VRIMPOPARTDEST
                               FROM ITEMPROIMPOS IT, IMPOSTO I
                              WHERE (CDFILIAL = P_FILIAL)
                                AND (NRLANCTONF = P_LANCTONF)
                                AND (IT.CDIMPOSTO = I.CDIMPOSTO)
                                AND (NRITPROIMPOS <> w_3)
                                AND (((CDFISCALIT <> w_1) AND (IDIMPORECUP = w_S)) OR ((IDIMPORECUP  <> w_S) AND (VRALIQITEM = 0)))
                              GROUP BY IT.CDIMPOSTO, 
                                    CDFISCALIT, 
                                    CDSITUTRIBIT,
                                    CDFISCOPERIT, 
                                    CDSUFXCFOPIT, 
                                    IDTRIMPSTII, 
                                    IT.VRADICALIQFECP,
                                    IDDIFALIQCUSPRI
                              UNION
                             SELECT IT.CDIMPOSTO, 
                                    VRALIQITEM, 
                                    VRPERREDBCIT, 
                                    VRPARDEDIT, 
                                    CDFISCALIT, 
                                    CDSITUTRIBIT,
                                    CDFISCOPERIT, 
                                    CDSUFXCFOPIT, 
                                    IDTRIMPSTII, 
                                    IT.VRADICALIQFECP,
                                    SUM(VRCONTITIMP) AS VRCONTITIMP, 
                                    SUM(VRBASECALCIT) AS VRBASECALCIT, 
                                    SUM(VRIMPOSTOIT) AS VRIMPOSTOIT,
                                    MAX(NRITPROIMPOS) AS NRITPROIMPOS, 
                                    SUM(VRBCICMSSTRETIDO) VRBCICMSSTRETIDO, 
                                    SUM(VRICMSSTRETIDO) VRICMSSTRETIDO,
                                    SUM(IT.VRADICFECP) AS VRADICFECP,
                                    NVL(IDDIFALIQCUSPRI, 'N') AS IDDIFALIQCUSPRI,
                                    SUM(VRIMPOPARTDEST) AS VRIMPOPARTDEST
                               FROM ITEMPROIMPOS IT, IMPOSTO I
                              WHERE (CDFILIAL = P_FILIAL)
                                AND (NRLANCTONF = P_LANCTONF)
                                AND (IT.CDIMPOSTO = I.CDIMPOSTO)
                                AND (NRITPROIMPOS = w_3)
                              GROUP BY IT.CDIMPOSTO, 
                                    VRALIQITEM, 
                                    VRPERREDBCIT, 
                                    VRPARDEDIT, 
                                    CDFISCALIT,
                                    CDSITUTRIBIT, 
                                    CDFISCOPERIT, 
                                    CDSUFXCFOPIT, 
                                    IDTRIMPSTII, 
                                    IT.VRADICALIQFECP,
                                    IDDIFALIQCUSPRI) 
         LOOP

            V_ICMS := 'N';
            FOR C_ICMS IN (SELECT CDIMPOSTO
                             FROM IMPOSTONFE N, IMPOSTO I
                            WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                              AND N.CDIMPOSTONFE = '00'
                              AND I.CDIMPOSTO = C_IMPOSTONF.CDIMPOSTO)
            LOOP
               V_ICMS := 'S';
            END LOOP;

            IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
               INSERT INTO IMPOSTONF(
                  CDFILIAL, NRLANCTONF, CDIMPOSTO, NRIMPOSNF, 
                  VRCONTABILNF, VRPERREDBCNF, VRBASECALCNF, VRALIQNF, 
                  VRPARDEDNF, VRIMPOSTONF, CDFISCALNF, CDSITUTRIBNF,
                  CDFISCOPERNF, CDSUFXCFOPNF, IDIMPOSTONF, VRBCICMSSTRETIDO, 
                  VRICMSSTRETIDO, IDTRIMPOSTNF, IDDIFALIQCUSPRN, VRADICALIQFECP, 
                  VRADICFECP, VRIMPOPARTDEST)
               VALUES(
                  P_FILIAL, P_LANCTONF, C_IMPOSTONF.CDIMPOSTO, V_SEQUIMPOSTNF, 
                  TRUNC(C_IMPOSTONF.VRCONTITIMP, V_NRDECITOTANF), C_IMPOSTONF.VRPERREDBCIT, C_IMPOSTONF.VRBASECALCIT, C_IMPOSTONF.VRALIQITEM, 
                  C_IMPOSTONF.VRPARDEDIT, TRUNC(C_IMPOSTONF.VRIMPOSTOIT, V_NRDECITOTANF), C_IMPOSTONF.CDFISCALIT, C_IMPOSTONF.CDSITUTRIBIT,
                  C_IMPOSTONF.CDFISCOPERIT, C_IMPOSTONF.CDSUFXCFOPIT, C_IMPOSTONF.NRITPROIMPOS, C_IMPOSTONF.VRBCICMSSTRETIDO, 
                  C_IMPOSTONF.VRICMSSTRETIDO, C_IMPOSTONF.IDTRIMPSTII, C_IMPOSTONF.IDDIFALIQCUSPRI, C_IMPOSTONF.VRADICALIQFECP, 
                  C_IMPOSTONF.VRADICFECP, C_IMPOSTONF.VRIMPOPARTDEST);
            ELSE
               INSERT INTO IMPOSTONF(
                  CDFILIAL, NRLANCTONF, CDIMPOSTO, NRIMPOSNF, 
                  VRCONTABILNF, VRPERREDBCNF, VRBASECALCNF, VRALIQNF, 
                  VRPARDEDNF, VRIMPOSTONF, CDFISCALNF, CDSITUTRIBNF,
                  CDFISCOPERNF, CDSUFXCFOPNF, IDIMPOSTONF, VRBCICMSSTRETIDO, 
                  VRICMSSTRETIDO, IDTRIMPOSTNF, IDDIFALIQCUSPRN, VRADICALIQFECP, 
                  VRADICFECP, VRIMPOPARTDEST)
               VALUES(
                  P_FILIAL, P_LANCTONF, C_IMPOSTONF.CDIMPOSTO, V_SEQUIMPOSTNF, 
                  ROUND(C_IMPOSTONF.VRCONTITIMP, V_NRDECITOTANF), C_IMPOSTONF.VRPERREDBCIT, C_IMPOSTONF.VRBASECALCIT, C_IMPOSTONF.VRALIQITEM, 
                  C_IMPOSTONF.VRPARDEDIT, ROUND(C_IMPOSTONF.VRIMPOSTOIT, V_NRDECITOTANF), C_IMPOSTONF.CDFISCALIT, C_IMPOSTONF.CDSITUTRIBIT,
                  C_IMPOSTONF.CDFISCOPERIT, C_IMPOSTONF.CDSUFXCFOPIT, C_IMPOSTONF.NRITPROIMPOS, C_IMPOSTONF.VRBCICMSSTRETIDO, 
                  C_IMPOSTONF.VRICMSSTRETIDO, C_IMPOSTONF.IDTRIMPSTII, C_IMPOSTONF.IDDIFALIQCUSPRI, C_IMPOSTONF.VRADICALIQFECP, 
                  C_IMPOSTONF.VRADICFECP, C_IMPOSTONF.VRIMPOPARTDEST);
            END IF;

            V_SEQUIMPOSTNF := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_SEQUIMPOSTNF) + 1)),2,0);
         END LOOP;
      ELSE
         FOR C_IMPOSTONF IN (SELECT IT.CDIMPOSTO, 
                                    VRALIQITEM, 
                                    VRPERREDBCIT, 
                                    VRPARDEDIT, 
                                    CDFISCALIT, 
                                    CDSITUTRIBIT,
                                    CDFISCOPERIT, 
                                    CDSUFXCFOPIT, 
                                    IDTRIMPSTII, 
                                    IT.VRADICALIQFECP,
                                    SUM(ROUND(VRCONTITIMP,2)) AS VRCONTITIMP,
                                    SUM(VRBASECALCIT) AS VRBASECALCIT, 
                                    SUM(VRIMPOSTOIT) AS VRIMPOSTOIT,
                                    NRITPROIMPOS, 
                                    SUM(VRBCICMSSTRETIDO) VRBCICMSSTRETIDO, 
                                    SUM(IT.VRADICFECP) AS VRADICFECP,
                                    SUM(VRICMSSTRETIDO) VRICMSSTRETIDO,
                                    SUM(VRIMPOPARTDEST) AS VRIMPOPARTDEST,
                                    SUM(VRIMPICMSBASE) AS VRIMPICMSBASE
                               FROM ITEMPROIMPOS IT, IMPOSTO I
                              WHERE (CDFILIAL = P_FILIAL)
                                AND (NRLANCTONF = P_LANCTONF)
                                AND (IT.CDIMPOSTO = I.CDIMPOSTO)
                                AND (((CDFISCALIT = w_1) AND (IDIMPORECUP = w_S)) OR ((IDIMPORECUP <> w_S) AND (VRALIQITEM <> 0)))
                              GROUP BY IT.CDIMPOSTO, 
                                    VRALIQITEM, 
                                    VRPERREDBCIT, 
                                    VRPARDEDIT, 
                                    CDFISCALIT,
                                    CDSITUTRIBIT, 
                                    CDFISCOPERIT, 
                                    CDSUFXCFOPIT, 
                                    IDTRIMPSTII, 
                                    IT.VRADICALIQFECP,
                                    NRITPROIMPOS
                              UNION
                             SELECT IT.CDIMPOSTO, 
                                    0 AS VRALIQITEM, 
                                    0 AS VRPERREDBCIT, 
                                    0 AS VRPARDEDIT, 
                                    CDFISCALIT, 
                                    CDSITUTRIBIT,
                                    CDFISCOPERIT, 
                                    CDSUFXCFOPIT, 
                                    IDTRIMPSTII, 
                                    IT.VRADICALIQFECP,
                                    SUM(ROUND(VRCONTITIMP,2)) AS VRCONTITIMP, 
                                    0 AS VRBASECALCIT, 
                                    0 AS VRIMPOSTOIT,
                                    NRITPROIMPOS, 
                                    SUM(VRBCICMSSTRETIDO) VRBCICMSSTRETIDO, 
                                    SUM(IT.VRADICFECP) AS VRADICFECP,
                                    SUM(VRICMSSTRETIDO) VRICMSSTRETIDO,
                                    SUM(VRIMPOPARTDEST) AS VRIMPOPARTDEST,
                                    SUM(VRIMPICMSBASE) AS VRIMPICMSBASE
                               FROM ITEMPROIMPOS IT, IMPOSTO I
                              WHERE (CDFILIAL = P_FILIAL)
                                AND (NRLANCTONF = P_LANCTONF)
                                AND (IT.CDIMPOSTO = I.CDIMPOSTO)
                                AND (((IT.CDFISCALIT <> w_1) AND (IDIMPORECUP = w_S)) OR ((I.IDIMPORECUP  <> w_S) AND (VRALIQITEM = 0)))
                              GROUP BY IT.CDIMPOSTO, 
                                    CDFISCALIT, 
                                    CDSITUTRIBIT,
                                    CDFISCOPERIT, 
                                    CDSUFXCFOPIT, 
                                    IDTRIMPSTII, 
                                    IT.VRADICALIQFECP,
                                    NRITPROIMPOS) 
         LOOP

            V_ICMS := 'N';
            FOR C_ICMS IN (SELECT CDIMPOSTO
                             FROM IMPOSTONFE N, IMPOSTO I
                            WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                              AND N.CDIMPOSTONFE = '00'
                              AND I.CDIMPOSTO = C_IMPOSTONF.CDIMPOSTO)
            LOOP
               V_ICMS := 'S';
            END LOOP;

            IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
               INSERT INTO IMPOSTONF(
                  CDFILIAL, NRLANCTONF, CDIMPOSTO, NRIMPOSNF, 
                  VRCONTABILNF, VRPERREDBCNF, VRBASECALCNF, VRALIQNF, 
                  VRPARDEDNF, VRIMPOSTONF, CDFISCALNF, CDSITUTRIBNF,
                  CDFISCOPERNF, CDSUFXCFOPNF, IDIMPOSTONF, VRBCICMSSTRETIDO, 
                  VRICMSSTRETIDO, IDTRIMPOSTNF, VRADICALIQFECP, VRADICFECP,
                  VRIMPOPARTDEST, VRIMPICMSBASE)
               VALUES(
                  P_FILIAL, P_LANCTONF, C_IMPOSTONF.CDIMPOSTO, V_SEQUIMPOSTNF, 
                  C_IMPOSTONF.VRCONTITIMP, C_IMPOSTONF.VRPERREDBCIT, C_IMPOSTONF.VRBASECALCIT, C_IMPOSTONF.VRALIQITEM, 
                  C_IMPOSTONF.VRPARDEDIT, TRUNC(C_IMPOSTONF.VRIMPOSTOIT, V_NRDECITOTANF), C_IMPOSTONF.CDFISCALIT, C_IMPOSTONF.CDSITUTRIBIT, 
                  C_IMPOSTONF.CDFISCOPERIT, C_IMPOSTONF.CDSUFXCFOPIT, C_IMPOSTONF.NRITPROIMPOS, C_IMPOSTONF.VRBCICMSSTRETIDO, 
                  C_IMPOSTONF.VRICMSSTRETIDO, C_IMPOSTONF.IDTRIMPSTII, C_IMPOSTONF.VRADICALIQFECP, C_IMPOSTONF.VRADICFECP, 
                  C_IMPOSTONF.VRIMPOPARTDEST, TRUNC(C_IMPOSTONF.VRIMPICMSBASE, V_NRDECITOTANF));
            ELSE
               INSERT INTO IMPOSTONF(
                  CDFILIAL, NRLANCTONF, CDIMPOSTO, NRIMPOSNF, 
                  VRCONTABILNF, VRPERREDBCNF, VRBASECALCNF, VRALIQNF, 
                  VRPARDEDNF, VRIMPOSTONF, CDFISCALNF, CDSITUTRIBNF,
                  CDFISCOPERNF, CDSUFXCFOPNF, IDIMPOSTONF, VRBCICMSSTRETIDO, 
                  VRICMSSTRETIDO, IDTRIMPOSTNF, VRADICALIQFECP, VRADICFECP, 
                  VRIMPOPARTDEST, VRIMPICMSBASE)
               VALUES(
                  P_FILIAL, P_LANCTONF, C_IMPOSTONF.CDIMPOSTO, V_SEQUIMPOSTNF, 
                  C_IMPOSTONF.VRCONTITIMP, C_IMPOSTONF.VRPERREDBCIT, C_IMPOSTONF.VRBASECALCIT, C_IMPOSTONF.VRALIQITEM, 
                  C_IMPOSTONF.VRPARDEDIT, ROUND(C_IMPOSTONF.VRIMPOSTOIT, V_NRDECITOTANF), C_IMPOSTONF.CDFISCALIT, C_IMPOSTONF.CDSITUTRIBIT,
                  C_IMPOSTONF.CDFISCOPERIT, C_IMPOSTONF.CDSUFXCFOPIT, C_IMPOSTONF.NRITPROIMPOS, C_IMPOSTONF.VRBCICMSSTRETIDO, 
                  C_IMPOSTONF.VRICMSSTRETIDO, C_IMPOSTONF.IDTRIMPSTII, C_IMPOSTONF.VRADICALIQFECP, C_IMPOSTONF.VRADICFECP,
                  C_IMPOSTONF.VRIMPOPARTDEST, ROUND(C_IMPOSTONF.VRIMPICMSBASE, V_NRDECITOTANF));
            END IF;

            V_SEQUIMPOSTNF := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_SEQUIMPOSTNF) + 1)),2,0);
         END LOOP;
      END IF;
   END IF;

   FOR C_CARGA IN (SELECT DISTINCT CDIMPOSTO
                     FROM IMPOSTONF
                     WHERE CDFILIAL = P_FILIAL
                       AND NRLANCTONF = P_LANCTONF) LOOP

      V_CARGA := VALOR_CARGA_TRIBUTARIA(C_CARGA.CDIMPOSTO, P_FILIAL, P_LANCTONF);
      IF V_CARGA > 0 THEN
         UPDATE IMPOSTONF
            SET VRIMPCARGATRIBI = V_CARGA
           WHERE CDFILIAL = P_FILIAL
             AND NRLANCTONF = P_LANCTONF
             AND CDIMPOSTO = C_CARGA.CDIMPOSTO
             AND NRIMPOSNF = (SELECT MAX(NRIMPOSNF)
                                      FROM IMPOSTONF
                                      WHERE CDFILIAL = P_FILIAL
                                        AND NRLANCTONF = P_LANCTONF
                                        AND CDIMPOSTO = C_CARGA.CDIMPOSTO);

      END IF;
   END LOOP;

   FOR C_IMPOSTORETI IN (SELECT N.CDEMPRESA, I.CDIMPOSTO, N.IDTPIJURNF, N.NRINSJURNF, N.DTENTRSAID
                         FROM IMPOSTO I, NOTAFISCAL N, IMPOSTONF IP
                         WHERE N.CDFILIAL   = P_FILIAL      AND
                               N.NRLANCTONF = P_LANCTONF    AND
                               N.CDFILIAL   = IP.CDFILIAL   AND
                               N.NRLANCTONF = IP.NRLANCTONF AND
                               IP.CDIMPOSTO = I.CDIMPOSTO   AND
                               I.IDTRATIMPO   = w_R         AND
                               I.IDUTVRMENSBC = w_S) LOOP
      BASECALC_RETIDO('S', P_FILIAL, P_LANCTONF, C_IMPOSTORETI.IDTPIJURNF, C_IMPOSTORETI.NRINSJURNF,
                         C_IMPOSTORETI.DTENTRSAID, C_IMPOSTORETI.CDIMPOSTO, w_S, C_IMPOSTORETI.CDEMPRESA,
                         P_INSCESTA, V_PAISORIG, V_ESTAORIG, V_PAISDEST, V_ESTADEST, V_CDGRUPOFISC, V_CDGRPFISCSV, P_TIPOOPER);
   END LOOP;

/* SE O IPI COMPOR A BASE DE CALCULO DO ICMS E O ICMS TIVER O CODIGO FISCAL IGUAL A 1 SERA ATUALIZADO COM O IDENTIFICADOR 4 */
   FOR C_IMPFISC IN (SELECT CDFILIAL, NRLANCTONF, CDIMPOSTO, CDSITUTRIBNF, CDFISCOPERNF, CDFISCALNF
                       FROM IMPOSTONF IP
                      WHERE IP.CDFILIAL = P_FILIAL
                        AND IP.NRLANCTONF = P_LANCTONF
                        AND IP.IDIMPOSTONF = w_1
                        AND IP.CDFISCALNF = w_1) LOOP


      SELECT MAX(BC.CDIMPOBCALC) AS CDIMPOBCALC
        INTO V_CDIMPOBCALC
        FROM BASECALCTPOPER BC
       WHERE (BC.IDENTRSAIDOP = 'S')
         AND (BC.CDTIPOOPER = P_TIPOOPER)
         AND (BC.CDIMPOSTO = C_IMPFISC.CDIMPOSTO)
         AND (BC.CDIMPOBCALC IS NOT NULL)
         AND ((SUBSTR(C_IMPFISC.CDSITUTRIBNF,2,2)  = BC.CDCSTIMPOTPOP)  OR (BC.CDCSTIMPOTPOP  IS NULL))
         AND ((SUBSTR(C_IMPFISC.CDFISCOPERNF,2,4) = BC.CDCFOPIMPOTPOP) OR (BC.CDCFOPIMPOTPOP IS NULL))
         AND (C_IMPFISC.CDFISCALNF = BC.CDFISCIMPOTPOP) OR (BC.CDFISCIMPOTPOP IS NULL)
         AND ((BC.CDEMPRESABCTP = P_EMPRESA) OR (BC.CDEMPRESABCTP IS NULL));

      IF V_CDIMPOBCALC IS NULL THEN
         SELECT MAX(BC.CDIMPOBCALC) AS CDIMPOBCALC
           INTO V_CDIMPOBCALC
           FROM BASECALC BC
          WHERE BC.CDIMPOSTO = C_IMPFISC.CDIMPOSTO
            AND BC.CDIMPOBCALC IS NOT NULL
            AND ((SUBSTR(C_IMPFISC.CDSITUTRIBNF,2,2)  = BC.CDCSTIMPO)  OR (BC.CDCSTIMPO  IS NULL))
            AND ((SUBSTR(C_IMPFISC.CDFISCOPERNF,2,10) = BC.CDCFOPIMPO) OR (BC.CDCFOPIMPO IS NULL))
            AND (C_IMPFISC.CDFISCALNF = BC.CDFISCIMPO) OR (BC.CDFISCIMPO IS NULL)
            AND BC.IDTIPOBCALC = 'I'
            AND ((BC.CDEMPRESABC = P_EMPRESA) OR (BC.CDEMPRESABC IS NULL));

         IF NOT V_CDIMPOBCALC IS NULL THEN
            UPDATE IMPOSTONF
               SET IDIMPOSTONF = w_4
             WHERE CDFILIAL   = C_IMPFISC.CDFILIAL
               AND NRLANCTONF = C_IMPFISC.NRLANCTONF
               AND CDIMPOSTO  = V_CDIMPOBCALC;
         END IF;
      ELSE
         UPDATE IMPOSTONF
         SET IDIMPOSTONF = '4'
         WHERE CDFILIAL   = C_IMPFISC.CDFILIAL   AND
               NRLANCTONF = C_IMPFISC.NRLANCTONF AND
               CDIMPOSTO  = V_CDIMPOBCALC;
      END IF;
   END LOOP;

   UPDATE NOTAFISCAL
   SET VRNOTAFISC = NVL(V_TOTALNOTA,0),
       VRPRODUTOS = NVL(V_LIQUIDO,0),
       VRDISPNFDEVO = NVL(V_TOTALNOTA,0),
       IDERROS    = w_000
   WHERE CDFILIAL   = P_FILIAL AND
         NRLANCTONF = P_LANCTONF;

   DELETE 
     FROM INFOPAGANFE
    WHERE CDFILIAL = P_FILIAL
      AND NRLANCTONF = P_LANCTONF;

   SELECT ROUND(NVL(SUM(IT.VRTOTIMPONF),0), V_NRDECITOTANF)
     INTO V_IMPOSRETI
     FROM IMPOSNFTOT IT, IMPOSTO I
    WHERE I.CDIMPOSTO    = IT.CDIMPOSTO
      AND IT.CDFILIAL    = P_FILIAL
      AND IT.NRLANCTONF  = P_LANCTONF
      AND ((I.IDDESCRFONTE <> w_A) AND (I.IDDESCRFONTE <> 'N'))
      AND I.IDTRATIMPO   = w_R;

   V_TOTALNOTA  := V_TOTALNOTA - V_IMPOSRETI;
   P_VRNOTAFISC := V_TOTALNOTA;

   /*
   SELECT NVL(SUM(VRORIGREC),0), MAX(NRLANBOLREC)
   INTO   V_VRCONTAREC,          V_NRLANBOLREC
   FROM CONTARECEBER
   WHERE CDFILIAL   = P_FILIAL AND
         NRLANCTONF = P_LANCTONF;

   IF (V_VRCONTAREC <> V_TOTALNOTA) AND (V_IMPOSRETI > 0) AND
      (V_IDDOCFINANC <> w_L) AND (V_NRLANBOLREC IS NULL) THEN
      APURAC_VENC(P_FILIAL, P_CLIENTE, P_LANCTONF);
   END IF;
   */

   --ATUALIZAÇÃO DO CÓDIGO FISCAL DA OPERAÇÃO NA TABELA DE NOTA FISCAL

   SELECT MAX(CDCFOPINFUSU), MAX(DSCFOPINFUSU)
     INTO V_CDCFOPINFUSU,    V_DSCFOPINFUSU
     FROM NOTAFISCAL
    WHERE CDFILIAL = P_FILIAL
      AND NRLANCTONF = P_LANCTONF;

   IF (V_CDCFOPINFUSU IS NULL) OR (V_CFOPINFUSU = 'N')  THEN
      SELECT COUNT(DISTINCT CDFISOPEITEM), MAX(CDFISOPEITEM)
        INTO V_COUNT                     , V_CDFISOPENTF
        FROM ITEMPRODUTO
       WHERE (CDFILIAL   = P_FILIAL) AND
             (NRLANCTONF = P_LANCTONF);

      IF (V_COUNT > 1) THEN
         UPDATE NOTAFISCAL
         SET CDFISOPENTF = '***'
         WHERE CDFILIAL   = P_FILIAL
           AND NRLANCTONF = P_LANCTONF;
      ELSIF (V_COUNT <= 1) THEN
         UPDATE NOTAFISCAL
            SET CDFISOPENTF = V_CDFISOPENTF
          WHERE (CDFILIAL   = P_FILIAL)
            AND (NRLANCTONF = P_LANCTONF);
      END IF;
   ELSE
      UPDATE NOTAFISCAL
         SET CDFISOPENTF  = V_CDCFOPINFUSU
       WHERE CDFILIAL   = P_FILIAL
         AND NRLANCTONF = P_LANCTONF;

      UPDATE ITEMPRODUTO
         SET CDFISOPEITEM = V_CDCFOPINFUSU
       WHERE CDFILIAL   = P_FILIAL
         AND NRLANCTONF = P_LANCTONF;

      UPDATE ITEMPROIMPOS
         SET CDFISCOPERIT = V_CDCFOPINFUSU
       WHERE CDFILIAL   = P_FILIAL
         AND NRLANCTONF = P_LANCTONF;

      UPDATE IMPOSTONF
         SET CDFISCOPERNF = V_CDCFOPINFUSU
       WHERE CDFILIAL   = P_FILIAL
         AND NRLANCTONF = P_LANCTONF;
   END IF;

   IF (V_DSCFOPINFUSU IS NOT NULL)  THEN
      UPDATE NOTAFISCAL
         SET DSCDFISOPENF = V_DSCFOPINFUSU, DSCFOPINFUSU = V_DSCFOPINFUSU
       WHERE CDFILIAL   = P_FILIAL
         AND NRLANCTONF = P_LANCTONF;
   END IF;

   UPDATE ITEMPRODUTO
   SET IDAVISOSITEM  = w_00000
   WHERE (CDFILIAL   = P_FILIAL) AND
         (NRLANCTONF = P_LANCTONF);

   UPDATE ITEMPROIMPOS
   SET IDAVISIMPIT   = w_00000,
       IDERROSIMPIT  = w_00000
   WHERE (CDFILIAL   = P_FILIAL) AND
         (NRLANCTONF = P_LANCTONF);


--IDENTIFICADOR DE ERROS E AVISOS
   IF NOT(P_TIPOOPER IN ('09', '10', '12')) THEN /*VALE DE TRANSFERENCIA, SAIDA SEM NOTA, NOTA DE CREDITO/DEBITO*/
      /* (AVISO) ITEM COM CÓDIGO DA SITUAÇÃO TRIBUTÁRIA INVÁLIDO */
      Begin
         SELECT IDERROAVISOFIL
         INTO   V_IDERROAVISO
         FROM ERROAVISONFFIL
         WHERE CDERROAVISOFIL = w_Av09
           AND CDFILIAL = V_CDFILIEMIT;
      Exception
         When No_Data_Found Then
            V_IDERROAVISO := Null;
      End;

      IF V_IDERROAVISO IS NULL THEN
         Begin
            SELECT IDERROAVISO
            INTO   V_IDERROAVISO
            FROM ERROAVISONF
            WHERE CDERROAVISO = w_Av09;
         Exception
            When No_Data_Found Then
               V_IDERROAVISO := Null;
         End;
      END IF;

      UPDATE ITEMPRODUTO
      SET IDAVISOSITEM = w_1 || SUBSTR(IDAVISOSITEM,2,4)
      WHERE (CDFILIAL   = P_FILIAL)   AND
            (NRLANCTONF = P_LANCTONF) AND
            ((CDSITUTRIBPR IS NULL) OR (LENGTH(TRIM(CDSITUTRIBPR)) < 3)) AND
            (V_IDERROAVISO <> w_N) AND
            (V_IDCONSPARFIS <> w_N);

      /* (AVISO) ITEM COM CÓDIGO FISCAL DE OPERAÇÃO INVÁLIDO */
      Begin
         SELECT IDERROAVISOFIL
         INTO   V_IDERROAVISO
         FROM ERROAVISONFFIL
         WHERE CDERROAVISOFIL = w_Av10
           AND CDFILIAL = V_CDFILIEMIT;
      Exception
         When No_Data_Found Then
            V_IDERROAVISO := Null;
      End;

      IF V_IDERROAVISO IS NULL THEN
         Begin
            SELECT IDERROAVISO
            INTO   V_IDERROAVISO
            FROM ERROAVISONF
            WHERE CDERROAVISO = w_Av10;
         Exception
            When No_Data_Found Then
               V_IDERROAVISO := Null;
         End;
      END IF;

      UPDATE ITEMPRODUTO
      SET IDAVISOSITEM = SUBSTR(IDAVISOSITEM,1,1) || w_1 || SUBSTR(IDAVISOSITEM,3,3)
      WHERE (CDFILIAL   = P_FILIAL)   AND
            (NRLANCTONF = P_LANCTONF) AND
            ((CDFISOPEITEM IS NULL) OR (LENGTH(CDFISOPEITEM) < 3)) AND
            (V_IDERROAVISO <> w_N) AND
            (V_IDCONSPARFIS <> w_N);

      IF NOT(P_TIPOOPER IN ('07', '12')) THEN
         /* (AVISO) IMPOSTO DO ITEM DA ENTRADA COM CÓDIGO FISCAL INVÁLIDO */
         Begin
            SELECT IDERROAVISOFIL
            INTO   V_IDERROAVISO
            FROM ERROAVISONFFIL
            WHERE CDERROAVISOFIL = w_Av04
              AND CDFILIAL = V_CDFILIEMIT;
         Exception
            When No_Data_Found Then
               V_IDERROAVISO := Null;
         End;

         IF V_IDERROAVISO IS NULL THEN
            Begin
               SELECT IDERROAVISO
               INTO   V_IDERROAVISO
               FROM ERROAVISONF
               WHERE CDERROAVISO = w_Av04;
            Exception
               When No_Data_Found Then
                  V_IDERROAVISO := Null;
            End;
         END IF;

         UPDATE ITEMPROIMPOS
         SET IDAVISIMPIT = SUBSTR(IDAVISIMPIT,1,1) || w_1 || SUBSTR(IDAVISIMPIT,3,3)
         WHERE (CDFILIAL   = P_FILIAL)   AND
               (NRLANCTONF = P_LANCTONF) AND
               ((CDFISCALIT IS NULL) OR LENGTH(CDFISCALIT) <> 1) AND
               (V_IDERROAVISO <> w_N);

         /* (AVISO) IMPOSTO DO ITEM COM SITUAÇÃO TRIBUTÁRIA(CST) INVÁLIDA */
         Begin
            SELECT IDERROAVISOFIL
            INTO   V_IDERROAVISO
            FROM ERROAVISONFFIL
            WHERE CDERROAVISOFIL = w_Av05
              AND CDFILIAL = V_CDFILIEMIT;
         Exception
            When No_Data_Found Then
               V_IDERROAVISO := Null;
         End;

         IF V_IDERROAVISO IS NULL THEN
            Begin
               SELECT IDERROAVISO
               INTO   V_IDERROAVISO
               FROM ERROAVISONF
               WHERE CDERROAVISO = w_Av05;
            Exception
               When No_Data_Found Then
                  V_IDERROAVISO := Null;
            End;
         END IF;

         UPDATE ITEMPROIMPOS
         SET IDAVISIMPIT = SUBSTR(IDAVISIMPIT,1,2) || w_1 || SUBSTR(IDAVISIMPIT,4,2)
         WHERE (CDFILIAL   = P_FILIAL)   AND
               (NRLANCTONF = P_LANCTONF) AND
               ((CDSITUTRIBIT IS NULL) OR (LENGTH(CDSITUTRIBIT) < 2))AND
               (V_IDERROAVISO <> w_N)    AND
               (V_IDCONSPARFIS <> w_N);

         /* (AVISO) IMPOSTO DO ITEM COM CÓD. FISCAL OPERAÇÃO - CFOP INVÁLIDO */
         Begin
            SELECT IDERROAVISOFIL
            INTO   V_IDERROAVISO
            FROM ERROAVISONFFIL
            WHERE CDERROAVISOFIL = w_Av06
              AND CDFILIAL = V_CDFILIEMIT;
         Exception
            When No_Data_Found Then
               V_IDERROAVISO := Null;
         End;

         IF V_IDERROAVISO IS NULL THEN
            Begin
               SELECT IDERROAVISO
               INTO   V_IDERROAVISO
               FROM ERROAVISONF
               WHERE CDERROAVISO = w_Av06;
            Exception
               When No_Data_Found Then
                  V_IDERROAVISO := Null;
            End;
         END IF;

         UPDATE ITEMPROIMPOS
         SET IDAVISIMPIT = SUBSTR(IDAVISIMPIT,1,3) || w_1 || SUBSTR(IDAVISIMPIT,5,1)
         WHERE (CDFILIAL   = P_FILIAL)   AND
               (NRLANCTONF = P_LANCTONF) AND
               ((CDFISCOPERIT IS NULL) OR (LENGTH(CDFISCOPERIT) < 3)) AND
               (V_IDERROAVISO <> w_N)    AND
               (V_IDCONSPARFIS <> w_N);

      END IF;
   END IF;

   SELECT MAX(TO_NUMBER(IDAVISOSITEM))
   INTO   V_ERROAVISO
   FROM ITEMPRODUTO
   WHERE (CDFILIAL   = P_FILIAL) AND
         (NRLANCTONF = P_LANCTONF);

   IF (V_ERROAVISO > 0) THEN
      UPDATE NOTAFISCAL
      SET IDAVISOS = w_1
      WHERE (CDFILIAL   = P_FILIAL) AND
            (NRLANCTONF = P_LANCTONF);
   ELSE
      SELECT MAX(TO_NUMBER(IDAVISIMPIT))
      INTO   V_ERROAVISO
      FROM ITEMPROIMPOS
      WHERE (CDFILIAL   = P_FILIAL) AND
            (NRLANCTONF = P_LANCTONF);

      IF (V_ERROAVISO > 0) THEN
         UPDATE NOTAFISCAL
         SET IDAVISOS = w_1
         WHERE (CDFILIAL   = P_FILIAL) AND
               (NRLANCTONF = P_LANCTONF);
      ELSE
         UPDATE NOTAFISCAL
         SET IDAVISOS = w_0
         WHERE (CDFILIAL   = P_FILIAL) AND
               (NRLANCTONF = P_LANCTONF);
      END IF;
   END IF;

   /*(ERRO) ITEM COM VALOR UNITARIO IGUAL A ZERO*/
   Begin
     SELECT IDERROAVISOFIL
      INTO  V_IDERROAVISO
      FROM ERROAVISONFFIL
      WHERE CDERROAVISOFIL = w_Er04
        AND CDFILIAL = V_CDFILIEMIT;
   Exception
      When No_Data_Found Then
         V_IDERROAVISO := Null;
   End;

   IF V_IDERROAVISO IS NULL THEN
      Begin
        SELECT IDERROAVISO
         INTO  V_IDERROAVISO
         FROM ERROAVISONF
         WHERE CDERROAVISO = w_Er04;
      Exception
         When No_Data_Found Then
            V_IDERROAVISO := Null;
      End;
   END IF;

   IF P_TIPOOPER <> '03' THEN
      UPDATE NOTAFISCAL
      SET IDERROS = w_101
      WHERE CDFILIAL   =  P_FILIAL    AND
            NRLANCTONF =  P_LANCTONF  AND
            V_IDERROAVISO <> w_N      AND
            NRLANCTONF = (SELECT MAX(NRLANCTONF)
                          FROM ITEMPRODUTO
                          WHERE CDFILIAL   =  P_FILIAL   AND
                                NRLANCTONF =  P_LANCTONF AND
                                VRUNITITEM = 0           AND
                                QTITEMPROD > 0);

   END IF;

   IF P_TIPOOPER = w_11 THEN
      Begin
         SELECT IDERROAVISOFIL
         INTO   V_IDERROAVISO
         FROM ERROAVISONFFIL
         WHERE CDERROAVISOFIL = w_Er06
           AND CDFILIAL = V_CDFILIEMIT;
      Exception
         When No_Data_Found Then
            V_IDERROAVISO := Null;
      End;

      IF V_IDERROAVISO IS NULL THEN
         Begin
            SELECT IDERROAVISO
            INTO   V_IDERROAVISO
            FROM ERROAVISONF
            WHERE CDERROAVISO = w_Er06;
         Exception
            When No_Data_Found Then
               V_IDERROAVISO := Null;
         End;
      END IF;
      /* (ERRO) SOMA DAS SAÍDAS SEM NOTA FISCAL DIFERE DO VALOR TOTAL DA NOTA */
      UPDATE NOTAFISCAL
      SET IDERROS = w_1||SUBSTR(IDERROS,2,2)
      WHERE CDFILIAL   =  P_FILIAL    AND
            NRLANCTONF =  P_LANCTONF  AND
            V_IDERROAVISO <> w_N      AND
            V_FAIXATOLER < (SELECT ABS(SUM(N.VRNOTAFISC) - NOTAFISCAL.VRNOTAFISC)
                            FROM ITEMNOTAFISC I, NOTAFISCAL N
                            WHERE I.CDFILIAL   = P_FILIAL      AND
                                  I.NRLANCTONF = P_LANCTONF    AND
                                  N.CDFILIAL   = I.CDFILIALIT  AND
                                  N.NRLANCTONF = I.NRLANCTONFIT);
   END IF;

   -- CALCULANDO PESO BRUTO DOS PRODUTOS DA NOTA FISCAL
   BEGIN

      SELECT VRPBRUTOVOLU
      INTO V_VRPESOBRUTO
      FROM NOTAFISCAL
      WHERE CDFILIAL   = P_FILIAL AND
            NRLANCTONF = P_LANCTONF;

   EXCEPTION

      WHEN No_Data_Found THEN
         V_VRPESOBRUTO := Null;

   END;

   IF (V_VRPESOBRUTO IS NULL) OR (V_VRPESOBRUTO = 0) THEN

      BEGIN

         SELECT SUM(QTITEMPROD * PR.VRPESOBRUTPR)
           INTO V_VRPESOBRUTO
           FROM ITEMPRODUTO I, PRODUTO PR
          WHERE I.CDFILIAL    = P_FILIAL
            AND I.NRLANCTONF  = P_LANCTONF
            AND PR.CDPRODUTO  = I.CDPRODUTO;

      EXCEPTION

         WHEN No_Data_Found THEN
            V_VRPESOBRUTO := Null;

      END;

      IF (V_VRPESOBRUTO IS NULL) OR (V_VRPESOBRUTO = 0) THEN

         SELECT SUM(QTITEMPROD * PA.VRPESOUNID * PR.VRFATOCONV)
         INTO   V_VRPESOBRUTO
         FROM ITEMPRODUTO I, PRODUTO PR, PRODUTO PA
         WHERE I.CDFILIAL    = P_FILIAL       AND
               I.NRLANCTONF  = P_LANCTONF     AND
               PR.CDPRODUTO  = I.CDPRODUTO    AND
               PR.CDPRODESTO = PA.CDPRODUTO;

         IF (V_VRPESOBRUTO <> 0) THEN

            UPDATE NOTAFISCAL
            SET VRPBRUTOVOLU = V_VRPESOBRUTO
            WHERE (CDFILIAL   = P_FILIAL)   AND
                  (NRLANCTONF = P_LANCTONF);

         END IF;

      ELSE

         UPDATE NOTAFISCAL
            SET VRPBRUTOVOLU = V_VRPESOBRUTO
          WHERE CDFILIAL   = P_FILIAL
            AND NRLANCTONF = P_LANCTONF;

      END IF;

   END IF;

   -- CALCULANDO PESO LÍQUIDO DOS PRODUTOS DA NOTA FISCAL
   BEGIN

      SELECT VRPLIQUVOLU
      INTO V_VRLIQUORIG
      FROM NOTAFISCAL
      WHERE CDFILIAL   = P_FILIAL AND
            NRLANCTONF = P_LANCTONF;

   EXCEPTION

      WHEN No_Data_Found THEN
         V_VRLIQUORIG := Null;

   END;

   IF (V_VRLIQUORIG IS NULL) OR (V_VRLIQUORIG = 0) THEN

      SELECT NVL(IDCALCPESONF,'N')
      INTO   V_IDCALCPESONF
      FROM PARAMGERAL;

      IF(V_IDCALCPESONF = 'S') THEN

         SELECT SUM(I.QTITEMPROD * NVL(P.VRPESOLIQUPR, 0)) VRPLIQUEVOLU
           INTO V_VRLIQUORIG
           FROM ITEMPRODUTO I, PRODUTO P
          WHERE I.CDPRODUTO   = P.CDPRODUTO
            AND I.CDFILIAL    = P_FILIAL
            AND I.NRLANCTONF  = P_LANCTONF;

         IF V_VRLIQUORIG IS NOT NULL AND V_VRLIQUORIG <> 0 THEN

            UPDATE NOTAFISCAL
               SET VRPLIQUVOLU = V_VRLIQUORIG
             WHERE CDFILIAL   = P_FILIAL
               AND NRLANCTONF = P_LANCTONF;

         END IF;

      END IF;

   END IF;

   --201213 - Cubagem
   FOR C_PRODUTO IN (SELECT IP.NRSEQITPROD, P.VRALTURACUBO, P.VRLARGURACUBO, P.VRCOMPRICUBO, P.VRFATORCUBO
                       FROM ITEMPRODUTO IP, PRODUTO P
                      WHERE IP.CDFILIAL   = P_FILIAL
                        AND IP.NRLANCTONF = P_LANCTONF
                        AND IP.CDPRODUTO  = P.CDPRODUTO) LOOP
      V_VRCUBAGEM := C_PRODUTO.VRALTURACUBO * C_PRODUTO.VRLARGURACUBO * C_PRODUTO.VRCOMPRICUBO;
      V_VRPESOCUBADO := C_PRODUTO.VRALTURACUBO * C_PRODUTO.VRLARGURACUBO * C_PRODUTO.VRCOMPRICUBO * C_PRODUTO.VRFATORCUBO;
      IF V_VRCUBAGEM > 0 THEN
         UPDATE ITEMPRODUTO
            SET VRCUBAGEM = V_VRCUBAGEM
          WHERE CDFILIAL   = P_FILIAL
            AND NRLANCTONF = P_LANCTONF
            AND NRSEQITPROD = C_PRODUTO.NRSEQITPROD;
      END IF;
      IF V_VRPESOCUBADO > 0 THEN
         UPDATE ITEMPRODUTO
            SET VRPESOCUBADO = V_VRPESOCUBADO
          WHERE CDFILIAL   = P_FILIAL
            AND NRLANCTONF = P_LANCTONF
            AND NRSEQITPROD = C_PRODUTO.NRSEQITPROD;
      END IF;
   END LOOP;

   SELECT NVL(SUM(VRCUBAGEM),0) AS VRTOTCUB, NVL(SUM(VRPESOCUBADO),0) AS VRTOTPESOCUB
     INTO V_VRCUBAGEM, V_VRPESOCUBADO
     FROM ITEMPRODUTO
    WHERE CDFILIAL   = P_FILIAL
      AND NRLANCTONF = P_LANCTONF;

   DELETE
     FROM DADOSADIC
    WHERE CDFILIAL = P_FILIAL
      AND NRLANCTONF = P_LANCTONF
      AND UPPER(DSDADOADIC) LIKE 'CUBAGEM:%';

   IF V_VRCUBAGEM > 0 THEN
      INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
                     VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, 'CUBAGEM: '||DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_VRCUBAGEM, 6), '9999999999999.999999')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_VRCUBAGEM, 6), '9999999999999.999999')), LTRIM(TO_CHAR(ROUND(V_VRCUBAGEM, 6), '9999999999999.999999'))));
      V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
   END IF;

   /*201168 - Descrição de Imposto na NF / 201441 - RETENÇÃO DO IR PARA ORGÃO PUPLICOS
   Codigos de Mensagem:
   RTV - Valor do Imposto
   RTM - Memória de Calculo
   RTB - Base Legal*/
   DELETE
     FROM DADOSADIC
    WHERE CDFILIAL = P_FILIAL
      AND NRLANCTONF = P_LANCTONF
      AND CDMENSAGEM IN ('RTV','RTM','RTB');

   SELECT COUNT(*) INTO V_COUNTBASELEGAL FROM MENSAGEM WHERE CDMENSAGEM IN ('RTV','RTM','RTB');
   IF (V_COUNTBASELEGAL < 3) THEN
      DELETE FROM MENSAGEM WHERE CDMENSAGEM IN ('RTV','RTM','RTB');
      INSERT INTO MENSAGEM(CDMENSAGEM,DSMENSAGEM)
                    VALUES('RTV','Valor do Imposto');
      INSERT INTO MENSAGEM(CDMENSAGEM,DSMENSAGEM)
                    VALUES('RTM','Memoria de Calculo');
      INSERT INTO MENSAGEM(CDMENSAGEM,DSMENSAGEM)
                    VALUES('RTB','Base Legal');
   END IF;
   FOR C_IMPOSTONF IN (SELECT NOTAFISCAL.NRLANCTONF,CDTIPOOPER,IMPOSTO.CDIMPOSTO,NVL(IDGERVRDADOSADIC,'N')IDGERVRDADOSADIC,
                              DSVRDADOSADICTPOP,SGIMPOSTO,IDTPINFODADOSADIC,DSBASELEGALDADOSADIC,
                              DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(VRBASECALCNF, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(VRBASECALCNF, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(VRBASECALCNF, 2), '9999999999999.99'))) AS VRBASECALCNF,
                              DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(VRALIQNF, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(VRALIQNF, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(VRALIQNF, 2), '9999999999999.99'))) AS VRALIQNF,
                              DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(VRIMPOSTONF, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(VRIMPOSTONF, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(VRIMPOSTONF, 2), '9999999999999.99'))) AS VRIMPOSTONF
                         FROM NOTAFISCAL,IMPOSTONF,IMPOSTO
                        WHERE NOTAFISCAL.NRLANCTONF = IMPOSTONF.NRLANCTONF
                          AND IMPOSTONF.CDIMPOSTO = IMPOSTO.CDIMPOSTO
                          AND NOTAFISCAL.NRLANCTONF = P_LANCTONF
                          AND NOTAFISCAL.CDFILIAL = P_FILIAL
                          AND IMPOSTONF.VRIMPOSTONF > 0) LOOP

      IF (C_IMPOSTONF.IDGERVRDADOSADIC = 'S') THEN
         IF (INSTR(C_IMPOSTONF.DSVRDADOSADICTPOP,C_IMPOSTONF.CDTIPOOPER) > 0) OR (C_IMPOSTONF.DSVRDADOSADICTPOP = 'T') THEN -- O TIPO DE OPERAÇÃO DA NOTA ESTÁ NA LISTA OU ESTÁ PARAMETRIZADO COMO TODOS
            IF (C_IMPOSTONF.IDTPINFODADOSADIC = 'V') THEN --Valor do Imposto
               INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, CDMENSAGEM, DSDADOADIC)
                              VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, 'RTV', 'Valor '||C_IMPOSTONF.SGIMPOSTO||': '||C_IMPOSTONF.VRIMPOSTONF);
               V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
            END IF;
            IF (C_IMPOSTONF.IDTPINFODADOSADIC = 'M') THEN --Memoria de Calculo
               V_DSBASELEGAL := 'Calculo '||C_IMPOSTONF.SGIMPOSTO||': '||'Base de Calculo: '||C_IMPOSTONF.VRBASECALCNF||' - Aliquota: '||C_IMPOSTONF.VRALIQNF||'% - Valor: '||C_IMPOSTONF.VRIMPOSTONF;
               INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, CDMENSAGEM, DSDADOADIC)
                              VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC,'RTM', V_DSBASELEGAL);
               V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
            END IF;
            IF (C_IMPOSTONF.IDTPINFODADOSADIC = 'B') THEN --Base Legal
               V_DSBASELEGAL := C_IMPOSTONF.DSBASELEGALDADOSADIC;
               V_DSBASELEGAL := REPLACE(V_DSBASELEGAL,'[BASE]',C_IMPOSTONF.VRBASECALCNF);
               V_DSBASELEGAL := REPLACE(V_DSBASELEGAL,'[ALIQ]',C_IMPOSTONF.VRALIQNF);
               V_DSBASELEGAL := REPLACE(V_DSBASELEGAL,'[VALOR]',C_IMPOSTONF.VRIMPOSTONF);
               INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, CDMENSAGEM, DSDADOADIC)
                              VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC,'RTB', V_DSBASELEGAL);
               V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
            END IF;
         END IF;
      END IF;
   END LOOP;
   /* FIM - 201168 / 201441

   /*DELETE
     FROM DADOSADIC
    WHERE CDFILIAL = P_FILIAL
      AND NRLANCTONF = P_LANCTONF
      AND UPPER(DSDADOADIC) LIKE 'PESO CUBADO:%';

   IF V_VRPESOCUBADO > 0 THEN
      INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
                     VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, 'PESO CUBADO: '||DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_VRPESOCUBADO, 6), '9999999999999.999999')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_VRPESOCUBADO, 6), '9999999999999.999999')), LTRIM(TO_CHAR(ROUND(V_VRPESOCUBADO, 6), '9999999999999.999999'))));
      V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
   END IF;*/

--ATUALIZAÇÃO DO CÓDIGO FISCAL DA OPERAÇÃO NA TABELA DE NOTA FISCAL

   SELECT COUNT(DISTINCT CDFISOPEITEM), MAX(CDFISOPEITEM)
   INTO   V_COUNT                     , V_CDFISOPENTF
   FROM ITEMPRODUTO
   WHERE (CDFILIAL   = P_FILIAL) AND
         (NRLANCTONF = P_LANCTONF);

   IF (V_COUNT > 1) THEN
      UPDATE NOTAFISCAL
      SET CDFISOPENTF = '***'
      WHERE CDFILIAL   = P_FILIAL   AND
            NRLANCTONF = P_LANCTONF AND
            CDFISOPENTF IS NULL;
   ELSIF (V_COUNT = 1) THEN
      Begin
         SELECT CDFISOPENTF
         INTO   V_CDFISOPENTF
         FROM NOTAFISCAL
         WHERE CDFILIAL   = P_FILIAL AND
               NRLANCTONF = P_LANCTONF;
      Exception
         When No_Data_Found Then
            V_CDFISOPENTF := Null;
      End;

      IF (V_CDFISOPENTF IS NULL) OR (V_CDFISOPENTF = '***') THEN
         UPDATE NOTAFISCAL
         SET (CDFISOPENTF) = (SELECT MAX(CDFISOPEITEM) AS CDFISOPEITEM
                              FROM ITEMPRODUTO
                              WHERE (CDFILIAL   = P_FILIAL) AND
                                    (NRLANCTONF = P_LANCTONF))
         WHERE (CDFILIAL   = P_FILIAL)   AND
               (NRLANCTONF = P_LANCTONF) AND
               (NVL(CDFISOPENTF, '***') = '***');
      ELSE
         UPDATE ITEMPRODUTO
         SET CDFISOPEITEM = V_CDFISOPENTF
         WHERE CDFILIAL   = P_FILIAL   AND
               NRLANCTONF = P_LANCTONF;

         UPDATE ITEMPROIMPOS
         SET CDFISCOPERIT = V_CDFISOPENTF
         WHERE CDFILIAL   = P_FILIAL   AND
               NRLANCTONF = P_LANCTONF;

         UPDATE IMPOSTONF
         SET CDFISCOPERNF = V_CDFISOPENTF
         WHERE CDFILIAL   = P_FILIAL   AND
               NRLANCTONF = P_LANCTONF;
      END IF;
   END IF;

   IF V_CDINTEGRACAO IS NOT NULL THEN
--INCLUSÃO DOS ENCARGOS DA NF EM CASO DE IMPORTAÇÃO
      INSERT INTO ITEMENCARGO
      (CDFILIAL, NRLANCTONF, CDENCARGO, VRITEMENCA)
      (SELECT P_FILIAL, P_LANCTONF, CDENCARGO, 0 AS VRITEMENCA
       FROM ENCARGO
       MINUS
       SELECT CDFILIAL, NRLANCTONF, CDENCARGO, 0 AS VRITEMENCA
       FROM ITEMENCARGO
       WHERE CDFILIAL   = P_FILIAL AND
             NRLANCTONF = P_LANCTONF);

      Begin
         SELECT IDERROAVISO
         INTO   V_IDERROAVISO
         FROM ERROAVISONF
         WHERE CDERROAVISO = w_Er03;
      Exception
         When No_Data_Found Then
            V_IDERROAVISO := Null;
      End;

      UPDATE NOTAFISCAL N
      SET IDERROS = w_11||SUBSTR(IDERROS, 3, 1)
      WHERE CDFILIAL   =  P_FILIAL   AND
            NRLANCTONF =  P_LANCTONF AND
            V_IDERROAVISO <> w_N     AND
            V_FAIXATOLER < (SELECT NVL(ABS(NVL(SUM(C.VRORIGREC), (N.VRNOTAFISC - MAX(I.VRIMPOSRETI))) - (N.VRNOTAFISC - MAX(I.VRIMPOSRETI))), V_FAIXATOLER)
                            FROM CONTARECEBER C,
                                 (SELECT NVL(SUM(IT.VRTOTIMPONF),0) AS VRIMPOSRETI
                                  FROM IMPOSNFTOT IT, IMPOSTO I
                                  WHERE I.CDIMPOSTO    = IT.CDIMPOSTO AND
                                        IT.CDFILIAL    = P_FILIAL     AND
                                        IT.NRLANCTONF  = P_LANCTONF   AND
                                        I.IDDESCRFONTE <> w_A         AND
                                        I.IDTRATIMPO   = w_R) I
                            WHERE C.CDFILIAL   = P_FILIAL AND
                                  C.NRLANCTONF = P_LANCTONF);
   END IF;


   /* ESTA ROTINA ABAIXO SERVE PARA ATUALIZAR O VALOR CONTÁBIL E BRUTO DOS PRODUTOS COM A DIFERENÇA
      DE CENTAVOS ENTRE O VALOR DOS IMPOSTOS POR ÍTEM E A SUA RESPECTIVA TOTALIZAÇÃO. ESTA DIFERENÇA
      É IGNORADA NO FECHAMENTO DA NF CASO O CLIENTE TRABALHE COM UM NÚMERO MENOR DE CASAS DECIMAIS E
      PROVOCA ERROS NA CONTABILIZAÇÃO*/

   IF (V_NRDECITOTANF <> 2) AND (V_IDOPERDEVONF <> w_S) THEN
      FOR C_ATUAVRCONT IN (SELECT T.CDIMPOSTO, 
                                  SUM(T.VRIMPOSTOIT) AS VRIMPOSTOIT, 
                                  T.CDFISCALIT,
                                  I.IDIMPORECUP,
                                  I.CDCCTBLATIV,
                                  I.CDCCTBLPASS,
                                  I.IDTRATIMPO, 
                                  I.IDTIPCONTAB,
                                  I.IDDESCRFONTE
                             FROM ITEMPROIMPOS T, IMPOSTO I
                            WHERE T.CDFILIAL = P_FILIAL
                              AND T.NRLANCTONF = P_LANCTONF  
                              AND T.NRITPROIMPOS = w_1
                              AND T.CDIMPOSTO = I.CDIMPOSTO
                           GROUP BY T.CDIMPOSTO, 
                                 T.CDFISCALIT, 
                                 I.IDIMPORECUP,
                                 I.CDCCTBLATIV, 
                                 I.CDCCTBLPASS, 
                                 I.IDTRATIMPO, 
                                 I.IDTIPCONTAB, 
                                 I.IDDESCRFONTE) LOOP

         SELECT SUM(VRTOTIMPONF) - C_ATUAVRCONT.VRIMPOSTOIT
         INTO   V_VRDIFERENCA
         FROM IMPOSNFTOT
         WHERE CDFILIAL   = P_FILIAL   AND
               NRLANCTONF = P_LANCTONF AND
               CDIMPOSTO  = C_ATUAVRCONT.CDIMPOSTO;

         SELECT SUM(VRBRUTITEM), SUM(VRCONTITEM)
         INTO   V_VRBRUTO      , V_VRCONTAB
         FROM ITEMPRODUTO I, ITEMPROIMPOS T
         WHERE T.CDFILIAL     = I.CDFILIAL    AND
               T.NRLANCTONF   = I.NRLANCTONF  AND
               T.NRSEQITPROD  = I.NRSEQITPROD AND
               T.CDFILIAL     = P_FILIAL      AND
               T.NRLANCTONF   = P_LANCTONF    AND
               T.NRITPROIMPOS = w_1           AND
               T.CDIMPOSTO    = C_ATUAVRCONT.CDIMPOSTO;

         IF V_VRDIFERENCA <> 0 THEN
            IF (C_ATUAVRCONT.IDTRATIMPO = w_A) THEN
               IF ((C_ATUAVRCONT.IDIMPORECUP = w_S)  AND (C_ATUAVRCONT.CDFISCALIT = w_1)) OR
                  ((C_ATUAVRCONT.IDIMPORECUP <> w_S) AND (C_ATUAVRCONT.CDCCTBLPASS IS NOT NULL)) AND
                  (C_ATUAVRCONT.IDTIPCONTAB = w_D) THEN
                  V_ICMS := 'N';
                  FOR C_ICMS IN (SELECT CDIMPOSTO
                                   FROM IMPOSTONFE N, IMPOSTO I
                                  WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                                    AND N.CDIMPOSTONFE = '00'
                                    AND I.CDIMPOSTO = C_ATUAVRCONT.CDIMPOSTO)
                  LOOP
                     V_ICMS := 'S';
                  END LOOP;

                  IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
                     UPDATE ITEMPRODUTO
                     SET VRBRUTITEM = TRUNC(VRBRUTITEM + ((V_VRDIFERENCA / V_VRBRUTO)  * VRBRUTITEM),2)
                     WHERE EXISTS(SELECT CDFILIAL, NRLANCTONF, NRSEQITPROD
                                  FROM ITEMPROIMPOS T
                                  WHERE T.CDFILIAL    = P_FILIAL                AND
                                        T.NRLANCTONF  = P_LANCTONF              AND
                                        T.NRSEQITPROD = ITEMPRODUTO.NRSEQITPROD AND
                                        T.CDIMPOSTO   = C_ATUAVRCONT.CDIMPOSTO);
                  ELSE
                     UPDATE ITEMPRODUTO
                     SET VRBRUTITEM = ROUND(VRBRUTITEM + ((V_VRDIFERENCA / V_VRBRUTO)  * VRBRUTITEM),2)
                     WHERE EXISTS(SELECT CDFILIAL, NRLANCTONF, NRSEQITPROD
                                  FROM ITEMPROIMPOS T
                                  WHERE T.CDFILIAL    = P_FILIAL                AND
                                        T.NRLANCTONF  = P_LANCTONF              AND
                                        T.NRSEQITPROD = ITEMPRODUTO.NRSEQITPROD AND
                                        T.CDIMPOSTO   = C_ATUAVRCONT.CDIMPOSTO);
                  END IF;
               ELSE
                  V_ICMS := 'N';
                  FOR C_ICMS IN (SELECT CDIMPOSTO
                                   FROM IMPOSTONFE N, IMPOSTO I
                                  WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                                    AND N.CDIMPOSTONFE = '00'
                                    AND I.CDIMPOSTO = C_ATUAVRCONT.CDIMPOSTO)
                  LOOP
                     V_ICMS := 'S';
                  END LOOP;

                  IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
                     UPDATE ITEMPRODUTO
                     SET VRBRUTITEM = TRUNC(VRBRUTITEM + ((V_VRDIFERENCA / V_VRBRUTO)  * VRBRUTITEM),2),
                         VRCONTITEM = TRUNC(VRCONTITEM + ((V_VRDIFERENCA / V_VRCONTAB) * VRCONTITEM),2)
                     WHERE EXISTS(SELECT CDFILIAL, NRLANCTONF, NRSEQITPROD
                                  FROM ITEMPROIMPOS T
                                  WHERE T.CDFILIAL    = P_FILIAL                AND
                                        T.NRLANCTONF  = P_LANCTONF              AND
                                        T.NRSEQITPROD = ITEMPRODUTO.NRSEQITPROD AND
                                        T.CDIMPOSTO   = C_ATUAVRCONT.CDIMPOSTO);
                  ELSE
                     UPDATE ITEMPRODUTO
                     SET VRBRUTITEM = ROUND(VRBRUTITEM + ((V_VRDIFERENCA / V_VRBRUTO)  * VRBRUTITEM),2),
                         VRCONTITEM = ROUND(VRCONTITEM + ((V_VRDIFERENCA / V_VRCONTAB) * VRCONTITEM),2)
                     WHERE EXISTS(SELECT CDFILIAL, NRLANCTONF, NRSEQITPROD
                                  FROM ITEMPROIMPOS T
                                  WHERE T.CDFILIAL    = P_FILIAL                AND
                                        T.NRLANCTONF  = P_LANCTONF              AND
                                        T.NRSEQITPROD = ITEMPRODUTO.NRSEQITPROD AND
                                        T.CDIMPOSTO   = C_ATUAVRCONT.CDIMPOSTO);
                  END IF;

               END IF;
            ELSIF (C_ATUAVRCONT.IDTRATIMPO = w_D) THEN
               IF ((C_ATUAVRCONT.IDIMPORECUP = w_S) AND (C_ATUAVRCONT.CDFISCALIT = w_1))  OR
                  ((C_ATUAVRCONT.IDIMPORECUP <> w_S) AND (C_ATUAVRCONT.CDCCTBLATIV IS NOT NULL)) AND
                  (C_ATUAVRCONT.IDTIPCONTAB = w_D) THEN

                  V_ICMS := 'N';
                  FOR C_ICMS IN (SELECT CDIMPOSTO
                                   FROM IMPOSTONFE N, IMPOSTO I
                                  WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                                    AND N.CDIMPOSTONFE = '00'
                                    AND I.CDIMPOSTO = C_ATUAVRCONT.CDIMPOSTO)
                  LOOP
                     V_ICMS := 'S';
                  END LOOP;

                  IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
                     UPDATE ITEMPRODUTO
                     SET VRBRUTITEM = TRUNC(VRBRUTITEM - ((V_VRDIFERENCA / V_VRBRUTO)  * VRBRUTITEM),2)
                     WHERE EXISTS(SELECT CDFILIAL, NRLANCTONF, NRSEQITPROD
                                  FROM ITEMPROIMPOS T
                                  WHERE T.CDFILIAL    = P_FILIAL                AND
                                        T.NRLANCTONF  = P_LANCTONF              AND
                                        T.NRSEQITPROD = ITEMPRODUTO.NRSEQITPROD AND
                                        T.CDIMPOSTO   = C_ATUAVRCONT.CDIMPOSTO);
                  ELSE
                     UPDATE ITEMPRODUTO
                     SET VRBRUTITEM = ROUND(VRBRUTITEM - ((V_VRDIFERENCA / V_VRBRUTO)  * VRBRUTITEM),2)
                     WHERE EXISTS(SELECT CDFILIAL, NRLANCTONF, NRSEQITPROD
                                  FROM ITEMPROIMPOS T
                                  WHERE T.CDFILIAL    = P_FILIAL                AND
                                        T.NRLANCTONF  = P_LANCTONF              AND
                                        T.NRSEQITPROD = ITEMPRODUTO.NRSEQITPROD AND
                                        T.CDIMPOSTO   = C_ATUAVRCONT.CDIMPOSTO);
                  END IF;
               ELSE
                  V_ICMS := 'N';
                  FOR C_ICMS IN (SELECT CDIMPOSTO
                                   FROM IMPOSTONFE N, IMPOSTO I
                                  WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                                    AND N.CDIMPOSTONFE = '00'
                                    AND I.CDIMPOSTO = C_ATUAVRCONT.CDIMPOSTO)
                  LOOP
                     V_ICMS := 'S';
                  END LOOP;

                  IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
                     UPDATE ITEMPRODUTO
                     SET VRBRUTITEM = TRUNC(VRBRUTITEM - ((V_VRDIFERENCA / V_VRBRUTO)  * VRBRUTITEM),2),
                         VRCONTITEM = TRUNC(VRCONTITEM - ((V_VRDIFERENCA / V_VRCONTAB) * VRCONTITEM),2)
                     WHERE EXISTS(SELECT CDFILIAL, NRLANCTONF, NRSEQITPROD
                                  FROM ITEMPROIMPOS T
                                  WHERE T.CDFILIAL    = P_FILIAL                AND
                                        T.NRLANCTONF  = P_LANCTONF              AND
                                        T.NRSEQITPROD = ITEMPRODUTO.NRSEQITPROD AND
                                        T.CDIMPOSTO   = C_ATUAVRCONT.CDIMPOSTO);
                  ELSE
                     UPDATE ITEMPRODUTO
                     SET VRBRUTITEM = ROUND(VRBRUTITEM - ((V_VRDIFERENCA / V_VRBRUTO)  * VRBRUTITEM),2),
                         VRCONTITEM = ROUND(VRCONTITEM - ((V_VRDIFERENCA / V_VRCONTAB) * VRCONTITEM),2)
                     WHERE EXISTS(SELECT CDFILIAL, NRLANCTONF, NRSEQITPROD
                                  FROM ITEMPROIMPOS T
                                  WHERE T.CDFILIAL    = P_FILIAL                AND
                                        T.NRLANCTONF  = P_LANCTONF              AND
                                        T.NRSEQITPROD = ITEMPRODUTO.NRSEQITPROD AND
                                        T.CDIMPOSTO   = C_ATUAVRCONT.CDIMPOSTO);
                  END IF;
               END IF;
            ELSIF (C_ATUAVRCONT.IDTRATIMPO = w_R) THEN
               IF (C_ATUAVRCONT.IDIMPORECUP = w_S) THEN
                  IF (C_ATUAVRCONT.CDCCTBLATIV IS NULL) OR
                     (C_ATUAVRCONT.CDFISCALIT <> w_1) THEN

                     V_IMPOCONTAB := - V_VRIMPOSTO;
                  END IF;
               ELSE
                  IF (C_ATUAVRCONT.CDCCTBLATIV IS NULL) THEN
                     V_IMPOCONTAB := - V_VRIMPOSTO;
                  ELSE
                     IF C_ATUAVRCONT.IDDESCRFONTE = 'N' THEN
                        V_IMPOCONTAB := - V_VRIMPOSTO;
                     END IF;
                  END IF;
               END IF;

               IF (C_ATUAVRCONT.IDTIPCONTAB = w_D) THEN
                  V_ICMS := 'N';
                  FOR C_ICMS IN (SELECT CDIMPOSTO
                                   FROM IMPOSTONFE N, IMPOSTO I
                                  WHERE N.CDIMPOSTONFE = I.CDIMPOSTONFE
                                    AND N.CDIMPOSTONFE = '00'
                                    AND I.CDIMPOSTO = C_ATUAVRCONT.CDIMPOSTO)
                  LOOP
                     V_ICMS := 'S';
                  END LOOP;

                  IF ((V_IDSISTEMA = 'VND') OR (V_IDSISTEMA = 'PDV')) AND (V_ICMS = 'S') THEN
                     UPDATE ITEMPRODUTO
                     SET VRCONTITEM = TRUNC(VRCONTITEM + ((V_VRDIFERENCA / V_VRCONTAB) * VRCONTITEM),2)
                     WHERE EXISTS(SELECT CDFILIAL, NRLANCTONF, NRSEQITPROD
                                  FROM ITEMPROIMPOS T
                                  WHERE T.CDFILIAL    = P_FILIAL                AND
                                        T.NRLANCTONF  = P_LANCTONF              AND
                                        T.NRSEQITPROD = ITEMPRODUTO.NRSEQITPROD AND
                                        T.CDIMPOSTO   = C_ATUAVRCONT.CDIMPOSTO);
                  ELSE
                     UPDATE ITEMPRODUTO
                     SET VRCONTITEM = ROUND(VRCONTITEM + ((V_VRDIFERENCA / V_VRCONTAB) * VRCONTITEM),2)
                     WHERE EXISTS(SELECT CDFILIAL, NRLANCTONF, NRSEQITPROD
                                  FROM ITEMPROIMPOS T
                                  WHERE T.CDFILIAL    = P_FILIAL                AND
                                        T.NRLANCTONF  = P_LANCTONF              AND
                                        T.NRSEQITPROD = ITEMPRODUTO.NRSEQITPROD AND
                                        T.CDIMPOSTO   = C_ATUAVRCONT.CDIMPOSTO);
                  END IF;
               END IF;
            END IF;
         END IF;
      END LOOP;
   END IF;


   /*PREENCHENDO A TABELA DADOSADIC DE ACORDO COM OS VALORES DO ADICIONAL DE ALÍQUOTA DO FECP*/
   DELETE
     FROM DADOSADIC
    WHERE CDFILIAL = P_FILIAL
      AND NRLANCTONF = P_LANCTONF
      AND UPPER(DSDADOADIC) LIKE 'ADICIONAL DE ALÍQUOTA DO IMPOSTO % DE % (FUNDO ESTADUAL DE COMBATE A POBREZA):%';

   V_STRVRADICALIQFECP := NULL;
   V_STRVRADICFECP := NULL;


   /* GRAVA INFORMAÇÕES DO IPI DEVOLVIDO DO PRODUTO */
   FOR C_IPIDEVOL IN (SELECT I.NRSEQITPROD, II.VRIMPOSTOIT, I.DSINFADICPROD
                        FROM ITEMPRODUTO I, ITEMPROIMPOS II,
                             IMPOSTONFE IP, IMPOSTO IM
                       WHERE I.CDFILIAL      = P_FILIAL
                         AND I.NRLANCTONF    = P_LANCTONF
                         AND I.NRSEQITPROD   = II.NRSEQITPROD
                         AND I.CDFILIAL      = II.CDFILIAL
                         AND I.NRLANCTONF    = II.NRLANCTONF
                         AND IP.CDIMPOSTONFE = '10'
                         AND II.CDIMPOSTO    = IM.CDIMPOSTO
                         AND IM.CDIMPOSTONFE = IP.CDIMPOSTONFE
                         AND NVL(I.VRPERDEVOL, 0) > 0)
   LOOP
      V_DSINFADICPROD := C_IPIDEVOL.DSINFADICPROD;
      V_IPIDEVOLMSG   := 'IPI, no valor de R$ '||CASE SUBSTR(LTRIM(TO_CHAR(ROUND(C_IPIDEVOL.VRIMPOSTOIT, 2),'9999999999999.99')),1, 1) WHEN '.' THEN '0'||LTRIM(TO_CHAR(ROUND(C_IPIDEVOL.VRIMPOSTOIT, 2),'9999999999999.99')) ELSE LTRIM(TO_CHAR(ROUND(C_IPIDEVOL.VRIMPOSTOIT, 2),'9999999999999.99')) END;

      IF (C_IPIDEVOL.DSINFADICPROD IS NULL) THEN         
            V_DSINFADICPROD := V_IPIDEVOLMSG;
      ELSE
        IF (NVL(INSTR(V_DSINFADICPROD, V_IPIDEVOLMSG) = 0, TRUE)) THEN
            V_DSINFADICPROD := C_IPIDEVOL.DSINFADICPROD || ' | ' || V_IPIDEVOLMSG;
        END IF;
      END IF;

      UPDATE ITEMPRODUTO
         SET DSINFADICPROD = V_DSINFADICPROD
       WHERE CDFILIAL = P_FILIAL
         AND NRLANCTONF = P_LANCTONF
         AND NRSEQITPROD = C_IPIDEVOL.NRSEQITPROD;
   END LOOP;


   FOR C_VRADICALIQFECP IN (SELECT CASE P.CDIMPOSTONFE WHEN '00' THEN 'ICMS' WHEN '80' THEN 'ICMS-ST' END AS CDIMPOSTONFE, 
                                   I.VRADICALIQFECP, 
                                   SUM(NVL(I.VRADICFECP, 0)) AS VRADICFECP
                              FROM ITEMPROIMPOS I JOIN IMPOSTO P ON (I.CDIMPOSTO = P.CDIMPOSTO)
                             WHERE I.CDFILIAL = P_FILIAL
                               AND I.NRLANCTONF = P_LANCTONF
                               AND NVL(I.VRADICALIQFECP, 0) > 0
                               AND I.NRITPROIMPOS = '1'
                               AND P.CDIMPOSTONFE IS NOT NULL
                               AND NVL(I.VRADICFECP, 0) > 0
                             GROUP BY P.CDIMPOSTONFE, 
                                   I.VRADICALIQFECP)
   LOOP
      SELECT DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(C_VRADICALIQFECP.VRADICALIQFECP, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(C_VRADICALIQFECP.VRADICALIQFECP, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(C_VRADICALIQFECP.VRADICALIQFECP, 2), '9999999999999.99'))),
             DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(C_VRADICALIQFECP.VRADICFECP, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(C_VRADICALIQFECP.VRADICFECP, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(C_VRADICALIQFECP.VRADICFECP, 2), '9999999999999.99')))
        INTO V_STRVRADICALIQFECP,
             V_STRVRADICFECP
        FROM DUAL;
      INSERT INTO DADOSADIC
         (CDFILIAL, 
          NRLANCTONF, 
          NRDADOADIC, 
          DSDADOADIC)
      VALUES
         (P_FILIAL, 
          P_LANCTONF, 
          V_DADOADIC,
          'Adicional de alíquota do imposto '||C_VRADICALIQFECP.CDIMPOSTONFE||' de '||V_STRVRADICALIQFECP||'% (Fundo Estadual de Combate a Pobreza): R$ '||V_STRVRADICFECP);

      V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
   END LOOP;

   -- GRAVANDO OS DADOS DO VENDEDOR NOS DADOS ADICIONAIS
   DELETE
     FROM DADOSADIC
    WHERE CDFILIAL = P_FILIAL
      AND NRLANCTONF = P_LANCTONF
      AND UPPER(DSDADOADIC) LIKE 'VENDEDOR:%';

   IF (V_IDADICVENDEDOR = 'S') THEN
      BEGIN
         SELECT 'VENDEDOR: ' || V.CDVENDEDOR || ' - ' || V.NMRAZSOCVEN
           INTO V_DADOSVENDEDOR
           FROM ITEMPRODUTO I LEFT JOIN PEDIDO P ON (I.CDFILIALPED = P.CDFILIAL)
                                                AND (I.NRPEDIDO = P.NRPEDIDO)
                                   JOIN VENDEDOR V ON (P.CDVENDEDOR = V.CDVENDEDOR)
          WHERE I.CDFILIAL = P_FILIAL
            AND I.NRLANCTONF = P_LANCTONF
            AND ROWNUM = 1;
      EXCEPTION
         WHEN NO_DATA_FOUND THEN BEGIN
            V_DADOSVENDEDOR := NULL;
         END;
      END;

      IF (V_DADOSVENDEDOR IS NOT NULL) OR (V_DADOSVENDEDOR <> '') THEN
         INSERT INTO DADOSADIC
            (CDFILIAL,
             NRLANCTONF,
             NRDADOADIC,
             DSDADOADIC)
         VALUES
            (P_FILIAL,
             P_LANCTONF,
             V_DADOADIC,
             V_DADOSVENDEDOR);

         V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
      END IF;
   END IF;

   IF NOT(P_LANCESTQ IS NULL) AND (V_IDCTRLESTQ <> w_N) THEN

      /* INSERIDO POR LUCIANA CORREA PARA O SISTEMA DE PDV */
      IF (V_IDSISTEMA <> w_VMN) THEN

         BEGIN
            SELECT NRCTRLMOVEST, CDFILIALENTR, NRLANESTENTR
              INTO V_NRCTRLMOVEST, V_CDFILIALENTR, V_NRLANESTENTR
              FROM CTRLMOVIESTQ
             WHERE CDFILIALSAID = P_FILIAL
               AND NRLANESTSAID = P_LANCESTQ;
         EXCEPTION
            WHEN NO_DATA_FOUND THEN
               V_CDFILIALENTR := NULL;
               V_NRCTRLMOVEST := NULL;
               V_NRLANESTENTR := NULL;
         END;

         IF V_NRCTRLMOVEST IS NOT NULL THEN
            DELETE 
              FROM CTRLMOVIESTQ
             WHERE CDFILIAL = V_CDFILIEMIT
               AND NRCTRLMOVEST = V_NRCTRLMOVEST;

            DELETE 
              FROM ITLANCTOEST
             WHERE CDFILIAL = V_CDFILIALENTR
               AND NRLANCESTQ = V_NRLANESTENTR;

            DELETE 
              FROM LANCTOESTOQ
             WHERE CDFILIAL = V_CDFILIALENTR
               AND NRLANCESTQ = V_NRLANESTENTR;

         END IF;

         SELECT COUNT(*)
         INTO   V_COUNT
         FROM LANCTOESTOQ L, NOTAFISCAL N
         WHERE L.CDFILIAL   = P_FILIAL      AND
               L.NRLANCESTQ = P_LANCESTQ    AND
               L.NRLANCTONF = P_LANCTONF    AND
               L.CDFILIAL   = N.CDFILIAL    AND
               L.NRLANCTONF = N.NRLANCTONF;

         IF V_COUNT > 0 THEN

            DELETE FROM ITLANCTOEST
            WHERE CDFILIAL   = P_FILIAL AND
                  NRLANCESTQ = P_LANCESTQ;

            DELETE FROM LANCTOESTOQ
            WHERE CDFILIAL   = P_FILIAL AND
                  NRLANCESTQ = P_LANCESTQ;
         END IF;
      ELSE
         UPDATE LANCTOESTOQ
         SET DTLANCESTQ = P_INIVALID
         WHERE CDFILIAL   = P_FILIAL AND
               NRLANCESTQ = P_LANCESTQ;

         DELETE FROM ITLANCTOEST
         WHERE CDFILIAL   = P_FILIAL AND
               NRLANCESTQ = P_LANCESTQ;
      END IF;

      Begin
         SELECT T.NMTIPOOPER, F.NMFILIAL
         INTO   V_NMTIPOOPER, V_NMFILIRECE
         FROM NOTAFISCAL N, TIPOOPERAC T, FILIAL F
         WHERE
            (N.CDFILIAL     = P_FILIAL)       AND
            (N.NRLANCTONF   = P_LANCTONF)     AND
            (N.CDTIPOOPER   = T.CDTIPOOPER)   AND
            (N.IDENTRSAIDOP = T.IDENTRSAIDOP) AND
            (N.CDFILIRECE   = F.CDFILIAL(+));
      Exception
         When No_Data_Found Then
            V_NMTIPOOPER := Null; V_NMFILIRECE := Null;
      End;

      IF V_IDORIGDESTNF = w_L THEN
         V_DESCLANC := 'NF: '||P_LANCTONF||' - '||SUBSTR(V_NMTIPOOPER,1,25)||' - '||SUBSTR(V_NMFILIRECE,1,15);
      ELSE
         V_DESCLANC := 'LANC. ORIGEM: '||V_NRINSJURNF||' Nº'||P_LANCTONF||' SERIE '||V_SERIE;
      END IF;

      SELECT COUNT(*)
      INTO   V_COUNT
      FROM LANCTOESTOQ L, NOTAFISCAL N
      WHERE L.CDFILIAL   = P_FILIAL      AND
            L.NRLANCESTQ = P_LANCESTQ    AND
            L.NRLANCTONF = P_LANCTONF    AND
            L.CDFILIAL   = N.CDFILIAL    AND
            L.NRLANCTONF = N.NRLANCTONF;

      IF V_COUNT = 0 THEN
         INSERT INTO LANCTOESTOQ
            (CDFILIAL,NRLANCESTQ,NRLANCTONF,DSLANCESTQ,IDTPLANCTO,DTLANCESTQ,CDOPERADOR, CDFILIMOVI)
         VALUES
            (P_FILIAL, P_LANCESTQ, P_LANCTONF, V_DESCLANC, w_S, P_INIVALID,P_CDOPERADOR, V_CDFILIEMIT);
      END IF;


      IF (V_IDOPERDEVONF = w_S) THEN
         V_TIPOMOVI := w_5;
      ELSE
         V_TIPOMOVI := w_4;
      END IF;

      IF (V_IDSISTEMA = w_EXP) THEN
         Begin
            SELECT NVL(MAX(IDRETPROEXP),1)
              INTO V_IDRETPROEXP
              FROM PAREXPEDICAO
             WHERE CDFILIAL = V_CDFILIEMIT;
         Exception
            When No_Data_Found Then
               V_IDRETPROEXP := 1;
         End;

      END IF;

      IF (V_IDSISTEMA = w_VND) THEN
         SELECT CDFILIMOVI
         INTO   V_CDFILIMOVI
         FROM LANCTOESTOQ
         WHERE CDFILIAL   = P_FILIAL AND
               NRLANCTONF = P_LANCTONF;
         Begin
            SELECT NVL(IDATUEST,1)
            INTO   V_IDATUEST
            FROM PARAVEND
            WHERE CDFILIAL = V_CDFILIMOVI;
         Exception
            When No_Data_Found Then
               V_IDATUEST := 1;
         End;
      END IF;

      IF ((V_IDSISTEMA = w_EXP) AND (V_IDRETPROEXP = w_2)) OR ((V_IDSISTEMA = w_VND) AND (V_IDATUEST = w_1)) THEN

         FOR C_ITLANCTOEST IN (SELECT NRSEQITPROD,IP.CDPRODUTO,VRUNITITEM,VRTOTAITEM, NVL(CDFILIMOVI, CDFILIEMIT) AS CDFILIMOVI,
                                      QTITEMPROD,CDPRODESTO,VRBRUTITEM,VRDESCITEM,VRCONTITEM,
                                      NVL(IP.CDALMOXARIFE,' ') AS CDALMOXARIFE,
                                      NVL(IP.CDLOCALESTOQ,' ') AS CDLOCALESTOQ,
                                      NVL(NRLOTEESTQ,' ')      AS NRLOTEESTQ,
                                      NVL(NRSUBLOTE,' ')       AS NRSUBLOTE, IDCNTRESTOQ,
                                      IP.NRPEDIDO, IP.NRITEMPED, CDARVPROD, NMPRODUTO,
                                      NVL(IP.IDORIGEMPROD, 'N') AS IDORIGEMPROD,
                                      IP.VRFATCONTRIBXML, IP.CDFISOPEITEM
                               FROM ITEMPRODUTO IP, PRODUTO P, PRODFILI PF, NOTAFISCAL N
                               WHERE IP.CDFILIAL    = P_FILIAL     AND
                                     IP.NRLANCTONF  = N.NRLANCTONF AND
                                     IP.CDFILIAL    = N.CDFILIAL   AND
                                     IP.NRLANCTONF  = P_LANCTONF   AND
                                     P.CDPRODUTO    = IP.CDPRODUTO AND
                                     PF.CDFILIAL    = V_CDFILIEMIT AND
                                     PF.CDPRODUTO   = P.CDPRODESTO AND
                                     NVL(IP.IDATUESTPROD, 'S') = 'S') LOOP
            --Alteração para verificar se o CFOP atualiza estoque

            V_ATUPORCFOP := w_S;
            V_CFOPTPOPER := 0;
            V_CFOPATUEST := 0;

            SELECT COUNT(CDFISCOPER)
              INTO V_CFOPTPOPER
              FROM TPOPERCFOP
             WHERE IDENTRSAIDOP = w_S
               AND CDTIPOOPER   = P_TIPOOPER
               AND CDFISCOPER   = C_ITLANCTOEST.CDFISOPEITEM;

            IF(V_CFOPTPOPER > 0) THEN

               SELECT COUNT(CDFISCOPER)
                 INTO V_CFOPATUEST
                 FROM(SELECT CDFISCOPER
                        FROM TPOPERCFOP T
                       WHERE T.IDENTRSAIDOP   = w_S
                         AND T.CDTIPOOPER     = P_TIPOOPER
                         AND T.IDATUESTTPCFOP = w_S
                         AND T.CDFISCOPER     = C_ITLANCTOEST.CDFISOPEITEM
                         AND C_ITLANCTOEST.CDPRODUTO NOT IN (SELECT CDPRODUTO
                                                               FROM TPOPERCFOPEXCP TE
                                                              WHERE TE.IDENTRSAIDOP = w_S
                                                                AND TE.CDTIPOOPER   = P_TIPOOPER
                                                                AND TE.CDFISCOPER   = C_ITLANCTOEST.CDFISOPEITEM
                                                                AND TE.CDPRODUTO    = C_ITLANCTOEST.CDPRODUTO)

                       UNION ALL
                      SELECT CDFISCOPER
                        FROM TPOPERCFOP T
                       WHERE T.IDENTRSAIDOP   = w_S
                         AND T.CDTIPOOPER     = P_TIPOOPER
                         AND T.IDATUESTTPCFOP = w_N
                         AND T.CDFISCOPER     = C_ITLANCTOEST.CDFISOPEITEM
                         AND C_ITLANCTOEST.CDPRODUTO IN (SELECT CDPRODUTO
                                                           FROM TPOPERCFOPEXCP TE
                                                          WHERE TE.IDENTRSAIDOP = w_S
                                                            AND TE.CDTIPOOPER   = P_TIPOOPER
                                                            AND TE.CDFISCOPER   = C_ITLANCTOEST.CDFISOPEITEM
                                                            AND TE.CDPRODUTO    = C_ITLANCTOEST.CDPRODUTO));

               IF NOT (V_CFOPATUEST > 0) THEN
                  V_ATUPORCFOP := w_N;
               END IF;
            END IF;
            --Alteração para verificar se o CFOP atualiza estoque
            IF (V_ATUPORCFOP = w_S) THEN
               IF (C_ITLANCTOEST.IDCNTRESTOQ = w_S) THEN
                  UPDATE ITEMPRODUTO
                  SET CDPRODMOVI = C_ITLANCTOEST.CDPRODESTO
                  WHERE (CDFILIAL    = P_FILIAL)    AND
                        (NRLANCTONF  = P_LANCTONF ) AND
                        (NRSEQITPROD = C_ITLANCTOEST.NRSEQITPROD);
               END IF;

               IF (V_IDUTILALMOX <> w_S AND  V_IDUTILLCESTQ <> w_S AND V_IDUTILLOTE <> w_S) THEN
                  UPDATE ITEMPRODUTO
                  SET CDALMOXARIFE  = ' ',
                      CDLOCALESTOQ  = ' ',
                      NRLOTEESTQ    = ' ',
                      NRSUBLOTE     = ' '
                  WHERE (CDFILIAL     = P_FILIAL)    AND
                        (NRLANCTONF   = P_LANCTONF ) AND
                        (NRSEQITPROD  = C_ITLANCTOEST.NRSEQITPROD)  AND
                        ((CDALMOXARIFE IS NULL)       OR
                         (CDLOCALESTOQ IS NULL)       OR
                         (NRLOTEESTQ   IS NULL)       OR
                         (NRSUBLOTE    IS NULL));
               END IF;


               IF (V_IDSISTEMA = w_EXP) THEN
                  BEGIN
                     SELECT IDTPCOMPPROD
                     INTO  V_IDTPCOMPPROD
                     FROM
                        PARAMPEDIDO
                     WHERE
                        CDFILIAL  = P_FILIAL;
                  EXCEPTION
                     WHEN NO_DATA_FOUND THEN
                        V_IDTPCOMPPROD := W_F;
                  END;
               ELSE
                  V_IDTPCOMPPROD := W_F;
               END IF;

               SELECT COUNT(*)
               INTO   V_EXISTE_ROT
               FROM   ROTFABLOCAL
               WHERE  CDFILIAL  = C_ITLANCTOEST.CDFILIMOVI AND
                      CDPRODUTO = C_ITLANCTOEST.CDPRODUTO;

               IF (V_EXISTE_ROT > 0)AND(V_IDTPCOMPPROD = W_F) THEN
                  V_EXISTE_ROT := V_EXISTE_ROT;

                  INSERE_SUBPRODMAN(P_FILIAL,P_LANCESTQ,P_TIPOOPER,C_ITLANCTOEST.CDPRODUTO,
                                    C_ITLANCTOEST.QTITEMPROD,
                                    C_ITLANCTOEST.VRTOTAITEM,C_ITLANCTOEST.VRDESCITEM,
                                    C_ITLANCTOEST.VRBRUTITEM,C_ITLANCTOEST.VRCONTITEM,
                                    V_VRTOTALANCTO,V_QTDELANCTO,V_TIPOMOVI,P_INIVALID,
                                    C_ITLANCTOEST.CDPRODESTO,
                                    C_ITLANCTOEST.NRPEDIDO, C_ITLANCTOEST.NRITEMPED, V_IDTPCOMPPROD,
                                    C_ITLANCTOEST.CDALMOXARIFE,
                                    C_ITLANCTOEST.CDLOCALESTOQ, V_IDSISTEMA, P_LANCTONF);
               ELSE
                  SELECT COUNT(*)
                  INTO   V_EXISTE_ROT
                  FROM   ROTFABRICA
                  WHERE  CDPRODUTO = C_ITLANCTOEST.CDPRODUTO;

                  IF (V_EXISTE_ROT > 0)AND(V_IDTPCOMPPROD = W_F)  THEN
                     V_EXISTE_ROT := V_EXISTE_ROT;

                     INSERE_SUBPRODMAN(P_FILIAL,P_LANCESTQ,P_TIPOOPER,C_ITLANCTOEST.CDPRODUTO,
                                       C_ITLANCTOEST.QTITEMPROD,
                                       C_ITLANCTOEST.VRTOTAITEM,C_ITLANCTOEST.VRDESCITEM,
                                       C_ITLANCTOEST.VRBRUTITEM,C_ITLANCTOEST.VRCONTITEM,
                                       V_VRTOTALANCTO,V_QTDELANCTO,V_TIPOMOVI,P_INIVALID,
                                       C_ITLANCTOEST.CDPRODESTO,
                                       C_ITLANCTOEST.NRPEDIDO, C_ITLANCTOEST.NRITEMPED, V_IDTPCOMPPROD,
                                       C_ITLANCTOEST.CDALMOXARIFE, C_ITLANCTOEST.CDLOCALESTOQ, V_IDSISTEMA, P_LANCTONF);
                  ELSE
                     SELECT COUNT(*)
                     INTO V_EXISTE_ROT
                     FROM COMPITEMPED
                     WHERE
                        CDFILIAL = C_ITLANCTOEST.CDFILIMOVI  AND
                        NRPEDIDO = C_ITLANCTOEST.NRPEDIDO    AND
                        NRITEMPED  = C_ITLANCTOEST.NRITEMPED AND
                        CDPRODUTO = C_ITLANCTOEST.CDPRODUTO;

                     IF (V_EXISTE_ROT > 0)AND(V_IDTPCOMPPROD = W_V)  THEN

                        INSERE_SUBPRODMAN(P_FILIAL,P_LANCESTQ,P_TIPOOPER,C_ITLANCTOEST.CDPRODUTO,
                                          C_ITLANCTOEST.QTITEMPROD,
                                          C_ITLANCTOEST.VRTOTAITEM,C_ITLANCTOEST.VRDESCITEM,
                                          C_ITLANCTOEST.VRBRUTITEM,C_ITLANCTOEST.VRCONTITEM,
                                          V_VRTOTALANCTO,V_QTDELANCTO,V_TIPOMOVI,P_INIVALID,
                                          C_ITLANCTOEST.CDPRODESTO,
                                          C_ITLANCTOEST.NRPEDIDO, C_ITLANCTOEST.NRITEMPED, V_IDTPCOMPPROD,
                                          C_ITLANCTOEST.CDALMOXARIFE, C_ITLANCTOEST.CDLOCALESTOQ, V_IDSISTEMA, P_LANCTONF);
                     ELSE

                        IF (C_ITLANCTOEST.IDCNTRESTOQ = w_S) THEN
                           Begin
                              SELECT NVL(C_ITLANCTOEST.VRFATCONTRIBXML, VRFATOCONV) AS VRFATOCONV
                              INTO   V_FATOCONV
                              FROM   PRODUTO
                              WHERE  CDPRODUTO = C_ITLANCTOEST.CDPRODUTO;
                           Exception
                              When No_Data_Found Then
                                 V_FATOCONV := Null;
                           End;

                           IF (V_FATOCONV IS NULL) OR (V_FATOCONV = 0) THEN
                              V_FATOCONV := 1;
                           END IF;

                           V_QTDELANCTO   := C_ITLANCTOEST.QTITEMPROD;
                           V_VRTOTALANCTO := C_ITLANCTOEST.VRTOTAITEM - C_ITLANCTOEST.VRDESCITEM;

                           IF NOT(V_QTDELANCTO = 0) THEN
                              V_VRUNITLANCTO := V_VRTOTALANCTO/V_QTDELANCTO;
                           ELSE
                              V_VRUNITLANCTO := V_VRTOTALANCTO;
                           END IF;

                           IF (V_IDOPERDEVONF = w_S) THEN
                              IF (V_QTDELANCTO <> 0) THEN
                                 V_TOTABRUT   := (C_ITLANCTOEST.VRBRUTITEM/V_QTDELANCTO)/V_FATOCONV;
                                 V_TOTACONTAB := (C_ITLANCTOEST.VRCONTITEM/V_QTDELANCTO)/V_FATOCONV;
                              ELSE
                                 V_TOTABRUT   := C_ITLANCTOEST.VRBRUTITEM/V_FATOCONV;
                                 V_TOTACONTAB := C_ITLANCTOEST.VRCONTITEM/V_FATOCONV;
                              END IF;
                           ELSE
                              V_TOTABRUT   := 0;
                              V_TOTACONTAB := 0;
                           END IF;

                           IF (V_IDOPERDEVONF <> w_S) OR
                              ((V_IDOPERDEVONF = w_S) AND (V_QTDELANCTO <> 0)) THEN

                              SELECT NVL(MAX(NRSEQUITEM),0) + 1
                              INTO   V_NRSEQITPROD
                              FROM   ITLANCTOEST
                              WHERE  CDFILIAL   = P_FILIAL AND
                                     NRLANCESTQ = P_LANCESTQ;

                              INSERT INTO ITLANCTOEST
                                 (CDFILIAL,NRLANCESTQ,NRSEQUITEM,CDPRODUTO,QTTOTLANCTO,VRUNILANCTO,VRTOTLANCTO,
                                  IDTIPOMOVI,DTLANCMOVI,IDORDEMCLC,CDPRODMOVI,QTLANCTOEST,VRLANCTOBRUT, VRLANCTOEST,
                                  CDFILIMOVI,CDALMOXARIFE,CDLOCALESTOQ,NRLOTEESTQ,NRSUBLOTE,NRLANCORIGRP, IDORIGEMPROD)
                              VALUES
                                 (P_FILIAL,P_LANCESTQ,LPAD(V_NRSEQITPROD,4,w_0),C_ITLANCTOEST.CDPRODUTO,
                                  V_QTDELANCTO,V_VRUNITLANCTO,V_VRTOTALANCTO,
                                  V_TIPOMOVI,P_INIVALID,w_8,C_ITLANCTOEST.CDPRODESTO,
                                  (V_QTDELANCTO * V_FATOCONV),V_TOTABRUT, V_TOTACONTAB,
                                  V_CDFILIEMIT,C_ITLANCTOEST.CDALMOXARIFE,C_ITLANCTOEST.CDLOCALESTOQ,C_ITLANCTOEST.NRLOTEESTQ,
                                  C_ITLANCTOEST.NRSUBLOTE,V_IDDOCESTOQ, C_ITLANCTOEST.IDORIGEMPROD);
                           END IF;
                        END IF;

                     END IF;

                  END IF;
               END IF;     /* FIM DO IF DO SISTEMA */
            END IF;
         END LOOP;
      ELSE  /* DEMAIS SISTEMAS QUE NÃO SEJAM EXPEDICAO NEM GESTÃO DE VENDAS */
         BEGIN
            SELECT MAX(CDFILIAL)
              INTO V_CDFILIORIG
              FROM ITEMNOTAFISC
             WHERE CDFILIALIT   = P_FILIAL
               AND NRLANCTONFIT = P_LANCTONF;
         EXCEPTION
            WHEN NO_DATA_FOUND THEN
               V_CDFILIORIG := NULL;
         END;
         FOR C_ITLANCTOEST IN (SELECT NRSEQITPROD,
                                      IP.CDPRODUTO,
                                      VRUNITITEM,
                                      VRTOTAITEM,
                                      QTITEMPROD,
                                      CDPRODESTO,
                                      VRBRUTITEM,
                                      VRDESCITEM,
                                      VRCONTITEM,
                                      NVL(IP.CDALMOXARIFE,' ') AS CDALMOXARIFE,
                                      NVL(IP.CDLOCALESTOQ,' ') AS CDLOCALESTOQ,
                                      NVL(NRLOTEESTQ,' ')      AS NRLOTEESTQ,
                                      NVL(NRSUBLOTE,' ')       AS NRSUBLOTE,
                                      NVL(VRCONTITEMORIG, 0) VRCONTITEMORIG,
                                      NVL(VRBRUTITEMORIG, 0) VRBRUTITEMORIG,
                                      CDARVPROD,
                                      NMPRODUTO,
                                      NVL(IP.IDORIGEMPROD, 'N') AS IDORIGEMPROD,
                                      IP.VRFATCONTRIBXML, IP.CDFISOPEITEM
                               FROM ITEMPRODUTO IP, PRODUTO P, PRODFILI PF, NOTAFISCAL N
                               WHERE IP.CDFILIAL    = P_FILIAL     AND
                                     IP.NRLANCTONF  = P_LANCTONF   AND
                                     P.CDPRODUTO    = IP.CDPRODUTO AND
                                     IP.CDFILIAL    = N.CDFILIAL   AND
                                     IP.NRLANCTONF  = N.NRLANCTONF AND
                                     PF.CDFILIAL    = V_CDFILIEMIT AND
                                     PF.CDPRODUTO   = P.CDPRODESTO AND
                                     NVL(IDCNTRESTOQ, w_S) <> w_N  AND
                                     NVL(IP.IDATUESTPROD, 'S') = 'S') LOOP


            --Alteração para verificar se o CFOP atualiza estoque

            V_ATUPORCFOP := w_S;
            V_CFOPTPOPER := 0;
            V_CFOPATUEST := 0;

            SELECT COUNT(CDFISCOPER)
              INTO V_CFOPTPOPER
              FROM TPOPERCFOP
             WHERE IDENTRSAIDOP = w_S
               AND CDTIPOOPER   = P_TIPOOPER
               AND CDFISCOPER   = C_ITLANCTOEST.CDFISOPEITEM;

            IF(V_CFOPTPOPER > 0) THEN

               SELECT COUNT(CDFISCOPER)
                 INTO V_CFOPATUEST
                 FROM(SELECT CDFISCOPER
                        FROM TPOPERCFOP T
                       WHERE T.IDENTRSAIDOP   = w_S
                         AND T.CDTIPOOPER     = P_TIPOOPER
                         AND T.IDATUESTTPCFOP = w_S
                         AND T.CDFISCOPER     = C_ITLANCTOEST.CDFISOPEITEM
                         AND C_ITLANCTOEST.CDPRODUTO NOT IN (SELECT CDPRODUTO
                                                               FROM TPOPERCFOPEXCP TE
                                                              WHERE TE.IDENTRSAIDOP = w_S
                                                                AND TE.CDTIPOOPER   = P_TIPOOPER
                                                                AND TE.CDFISCOPER   = C_ITLANCTOEST.CDFISOPEITEM
                                                                AND TE.CDPRODUTO    = C_ITLANCTOEST.CDPRODUTO)

                       UNION ALL
                      SELECT CDFISCOPER
                        FROM TPOPERCFOP T
                       WHERE T.IDENTRSAIDOP   = w_S
                         AND T.CDTIPOOPER     = P_TIPOOPER
                         AND T.IDATUESTTPCFOP = w_N
                         AND T.CDFISCOPER     = C_ITLANCTOEST.CDFISOPEITEM
                         AND C_ITLANCTOEST.CDPRODUTO IN (SELECT CDPRODUTO
                                                           FROM TPOPERCFOPEXCP TE
                                                          WHERE TE.IDENTRSAIDOP = w_S
                                                            AND TE.CDTIPOOPER   = P_TIPOOPER
                                                            AND TE.CDFISCOPER   = C_ITLANCTOEST.CDFISOPEITEM
                                                            AND TE.CDPRODUTO    = C_ITLANCTOEST.CDPRODUTO));

               IF NOT (V_CFOPATUEST > 0) THEN
                  V_ATUPORCFOP := w_N;
               END IF;
            END IF;
            --Alteração para verificar se o CFOP atualiza estoque
            IF (V_ATUPORCFOP = w_S) THEN
               UPDATE ITEMPRODUTO
               SET CDPRODMOVI = C_ITLANCTOEST.CDPRODESTO
               WHERE (CDFILIAL    = P_FILIAL)    AND
                     (NRLANCTONF  = P_LANCTONF ) AND
                     (NRSEQITPROD = C_ITLANCTOEST.NRSEQITPROD);

               BEGIN
                  SELECT NVL(IDATUESTTPOP, 'S') AS IDATUESTTPOP, NVL(IDREMESSAINDU, 'N') AS IDREMESSAINDU
                    INTO V_IDATUESTTPOP, V_IDREMESSAINDU
                    FROM TIPOOPERAC
                   WHERE IDENTRSAIDOP = w_S
                     AND CDTIPOOPER = P_TIPOOPER;
               EXCEPTION
                  WHEN NO_DATA_FOUND THEN
                     V_IDATUESTTPOP := 'S';
                     V_IDREMESSAINDU := 'N';
               END;

               IF (V_IDUTILALMOX <> w_S AND V_IDUTILLCESTQ <> w_S AND V_IDUTILLOTE <> w_S) THEN
                  UPDATE ITEMPRODUTO
                  SET CDALMOXARIFE  = ' ',
                      CDLOCALESTOQ  = ' ',
                      NRLOTEESTQ    = ' ',
                      NRSUBLOTE     = ' '
                  WHERE (CDFILIAL     = P_FILIAL)    AND
                        (NRLANCTONF   = P_LANCTONF ) AND
                        (NRSEQITPROD  = C_ITLANCTOEST.NRSEQITPROD)  AND
                        ((CDALMOXARIFE IS NULL)       OR
                         (CDLOCALESTOQ IS NULL)       OR
                         (NRLOTEESTQ   IS NULL)       OR
                         (NRSUBLOTE    IS NULL));
               END IF;

               BEGIN
                  SELECT NVL(IP.VRFATCONTRIBXML,  VRFATOCONV) AS VRFATOCONV
                  INTO   V_FATOCONV
                  FROM PRODUTO P, ITEMPRODUTO IP
                  WHERE P.CDPRODUTO    = IP.CDPRODUTO AND
                        IP.CDFILIAL    = P_FILIAL     AND
                        IP.NRLANCTONF  = P_LANCTONF   AND
                        IP.NRSEQITPROD = C_ITLANCTOEST.NRSEQITPROD;
               EXCEPTION
                  WHEN NO_DATA_FOUND THEN
                     V_FATOCONV := NULL;
               END;

               IF (V_FATOCONV IS NULL) OR (V_FATOCONV = 0) THEN
                  V_FATOCONV := 1;
               END IF;

               V_QTDELANCTO   := C_ITLANCTOEST.QTITEMPROD;
               V_VRTOTALANCTO := C_ITLANCTOEST.VRTOTAITEM - C_ITLANCTOEST.VRDESCITEM;

               IF NOT(V_QTDELANCTO = 0) THEN
                  V_VRUNITLANCTO := V_VRTOTALANCTO/V_QTDELANCTO;
               ELSE
                  V_VRUNITLANCTO := V_VRTOTALANCTO;
               END IF;

               IF (V_IDOPERDEVONF = w_S) OR (V_IDREMESSAINDU = w_S) THEN
                  IF (V_QTDELANCTO <> 0) THEN
                     V_TOTABRUT   := (C_ITLANCTOEST.VRBRUTITEM/V_QTDELANCTO)/V_FATOCONV;
                     V_TOTACONTAB := (C_ITLANCTOEST.VRCONTITEM/V_QTDELANCTO)/V_FATOCONV;
                     IF C_ITLANCTOEST.VRBRUTITEMORIG <> 0 THEN
                        V_TOTABRUT := (C_ITLANCTOEST.VRBRUTITEMORIG/V_QTDELANCTO)/V_FATOCONV;
                     END IF;
                     IF C_ITLANCTOEST.VRCONTITEMORIG <> 0 THEN
                        V_TOTACONTAB := (C_ITLANCTOEST.VRCONTITEMORIG/V_QTDELANCTO)/V_FATOCONV;
                     END IF;
                  ELSE
                     V_TOTABRUT   := C_ITLANCTOEST.VRBRUTITEM/V_FATOCONV;
                     V_TOTACONTAB := C_ITLANCTOEST.VRCONTITEM/V_FATOCONV;
                  END IF;
               ELSE
                  V_TOTABRUT   := 0;
                  V_TOTACONTAB := 0;
               END IF;

               IF (V_IDOPERDEVONF <> w_S) OR ((V_IDOPERDEVONF = w_S) AND (V_QTDELANCTO <> 0)) THEN

                  INSERT INTO ITLANCTOEST
                     (CDFILIAL, NRLANCESTQ, NRSEQUITEM,               CDPRODUTO,
                      QTTOTLANCTO, VRUNILANCTO,    VRTOTLANCTO,
                      IDTIPOMOVI, DTLANCMOVI, IDORDEMCLC,CDPRODMOVI,
                      QTLANCTOEST,               VRLANCTOBRUT, VRLANCTOEST,
                      CDFILIMOVI,  CDALMOXARIFE,               CDLOCALESTOQ,               NRLOTEESTQ,
                      NRSUBLOTE,              NRLANCORIGRP, IDORIGEMPROD)
                  VALUES
                     (P_FILIAL, P_LANCESTQ, C_ITLANCTOEST.NRSEQITPROD,C_ITLANCTOEST.CDPRODUTO,
                      V_QTDELANCTO,V_VRUNITLANCTO, V_VRTOTALANCTO,
                      V_TIPOMOVI, P_INIVALID, w_8,       C_ITLANCTOEST.CDPRODESTO,
                     (V_QTDELANCTO * V_FATOCONV),V_TOTABRUT,   V_TOTACONTAB,
                      V_CDFILIEMIT,C_ITLANCTOEST.CDALMOXARIFE, C_ITLANCTOEST.CDLOCALESTOQ, C_ITLANCTOEST.NRLOTEESTQ,
                      C_ITLANCTOEST.NRSUBLOTE,V_IDDOCESTOQ, C_ITLANCTOEST.IDORIGEMPROD);
               END IF;

               /* Se NF Remessa para Industrialização e Operação Atualiza Estoque */
               IF (V_IDREMESSAINDU = 'S') AND (V_IDATUESTTPOP = 'S') THEN

                  IF V_IDORIGDESTNF = 'C' THEN
                     BEGIN
                        SELECT NVL(CDALMOXINFOCLI, ' ') AS CDALMOXINFOCLI, NVL(CDLOCALINFOCLI, ' ') AS CDLOCALINFOCLI
                          INTO V_CDALMOXINFO, V_CDLOCALINFO
                          FROM AGENTETERCECLI
                         WHERE CDFILIAL = V_CDFILIEMIT
                           AND CDCLIENTE = P_CLIENTE;
                     EXCEPTION
                        WHEN NO_DATA_FOUND THEN
                           V_CDALMOXINFO := ' ';
                           V_CDLOCALINFO := ' ';
                     END;
                  END IF;
                  IF V_IDORIGDESTNF = 'F' THEN
                     BEGIN
                        SELECT NVL(CDALMOXINFOFOR, ' ') AS CDALMOXINFOFOR, NVL(CDLOCALINFOFOR, ' ') AS CDLOCALINFOFOR
                          INTO V_CDALMOXINFO, V_CDLOCALINFO
                          FROM AGENTETERCEFOR
                         WHERE CDFILIAL = V_CDFILIEMIT
                           AND CDFORNECED = P_CLIENTE;
                     EXCEPTION
                        WHEN NO_DATA_FOUND THEN
                           V_CDALMOXINFO := ' ';
                           V_CDLOCALINFO := ' ';
                     END;

                     BEGIN
                        SELECT CDFILIAL
                          INTO V_CDFILIAGENT
                          FROM FILIAL
                         WHERE CDFORNAGETERC = P_CLIENTE;
                     EXCEPTION
                        WHEN NO_DATA_FOUND THEN
                           V_CDFILIAGENT := NULL;
                     END;

                     IF NOT V_CDFILIAGENT IS NULL THEN
                        BEGIN
                           SELECT NVL(NVL(P.CDALMOXARIFE, F.CDALMOXARIFE), ' ') AS CDALMOXARIFE, NVL(NVL(P.CDLOCALESTOQ, F.CDLOCALESTOQ), ' ') AS CDLOCALESTOQ,
                                  NVL(F.IDUTILLOTE, 'N') AS IDUTILLOTE
                             INTO V_CDALMOXARIFEAG, V_CDLOCALESTOQAG, V_IDUTILLOTEAG
                             FROM PARAMFILIAL F, PRODFILI P
                            WHERE F.CDFILIAL  = V_CDFILIAGENT
                              AND P.CDFILIAL  = V_CDFILIAGENT
                              AND P.CDPRODUTO = C_ITLANCTOEST.CDPRODESTO;
                        EXCEPTION
                           WHEN NO_DATA_FOUND THEN
                              V_CDALMOXARIFEAG := ' ';
                              V_CDLOCALESTOQAG := ' ';
                              V_IDUTILLOTEAG   := 'N';
                        END;

                        BEGIN
                           SELECT CDEMPRESA, CDINSCESTA, CDINSCMUNI
                             INTO V_CDEMPRESAAG, V_CDINSCESTAAG, V_CDINSCMUNIAG
                             FROM FILIAL
                            WHERE CDFILIAL  = V_CDFILIAGENT;
                        EXCEPTION
                           WHEN NO_DATA_FOUND THEN
                              V_CDEMPRESAAG  := NULL;
                              V_CDINSCESTAAG := NULL;
                              V_CDINSCMUNIAG := NULL;
                        END;

                        IF V_IDUTILLOTEAG = 'S' THEN
                           IF (V_NRLOTEESTQAG IS NULL) OR (V_NRLOTEESTQAG = ' ') THEN
                              PRXLOTEPRODEST(V_CDFILIAGENT, P_INIVALID, C_ITLANCTOEST.CDPRODESTO, V_NRLOTEESTQAG);
                              V_NRSUBLOTEAG := ' ';
                           END IF;
                        ELSE
                           V_NRLOTEESTQAG := ' ';
                           V_NRSUBLOTEAG  := ' ';
                        END IF;
                     END IF;
                  END IF;

                  IF (V_CDALMOXINFO IS NOT NULL) AND (V_CDALMOXINFO <> ' ') AND (V_CDFILIAGENT IS NULL) THEN

                     IF V_BOLANESTENTR THEN
                        --GERANDO O REGISTRO NA TABELA LANCTOESTOQ PARA A ENTRADA NO ALMOXAXARIFADO
                        IF (V_NRLANESTENTR IS NULL) OR (V_NRLANESTENTR = '') THEN
                           NOVO_CODIGO_NT('LANCTOEST'||P_FILIAL, V_NRLANESTENTR);
                           V_NRLANESTENTR := SUBSTR(V_NRLANESTENTR, 11, 10);
                        END IF;

                        INSERT INTO LANCTOESTOQ
                           (CDFILIAL,
                            NRLANCESTQ,
                            IDTPLANCTO,
                            DTLANCESTQ,
                            DSLANCESTQ,
                            CDFILIMOVI,
                            CDOPERADOR)
                        VALUES
                           (P_FILIAL,
                            V_NRLANESTENTR,
                            W_2,
                            P_INIVALID,
                            'Transferência de Estoque ' || V_NRLANESTENTR,
                            V_CDFILIEMIT,
                            P_CDOPERADOR);

                        --GERANDO O REGISTRO NA TABELA CTRLMOVIESTQ
                        IF (V_NRCTRLMOVEST IS NULL) OR (V_NRCTRLMOVEST = '') THEN
                           NOVO_CODIGO_NT('NRTRANSESTQ'||V_CDFILIEMIT, V_NRCTRLMOVEST);
                           V_NRCTRLMOVEST := SUBSTR(V_NRCTRLMOVEST, 11, 10);
                        END IF;

                        INSERT INTO CTRLMOVIESTQ
                           (CDFILIAL,
                            NRCTRLMOVEST,
                            CDFILIALENTR,
                            NRLANESTENTR,
                            CDFILIALSAID,
                            NRLANESTSAID,
                            CDALMOXENTR,
                            CDALMOXSAID,
                            CDLCESTENTR,
                            CDLCESTSAID,
                            DTMOVIESTQ,
                            NRREQUESTO)
                        VALUES
                           (V_CDFILIEMIT,
                            V_NRCTRLMOVEST,
                            P_FILIAL,
                            V_NRLANESTENTR,
                            P_FILIAL,
                            P_LANCESTQ,
                            V_CDALMOXINFO,
                            C_ITLANCTOEST.CDALMOXARIFE,
                            V_CDLOCALINFO,
                            C_ITLANCTOEST.CDLOCALESTOQ,
                            P_INIVALID,
                            '');

                        V_BOLANESTENTR := FALSE;
                     END IF;

                     --GERANDO O REGISTRO NA TABELA ITLANCTOEST
                     INSERT INTO ITLANCTOEST
                        (CDFILIAL,
                         NRLANCESTQ,
                         NRSEQUITEM,
                         CDPRODUTO,
                         DSLANCESTIT,
                         CDALMOXARIFE,
                         CDLOCALESTOQ,
                         NRLOTEESTQ,
                         NRSUBLOTE,
                         CDFILIMOVI,
                         CDPRODMOVI,
                         IDORDEMCLC,
                         DTLANCMOVI,
                         IDEVOLESTOQ,
                         QTTOTLANCTO,
                         IDTIPOMOVI,
                         QTLANCTOEST,
                         VRUNILANCTO,
                         VRTOTLANCTO,
                         VRLANCTOEST,
                         VRLANCTOBRUT,
                         IDORIGEMPROD)
                     VALUES
                        (P_FILIAL,
                        V_NRLANESTENTR,
                        C_ITLANCTOEST.NRSEQITPROD,
                        C_ITLANCTOEST.CDPRODUTO,
                        '',
                        V_CDALMOXINFO,
                        V_CDLOCALINFO,
                        C_ITLANCTOEST.NRLOTEESTQ,
                        C_ITLANCTOEST.NRSUBLOTE,
                        V_CDFILIEMIT,
                        C_ITLANCTOEST.CDPRODESTO,
                        W_2,
                        P_INIVALID,
                        W_S,
                        V_QTDELANCTO,
                        W_2,
                        V_QTDELANCTO * V_FATOCONV,
                        V_VRUNITLANCTO,
                        V_VRTOTALANCTO,
                        V_TOTACONTAB,
                        V_TOTABRUT,
                        C_ITLANCTOEST.IDORIGEMPROD);
                  ELSE
                     /* Se o fornecedor da nota fiscal for agente de terceirização */
                     IF NOT V_CDFILIAGENT IS NULL THEN
                        IF V_CDFILIORIG IS NULL THEN
                           IF V_BOLANESTENTRAG THEN
                              /* Gerando o registro na tabela LANCTOESTOQ para a entrada na filial relacionada ao agente de terceirização */
                              NOVO_CODIGO_NT('LANCNF/FILIAL' || V_CDFILIAGENT, V_NRLANCTONFAG);
                              V_NRLANCTONFAG := SUBSTR(V_NRLANCTONFAG, 11, 10);

                              NOVO_CODIGO_NT('LANCTOEST'||V_CDFILIAGENT, V_NRLANESTENTRAG);
                              V_NRLANESTENTRAG := SUBSTR(V_NRLANESTENTRAG, 11, 10);

                              V_TPOPERRETORNO := NULL;
                              BEGIN
                                 SELECT CDTPOOPRETORNO
                                   INTO V_TPOPERRETORNO
                                   FROM PARAMGERAL
                                  WHERE CDPARGERAL = '0001';
                              EXCEPTION
                              WHEN NO_DATA_FOUND THEN
                                 V_TPOPERRETORNO := NULL;
                              END;

                              IF (V_TPOPERRETORNO IS NULL) THEN
                                 RAISE_APPLICATION_ERROR(-20501, 'Tipo de operação para geração de lançamento de estoque deve ser informado - (Parâmetros para Documentos Fiscais de Saída - Operador Logístico)', TRUE);
                              END IF;

                              INSERT INTO NOTAFISCAL
                                 (CDFILIAL, NRLANCTONF, CDFILIRECE, CDEMPRESA, CDINSCESTA, CDSERIE, CDINSCMUNI,
                                  IDTPIJURNF, NRINSJURNF, CDFORNECED, IDBLOQUEADO, IDDOCFISCAL, IDDOCFINANC,
                                  NRNOTAFISC, DTEMISSAO, DTENTRSAID, VRPRODUTOS, VRNOTAFISC, IDENTRSAIDOP,
                                  CDTIPOOPER, CDSERIEENTR, CDCLIENTE, CDFILIEMIT, IDORIGDESTNF)
                              VALUES
                                 (V_CDFILIAGENT, V_NRLANCTONFAG, V_CDFILIAGENT, V_CDEMPRESAAG, V_CDINSCESTAAG, NULL, V_CDINSCMUNIAG,
                                  V_IDTPIJURNF, V_NRINSJURNF, P_CLIENTE, 'N', 'N', 'S',
                                  NULL, P_INIVALID, P_INIVALID, NVL(V_LIQUIDO,0), NVL(V_TOTALNOTA,0), 'E',
                                  V_TPOPERRETORNO, NULL, NULL, NULL, V_IDORIGDESTNF);

                              INSERT INTO ITEMNOTAFISC
                                 (CDFILIAL, NRLANCTONF, NRSEQUITNOTA, CDFILIALIT, NRLANCTONFIT)
                              VALUES
                                 (V_CDFILIAGENT, V_NRLANCTONFAG, '001', P_FILIAL, P_LANCTONF);

                              INSERT INTO LANCTOESTOQ
                                 (CDFILIAL,
                                  NRLANCESTQ,
                                  NRLANCTONF,
                                  IDTPLANCTO,
                                  DTLANCESTQ,
                                  DSLANCESTQ,
                                  CDFILIMOVI,
                                  CDOPERADOR)
                              VALUES
                                 (V_CDFILIAGENT,
                                  V_NRLANESTENTRAG,
                                  V_NRLANCTONFAG,
                                  'E',
                                  P_INIVALID,
                                  'NF Remessa Armazenagem - lanç. ' || V_CDFILIEMIT || ' ' || P_LANCTONF,
                                  V_CDFILIAGENT,
                                  P_CDOPERADOR);

                              V_BOLANESTENTRAG := FALSE;
                           END IF;

                           INSERT INTO ITEMPRODUTO
                              (CDFILIAL, NRLANCTONF, NRSEQITPROD, CDPRODUTO,
                               CDPRODEMIS, DSPRODEMIS, IDATUVRESTOQ, QTITEMPROD,
                               VRUNITITEM, VRDESCITEM, VRTOTAITEM, VRCONTITEM,
                               VRBRUTITEM, IDCONFORITEM, CDFILIMOVI,
                               CDALMOXARIFE, CDLOCALESTOQ, NRLOTEESTQ, NRSUBLOTE,
                               CDPRODMOVI)
                           VALUES
                              (V_CDFILIAGENT, V_NRLANCTONFAG, C_ITLANCTOEST.NRSEQITPROD, C_ITLANCTOEST.CDPRODUTO,
                               C_ITLANCTOEST.CDARVPROD, C_ITLANCTOEST.NMPRODUTO, 'S', V_QTDELANCTO,
                               V_VRUNITLANCTO, C_ITLANCTOEST.VRDESCITEM, V_VRTOTALANCTO, V_VRTOTALANCTO,
                               V_VRTOTALANCTO, 'S', V_CDFILIAGENT,
                               V_CDALMOXARIFEAG, V_CDLOCALESTOQAG, V_NRLOTEESTQAG, V_NRSUBLOTEAG,
                               C_ITLANCTOEST.CDPRODESTO);

                           INSERT INTO ITLANCTOEST
                              (CDFILIAL,
                               NRLANCESTQ,
                               NRSEQUITEM,
                               CDPRODUTO,
                               DSLANCESTIT,
                               CDALMOXARIFE,
                               CDLOCALESTOQ,
                               NRLOTEESTQ,
                               NRSUBLOTE,
                               CDFILIMOVI,
                               CDPRODMOVI,
                               IDORDEMCLC,
                               DTLANCMOVI,
                               IDEVOLESTOQ,
                               QTTOTLANCTO,
                               IDTIPOMOVI,
                               QTLANCTOEST,
                               VRUNILANCTO,
                               VRTOTLANCTO,
                               VRLANCTOEST,
                               VRLANCTOBRUT,
                               IDORIGEMPROD)
                           VALUES
                              (V_CDFILIAGENT,
                               V_NRLANESTENTRAG,
                               C_ITLANCTOEST.NRSEQITPROD,
                               C_ITLANCTOEST.CDPRODUTO,
                               '',
                               V_CDALMOXARIFEAG,
                               V_CDLOCALESTOQAG,
                               V_NRLOTEESTQAG,
                               V_NRSUBLOTEAG,
                               V_CDFILIAGENT,
                               C_ITLANCTOEST.CDPRODESTO,
                               W_2,
                               P_INIVALID,
                               W_S,
                               V_QTDELANCTO,
                               W_2,
                               V_QTDELANCTO * V_FATOCONV,
                               V_VRUNITLANCTO,
                               V_VRTOTALANCTO,
                               V_TOTACONTAB,
                               V_TOTABRUT,
                               C_ITLANCTOEST.IDORIGEMPROD);
                        END IF;
                     END IF;
                  END IF;
               END IF;
            END IF;
         END LOOP;
      END IF;
   END IF;
   IF (V_CDSITUCRT <> '3') THEN
      SELECT COUNT(*)
         INTO V_EXISTDSDADOSADIC
         FROM ITEMPRODUTO
      WHERE CDFILIAL   = P_FILIAL
        AND NRLANCTONF = P_LANCTONF
        AND (CDFISCOPERSN IN ('101', '201') OR SUBSTR(CDFISCOPERSN,2, 3) IN ('101', '201'));
      IF V_EXISTDSDADOSADIC > 0 THEN
         V_CDIMPOSICMS  := null;
         FOR C_ICMS IN (SELECT CDIMPOSTO
                          FROM IMPOSTO
                         WHERE CDIMPOSTONFE = '00')
         LOOP
            V_CDIMPOSICMS := V_CDIMPOSICMS||C_ICMS.CDIMPOSTO||'_';
         END LOOP;
         IF V_CDIMPOSICMS IS NOT NULL THEN
            SELECT SUM(VRIMPOSTOIT) VRIMPOSTOICMS, MAX(VRALIQITEM) VRALIQUOTAICMS
              INTO V_APROVICMS, V_ALIQAPROVICMS
              FROM ITEMPROIMPOS I
             WHERE I.CDFILIAL   = P_FILIAL
               AND I.NRLANCTONF   = P_LANCTONF
               AND I.NRITPROIMPOS = '1'
               AND (INSTR(V_CDIMPOSICMS,I.CDIMPOSTO||'_') > 0)
               AND I.NRSEQITPROD IN (SELECT NRSEQITPROD
                                       FROM ITEMPRODUTO IP
                                      WHERE IP.CDFILIAL = P_FILIAL
                                        AND IP.NRLANCTONF = P_LANCTONF
                                        AND (IP.CDFISCOPERSN IN ('101', '201') OR SUBSTR(IP.CDFISCOPERSN,2, 3) IN ('101', '201')));

            SELECT COUNT(*)
              INTO V_EXISTDSDADOSADIC
              FROM DADOSADIC
             WHERE CDFILIAL = P_FILIAL
               AND NRLANCTONF = P_LANCTONF
               AND DSDADOADIC LIKE 'Permite o aproveitamento do credito do ICMS no valor de R$ %';

            IF V_EXISTDSDADOSADIC = 0 THEN
               INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
                              VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, 'Permite o aproveitamento do credito do ICMS no valor de R$ '||DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_APROVICMS, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_APROVICMS, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_APROVICMS, 2), '9999999999999.99')))|| ' corresp. a alíquota de '|| DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_ALIQAPROVICMS, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_ALIQAPROVICMS, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_ALIQAPROVICMS, 2), '9999999999999.99'))) || '% conf. Art.23 da LC 123/06.');

               V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
            ELSE
               UPDATE DADOSADIC
                  SET DSDADOADIC = 'Permite o aproveitamento do credito do ICMS no valor de R$ '||DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_APROVICMS, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_APROVICMS, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_APROVICMS, 2), '9999999999999.99')))|| ' corresp. a alíquota de '|| DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_ALIQAPROVICMS, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_ALIQAPROVICMS, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_ALIQAPROVICMS, 2), '9999999999999.99'))) || '% conf. Art.23 da LC 123/06.'
                 WHERE CDFILIAL = P_FILIAL
                   AND NRLANCTONF = P_LANCTONF
                   AND DSDADOADIC LIKE 'Permite o aproveitamento do credito do ICMS no valor de R$ %';
            END IF;
         END IF;
      END IF;
   END IF;
   /*Portaria CAT 37/2002*/
	IF (V_IDNTRANSCREICMS = 'S') THEN
		SELECT COUNT(*)
          INTO V_EXISTDSDADOSADIC
          FROM DADOSADIC
         WHERE CDFILIAL = P_FILIAL
           AND NRLANCTONF = P_LANCTONF
           AND DSDADOADIC LIKE 'NF emitida de acordo com o Regime Especial - Portaria CAT 37/2002';

		IF V_EXISTDSDADOSADIC = 0 THEN
			INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
					  VALUES (P_FILIAL, P_LANCTONF, V_DADOADIC, 'NF emitida de acordo com o Regime Especial - Portaria CAT 37/2002');
			      V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
			ELSE
				UPDATE DADOSADIC
				SET DSDADOADIC = 'NF emitida de acordo com o Regime Especial - Portaria CAT 37/2002'
				WHERE CDFILIAL = P_FILIAL
				AND NRLANCTONF = P_LANCTONF
				AND DSDADOADIC LIKE 'NF emitida de acordo com o Regime Especial - Portaria CAT 37/2002';
		END IF;
	ELSE
		DELETE FROM DADOSADIC
		WHERE CDFILIAL = P_FILIAL
        AND NRLANCTONF = P_LANCTONF
        AND DSDADOADIC LIKE 'NF emitida de acordo com o Regime Especial - Portaria CAT 37/2002';		
	END IF;
   /*Mensagem referente ao ICMS 60 - cálculo realizado na CALCULA_ICMS60*/
   DELETE FROM DADOSADIC
    WHERE CDFILIAL = P_FILIAL
      AND NRLANCTONF = P_LANCTONF
      AND DSDADOADIC LIKE 'ICMS cobrado anteriormente por substituição tributária: BC %';

     SELECT SUM(VRBCITENTR), SUM(VRIMPITENTR)
       INTO V_VRBCITENTR, V_VRIMPITENTR
       FROM ITEMPRODUTO IP, ITEMPROIMPOS II
      WHERE IP.CDFILIAL = II.CDFILIAL
        AND IP.NRLANCTONF = II.NRLANCTONF
        AND IP.NRSEQITPROD = II.NRSEQITPROD
        AND IP.CDFILIAL = P_FILIAL
        AND IP.NRLANCTONF = P_LANCTONF
        AND SUBSTR(IP.CDSITUTRIBPR, 2, 2) = '60';

      IF V_VRIMPITENTR <> 0 THEN
           SELECT COUNT(*)
             INTO V_EXISTDSDADOSADIC
             FROM DADOSADIC
            WHERE CDFILIAL = P_FILIAL
              AND NRLANCTONF = P_LANCTONF
              AND DSDADOADIC LIKE 'ICMS cobrado anteriormente por substituição tributária: BC %';

          IF V_EXISTDSDADOSADIC = 0 THEN
             INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
                            VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, 'ICMS cobrado anteriormente por substituição tributária: BC '||DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_VRBCITENTR, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_VRBCITENTR, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_VRBCITENTR, 2), '9999999999999.99')))|| ' - Valor '|| DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_VRIMPITENTR, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_VRIMPITENTR, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_VRIMPITENTR, 2), '9999999999999.99'))));
             V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
          END IF;
      END IF;
   /*Grava o numero do pedido nos dados adicionais da nota*/
   IF V_IDADICNRPEDIDO = 'S' THEN
      DELETE FROM DADOSADIC
       WHERE CDFILIAL = P_FILIAL
         AND NRLANCTONF = P_LANCTONF
         AND DSDADOADIC LIKE 'Número do Pedido:%';

         FOR C_NRPEDIDO IN (SELECT DISTINCT I.NRPEDIDO
                              FROM ITEMPRODUTO I LEFT JOIN PEDIDO P ON (I.CDFILIALPED = P.CDFILIAL)
                                                                   AND (I.NRPEDIDO = P.NRPEDIDO)
                             WHERE I.NRLANCTONF = P_LANCTONF
                               AND I.CDFILIAL = P_FILIAL)
         LOOP
            IF C_NRPEDIDO.NRPEDIDO IS NOT NULL THEN
               V_DESCNRPEDIDO := C_NRPEDIDO.NRPEDIDO||' - '||V_DESCNRPEDIDO;
            END IF;

            IF (V_DESCNRPEDIDO IS NOT NULL) OR (TRIM(V_DESCNRPEDIDO) <> '') THEN
               IF (TRIM(SUBSTR(V_DESCNRPEDIDO, LENGTH(V_DESCNRPEDIDO) - 2, 3)) = '-') THEN
                  V_DESCNRPEDIDO := TRIM(SUBSTR(V_DESCNRPEDIDO, 1, LENGTH(V_DESCNRPEDIDO) - 3));
               END IF;
            END IF;
         END LOOP;

		    IF (V_DESCNRPEDIDO IS NOT NULL) OR (TRIM(V_DESCNRPEDIDO) <> '') THEN
            INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
                  VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, 'Número do Pedido: '||V_DESCNRPEDIDO);
            V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
   		 END IF;
   END IF;
   /*Sapore - 197077*/
   DELETE FROM DADOSADIC
    WHERE CDFILIAL = P_FILIAL
      AND NRLANCTONF = P_LANCTONF
      AND DSDADOADIC LIKE 'O valor da carga tributária do ICMS de São Paulo é de R$%';

   BEGIN
      SELECT SUM(VRIMPOSTOIT)
        INTO V_VRCARGATRIB
        FROM ITEMPROIMPOS II, IMPOSTO I
       WHERE II.CDIMPOSTO = I.CDIMPOSTO
         AND I.CDIMPOSTONFE = '03'
         AND II.NRITPROIMPOS = '1'
         AND II.CDFILIAL = P_FILIAL
         AND II.NRLANCTONF = P_LANCTONF;
   EXCEPTION
      WHEN NO_DATA_FOUND THEN
         V_VRCARGATRIB := 0;
   END;

   IF V_VRCARGATRIB > 0 THEN
      INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
                     VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, 'O valor da carga tributária do ICMS de São Paulo é de R$ '||DECODE(SUBSTR(LTRIM(TO_CHAR(ROUND(V_VRCARGATRIB, 2), '9999999999999.99')), 1, 1), '.', '0'||LTRIM(TO_CHAR(ROUND(V_VRCARGATRIB, 2), '9999999999999.99')), LTRIM(TO_CHAR(ROUND(V_VRCARGATRIB, 2), '9999999999999.99')))||'.');
      V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
   END IF;

   /*197863*/
   IF (V_IDUTILNFSE = 'S') AND (V_IDIMPDSPRODEMIS = 'S') THEN
      V_DSPRODEMISIMP := '';
      V_TOTIMPRET := 0;
      V_VRLIQUIDO := 0;
      FOR C_PROD IN (SELECT IP.VRTOTAITEM, IP.NRSEQITPROD, IP.CDPRODEMIS, P.NMPRODUTO
                       FROM ITEMPRODUTO IP, PRODUTO P
                      WHERE IP.CDFILIAL = P_FILIAL
                        AND IP.NRLANCTONF = P_LANCTONF
                        AND IP.CDPRODUTO = P.CDPRODUTO)
      LOOP
         /*FOR C_IMP IN (SELECT IMP.SGIMPOSTO, ROUND(II.VRIMPOSTOIT, 2) AS VRIMPOSTOIT  -- Substituição desse bloco pelo de baixo a pedido do Walter Louback - Pode retirar
                          FROM ITEMPROIMPOS II, IMPOSTO IMP
                         WHERE II.CDFILIAL = P_FILIAL
                           AND II.NRLANCTONF = P_LANCTONF
                           AND II.CDIMPOSTO = IMP.CDIMPOSTO
                           AND IMP.IDTRATIMPO IN ('R','D')
                           AND II.NRITPROIMPOS = '1'
                           AND II.NRSEQITPROD = C_PROD.NRSEQITPROD
                           AND II.VRIMPOSTOIT > 0)
         LOOP
            V_DSPRODEMISIMP := V_DSPRODEMISIMP||' '||C_IMP.SGIMPOSTO||': R$'||TRIM(TO_CHAR(C_IMP.VRIMPOSTOIT, '9999999999999.99'));
            V_TOTIMPRET := V_TOTIMPRET + C_IMP.VRIMPOSTOIT;
         END LOOP;*/
         V_DSPRODEMISIMP := '';
         FOR C_IMP IN (SELECT IMP.SGIMPOSTO, DECODE(SUBSTR(LTRIM(TO_CHAR(II.VRIMPOSTOIT, '9999999999999.99')), 1, 1), '.', '0'||
              LTRIM(TO_CHAR(ROUND(II.VRIMPOSTOIT, 2), '9999999999999.99')),
              LTRIM(TO_CHAR(ROUND(II.VRIMPOSTOIT, 2), '9999999999999.99'))) AS VRIMPOSTOITDESC, II.VRIMPOSTOIT
                          FROM ITEMPROIMPOS II, IMPOSTO IMP
                         WHERE II.CDFILIAL = P_FILIAL
                           AND II.NRLANCTONF = P_LANCTONF
                           AND II.CDIMPOSTO = IMP.CDIMPOSTO
                           AND IMP.IDTRATIMPO IN ('R','D')
                           AND II.NRITPROIMPOS = '1'
                           AND II.NRSEQITPROD = C_PROD.NRSEQITPROD
                           AND II.VRIMPOSTOIT > 0)
         LOOP
            V_DSPRODEMISIMP := V_DSPRODEMISIMP||'  '|| C_IMP.SGIMPOSTO|| ': R$'|| C_IMP.VRIMPOSTOITDESC; 

            V_TOTIMPRET := V_TOTIMPRET + C_IMP.VRIMPOSTOIT;
         END LOOP;
         IF V_TOTIMPRET > 0 THEN
           V_VRLIQUIDO := C_PROD.VRTOTAITEM - V_TOTIMPRET;
         END IF;
         IF (V_DSPRODEMISIMP IS NOT NULL) AND (V_VRLIQUIDO > 0) THEN
            UPDATE ITEMPRODUTO
               SET DSPRODEMIS = C_PROD.CDPRODEMIS||' - '||C_PROD.NMPRODUTO||V_DSPRODEMISIMP||' Valor Líquido: R$'||TRIM(TO_CHAR(ROUND(V_VRLIQUIDO, 2), '9999999999999.99'))
             WHERE CDFILIAL = P_FILIAL
               AND NRLANCTONF = P_LANCTONF
               AND NRSEQITPROD = C_PROD.NRSEQITPROD;
         END IF;
      END LOOP;
   END IF;
   /*197863*/
   /*ICMS02*/
   SELECT SUM(VRBCMONO), SUM(VRICMSMONO), SUM(VRALIQMONO)
     INTO V_BCICMSMONO, V_ICMSMONO, V_ALIQICMSMONO
     FROM ITEMPRODUTO IP, ITEMPROIMPOS II
    WHERE IP.CDFILIAL = II.CDFILIAL
      AND IP.NRLANCTONF = II.NRLANCTONF
      AND IP.NRSEQITPROD = II.NRSEQITPROD
      AND IP.CDFILIAL = P_FILIAL
      AND IP.NRLANCTONF = P_LANCTONF
      AND SUBSTR(IP.CDSITUTRIBPR, 2, 2) = '02';

   IF V_ICMSMONO > 0 THEN
      DELETE FROM DADOSADIC
       WHERE CDFILIAL = P_FILIAL
         AND NRLANCTONF = P_LANCTONF
         AND DSDADOADIC LIKE 'ICMS monofásico próprio: BC%';

      INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
                     VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, 'ICMS monofásico próprio: BC '||TRIM(TO_CHAR(ROUND(V_BCICMSMONO, 4), '9999999999999.9999'))||
                                                              '; Alíquota: R$ '||TRIM(TO_CHAR(V_ALIQICMSMONO, '9999999999999.9999'))||
                                                              '; ICMS mono: R$ '||TRIM(TO_CHAR(ROUND(V_ICMSMONO, 2), '9999999999999.99')));
      V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
   END IF;

   V_BCICMSMONO := 0;
   V_ICMSMONO := 0;
   V_ALIQICMSMONO := 0;
   V_BCICMSMONORET := 0;
   V_ICMSMONORET := 0;
   V_ALIQICMSMONORET := 0;

   /*ICMS15*/
   SELECT SUM(VRBCMONO), SUM(VRICMSMONO), SUM(VRALIQMONO), SUM(VRICMSMONORET), SUM(VRALIQMONORET), SUM(VRBCMONORET)
     INTO V_BCICMSMONO, V_ICMSMONO, V_ALIQICMSMONO, V_ICMSMONORET, V_ALIQICMSMONORET, V_BCICMSMONORET
     FROM ITEMPRODUTO IP, ITEMPROIMPOS II
    WHERE IP.CDFILIAL = II.CDFILIAL
      AND IP.NRLANCTONF = II.NRLANCTONF
      AND IP.NRSEQITPROD = II.NRSEQITPROD
      AND IP.CDFILIAL = P_FILIAL
      AND IP.NRLANCTONF = P_LANCTONF
      AND SUBSTR(IP.CDSITUTRIBPR, 2, 2) = '15';

   IF V_ICMSMONO > 0 THEN
      DELETE FROM DADOSADIC
       WHERE CDFILIAL = P_FILIAL
         AND NRLANCTONF = P_LANCTONF
         AND DSDADOADIC LIKE 'ICMS monofásico próprio: BC%';

      INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
                     VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, 'ICMS monofásico próprio: BC '||TRIM(TO_CHAR(ROUND(V_BCICMSMONO, 4), '9999999999999.9999'))||
                                                              ' (em litros); Alíquota: R$ '||TRIM(TO_CHAR(V_ALIQICMSMONO, '9999999999999.9999'))||
                                                              '; ICMS mono: R$ '||TRIM(TO_CHAR(ROUND(V_ICMSMONO, 2), '9999999999999.99')));
      V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
   END IF;

   IF V_ICMSMONORET > 0 THEN
      DELETE FROM DADOSADIC
       WHERE CDFILIAL = P_FILIAL
         AND NRLANCTONF = P_LANCTONF
         AND DSDADOADIC LIKE 'ICMS monofásico sujeito a retenção: BC%';

      INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
                     VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, 'ICMS monofásico sujeito a retenção: BC '||TRIM(TO_CHAR(ROUND(V_BCICMSMONORET, 4), '9999999999999.9999'))||
                                                              ' (em litros); Alíquota: R$ '||TRIM(TO_CHAR(V_ALIQICMSMONORET, '9999999999999.9999'))||
                                                              '; ICMS mono: R$ '||TRIM(TO_CHAR(ROUND(V_ICMSMONORET, 2), '9999999999999.99')));
      V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
   END IF;

   V_BCICMSMONO := 0;
   V_ICMSMONO := 0;
   V_ALIQICMSMONO := 0;

   /*ICMS53*/
   SELECT SUM(VRBCMONO), SUM(VRICMSMONO), SUM(VRALIQMONO)
     INTO V_BCICMSMONO, V_ICMSMONO, V_ALIQICMSMONO
     FROM ITEMPRODUTO IP, ITEMPROIMPOS II
    WHERE IP.CDFILIAL = II.CDFILIAL
      AND IP.NRLANCTONF = II.NRLANCTONF
      AND IP.NRSEQITPROD = II.NRSEQITPROD
      AND IP.CDFILIAL = P_FILIAL
      AND IP.NRLANCTONF = P_LANCTONF
      AND SUBSTR(IP.CDSITUTRIBPR, 2, 2) = '53';

   IF V_ICMSMONO > 0 THEN
      DELETE FROM DADOSADIC
       WHERE CDFILIAL = P_FILIAL
         AND NRLANCTONF = P_LANCTONF
         AND DSDADOADIC LIKE 'ICMS monofásico sobre combustíveis diferido conforme Convênio ICMS 199/2022%';

      INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
                     VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, 'ICMS monofásico sobre combustíveis diferido conforme Convênio ICMS 199/2022;');
      V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
   END IF;

   V_BCICMSMONO := 0;
   V_ICMSMONO := 0;
   V_ALIQICMSMONO := 0;

   /*ICMS61*/
   SELECT SUM(VRBCMONO), SUM(VRICMSMONO), SUM(VRALIQMONO)
     INTO V_BCICMSMONO, V_ICMSMONO, V_ALIQICMSMONO
     FROM ITEMPRODUTO IP, ITEMPROIMPOS II
    WHERE IP.CDFILIAL = II.CDFILIAL
      AND IP.NRLANCTONF = II.NRLANCTONF
      AND IP.NRSEQITPROD = II.NRSEQITPROD
      AND IP.CDFILIAL = P_FILIAL
      AND IP.NRLANCTONF = P_LANCTONF
      AND SUBSTR(IP.CDSITUTRIBPR, 2, 2) = '61';

   IF V_ICMSMONO > 0 THEN
      DELETE FROM DADOSADIC
       WHERE CDFILIAL = P_FILIAL
         AND NRLANCTONF = P_LANCTONF
         AND DSDADOADIC LIKE 'ICMS monofásico sobre combustíveis cobrado anteriormente conforme Convênio ICMS 199/2022%';

      INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
                     VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, 'ICMS monofásico sobre combustíveis cobrado anteriormente conforme Convênio ICMS 199/2022;');
      V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
   END IF;
   /*197863*/
   IF (V_IDSISTEMA = w_EXP) THEN
      RECALCULA_PEDIDO_EXP(P_FILIAL,P_LANCTONF);
   END IF;

   UPDATE NOTAFISCAL
      SET CDCFOPINFUSU = NULL
    WHERE CDFILIAL     = P_FILIAL
      AND NRLANCTONF   = P_LANCTONF;

   UPDATE ITEMPRODUTO
      SET CDCFOPINFUSU = NULL
    WHERE CDFILIAL     = P_FILIAL
      AND NRLANCTONF   = P_LANCTONF;

   /*204437
   DELETE FROM DADOSADIC
    WHERE CDFILIAL = P_FILIAL
      AND NRLANCTONF = P_LANCTONF
      AND DSDADOADIC LIKE 'FCI PRODUTO%';

   FOR C_INFOFCI IN (SELECT CDPRODEMIS||' - '||DSPRODEMIS AS PROD, LT.NRCTRLFCI
                       FROM ITEMPRODUTO IP, LOTE LT, PRODUTO P
                      WHERE IP.CDFILIAL = P_FILIAL
                        AND IP.NRLANCTONF = P_LANCTONF
                        AND IP.CDFILIMOVI = LT.CDFILIAL(+)
                        AND IP.NRLOTEESTQ = LT.NRLOTEESTQ(+)
                        AND IP.NRSUBLOTE  = LT.NRSUBLOTE(+)
                        AND IP.CDPRODUTO  = P.CDPRODUTO
                        AND NVL(IP.CDPRODMOVI, P.CDPRODESTO) = LT.CDPRODUTO(+)
                        AND LT.NRCTRLFCI IS NOT NULL) LOOP
      INSERT INTO DADOSADIC(CDFILIAL, NRLANCTONF, NRDADOADIC, DSDADOADIC)
                     VALUES(P_FILIAL, P_LANCTONF, V_DADOADIC, 'FCI PRODUTO '||C_INFOFCI.PROD||': '||C_INFOFCI.NRCTRLFCI);
      V_DADOADIC := LPAD(RTRIM(TO_CHAR(TO_NUMBER(V_DADOADIC) + 1)),3,0);
   END LOOP;*/      
END;
/

-- VERSAO --
BEGIN ATUVEROBJ('IMPOSTO_SAIDA','6.49.xxx'); END;
/
